{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sahil\\\\OneDrive\\\\Desktop\\\\docfixer\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsPDF } from \"jspdf\";\nimport { PDFDocument } from \"pdf-lib\";\nimport Tesseract from \"tesseract.js\";\nimport \"./styles/App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [imageURL, setImageURL] = useState(null);\n  const [processedImage, setProcessedImage] = useState(null);\n  const [filter, setFilter] = useState(\"none\");\n  const [filterIntensity, setFilterIntensity] = useState(100);\n  const [compression, setCompression] = useState(100);\n  const [ocrText, setOcrText] = useState(\"\");\n  const [scannedFiles, setScannedFiles] = useState([]);\n\n  // File upload\n  const handleFileChange = e => {\n    const uploaded = e.target.files[0];\n    if (!uploaded) return;\n    setFile(uploaded);\n    setImageURL(URL.createObjectURL(uploaded));\n    setProcessedImage(null);\n    setOcrText(\"\");\n  };\n  const handleDrop = e => {\n    e.preventDefault();\n    const dropped = e.dataTransfer.files[0];\n    if (!dropped) return;\n    setFile(dropped);\n    setImageURL(URL.createObjectURL(dropped));\n    setProcessedImage(null);\n    setOcrText(\"\");\n  };\n  const handleDragOver = e => e.preventDefault();\n\n  // Background remover\n  const handleRemoveBG = async () => {\n    if (!file) return alert(\"Upload an image first\");\n    if (file.type.includes(\"pdf\")) return alert(\"Works only with images\");\n    const formData = new FormData();\n    formData.append(\"image_file\", file);\n    try {\n      const res = await axios.post(\"https://api.remove.bg/v1.0/removebg\", formData, {\n        headers: {\n          \"X-Api-Key\": \"VSNXBaMjvgBp6NjjRheLV3cW\"\n        },\n        responseType: \"blob\"\n      });\n      setProcessedImage(URL.createObjectURL(res.data));\n    } catch (err) {\n      alert(\"Remove.bg API error: \" + err.message);\n    }\n  };\n\n  // Filter\n  const getFilterStyle = () => {\n    const i = Number(filterIntensity);\n    switch (filter) {\n      case \"grayscale\":\n        return {\n          filter: `grayscale(${i}%)`\n        };\n      case \"sepia\":\n        return {\n          filter: `sepia(${i}%)`\n        };\n      case \"invert\":\n        return {\n          filter: `invert(${i}%)`\n        };\n      case \"blur\":\n        return {\n          filter: `blur(${i / 20}px)`\n        };\n      case \"brightness\":\n        return {\n          filter: `brightness(${i}%)`\n        };\n      case \"contrast\":\n        return {\n          filter: `contrast(${i}%)`\n        };\n      case \"saturate\":\n        return {\n          filter: `saturate(${i}%)`\n        };\n      case \"hue-rotate\":\n        return {\n          filter: `hue-rotate(${i * 3.6}deg)`\n        };\n      default:\n        return {};\n    }\n  };\n\n  // Generate image (with filters + compression)\n  const generateFinalImage = () => {\n    return new Promise(resolve => {\n      const source = processedImage || imageURL;\n      if (!source) return resolve(null);\n      const img = new Image();\n      img.crossOrigin = \"anonymous\";\n      img.onload = () => {\n        const canvas = document.createElement(\"canvas\");\n        const ctx = canvas.getContext(\"2d\");\n        canvas.width = img.width;\n        canvas.height = img.height;\n        ctx.filter = getFilterStyle().filter || \"none\";\n        ctx.drawImage(img, 0, 0);\n        resolve(canvas.toDataURL(\"image/jpeg\", Number(compression) / 100));\n      };\n      img.src = source;\n    });\n  };\n\n  // Download\n  const handleDownloadImage = async format => {\n    const finalDataURL = await generateFinalImage();\n    if (!finalDataURL) return;\n    if (format === \"pdf\") {\n      const doc = new jsPDF();\n      doc.addImage(finalDataURL, \"JPEG\", 10, 10, 190, 0);\n      doc.save(\"docfixer.pdf\");\n    } else {\n      const link = document.createElement(\"a\");\n      link.href = finalDataURL;\n      link.download = `docfixer.${format}`;\n      link.click();\n    }\n  };\n\n  // OCR\n  const handleOCR = async () => {\n    if (!file || !file.type.startsWith(\"image/\")) return alert(\"Upload an image for OCR\");\n    setOcrText(\"Processing...\");\n    Tesseract.recognize(file, \"eng\").then(({\n      data: {\n        text\n      }\n    }) => setOcrText(text));\n  };\n\n  // Doc scanner\n  const handleDocScanner = async () => {\n    if (!scannedFiles.length) return alert(\"No images scanned yet\");\n    const pdfDoc = await PDFDocument.create();\n    for (let f of scannedFiles) {\n      const bytes = await f.arrayBuffer();\n      const img = f.type.includes(\"png\") ? await pdfDoc.embedPng(bytes) : await pdfDoc.embedJpg(bytes);\n      const page = pdfDoc.addPage([img.width, img.height]);\n      page.drawImage(img, {\n        x: 0,\n        y: 0,\n        width: img.width,\n        height: img.height\n      });\n    }\n    const pdfBytes = await pdfDoc.save();\n    const blob = new Blob([pdfBytes], {\n      type: \"application/pdf\"\n    });\n    const link = document.createElement(\"a\");\n    link.href = URL.createObjectURL(blob);\n    link.download = \"scanned.pdf\";\n    link.click();\n  };\n  const addScannedFile = e => setScannedFiles(p => [...p, ...Array.from(e.target.files)]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Tools\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tool-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Background Remover\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleRemoveBG,\n          children: \"Remove BG\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tool-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Filters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: filter,\n          onChange: e => setFilter(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"none\",\n            children: \"None\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"grayscale\",\n            children: \"Grayscale\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"sepia\",\n            children: \"Sepia\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"invert\",\n            children: \"Invert\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"blur\",\n            children: \"Blur\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"brightness\",\n            children: \"Brightness\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"contrast\",\n            children: \"Contrast\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"saturate\",\n            children: \"Saturate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"hue-rotate\",\n            children: \"Hue Rotate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Intensity: \", filterIntensity, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"0\",\n          max: \"100\",\n          value: filterIntensity,\n          onChange: e => setFilterIntensity(Number(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tool-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Compression\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"10\",\n          max: \"100\",\n          value: compression,\n          onChange: e => setCompression(Number(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [compression, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tool-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Download\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDownloadImage(\"jpeg\"),\n          children: \"JPEG\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDownloadImage(\"png\"),\n          children: \"PNG\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDownloadImage(\"pdf\"),\n          children: \"PDF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tool-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"OCR Extractor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleOCR,\n          children: \"Run OCR\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tool-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Doc Scanner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          multiple: true,\n          onChange: addScannedFile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDocScanner,\n          children: \"Create PDF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editor\",\n      children: [!imageURL ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-zone\",\n        onDrop: handleDrop,\n        onDragOver: handleDragOver,\n        onClick: () => document.getElementById(\"fileInput\").click(),\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Drag & Drop file here or click to upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"fileInput\",\n          type: \"file\",\n          accept: \"image/*,application/pdf\",\n          onChange: handleFileChange,\n          style: {\n            display: \"none\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n        src: processedImage || imageURL,\n        alt: \"Preview\",\n        style: {\n          maxWidth: \"100%\",\n          ...getFilterStyle()\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }, this), ocrText && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 20\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"OCR Extracted Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"8\",\n          value: ocrText,\n          readOnly: true,\n          style: {\n            width: \"100%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"/WmNQQZQm2PiIc5qcptz5RPRZbQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsPDF","PDFDocument","Tesseract","jsxDEV","_jsxDEV","App","_s","file","setFile","imageURL","setImageURL","processedImage","setProcessedImage","filter","setFilter","filterIntensity","setFilterIntensity","compression","setCompression","ocrText","setOcrText","scannedFiles","setScannedFiles","handleFileChange","e","uploaded","target","files","URL","createObjectURL","handleDrop","preventDefault","dropped","dataTransfer","handleDragOver","handleRemoveBG","alert","type","includes","formData","FormData","append","res","post","headers","responseType","data","err","message","getFilterStyle","i","Number","generateFinalImage","Promise","resolve","source","img","Image","crossOrigin","onload","canvas","document","createElement","ctx","getContext","width","height","drawImage","toDataURL","src","handleDownloadImage","format","finalDataURL","doc","addImage","save","link","href","download","click","handleOCR","startsWith","recognize","then","text","handleDocScanner","length","pdfDoc","create","f","bytes","arrayBuffer","embedPng","embedJpg","page","addPage","x","y","pdfBytes","blob","Blob","addScannedFile","p","Array","from","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","value","onChange","min","max","multiple","onDrop","onDragOver","getElementById","id","accept","style","display","alt","maxWidth","marginTop","rows","readOnly","_c","$RefreshReg$"],"sources":["C:/Users/sahil/OneDrive/Desktop/docfixer/frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { jsPDF } from \"jspdf\";\r\nimport { PDFDocument } from \"pdf-lib\";\r\nimport Tesseract from \"tesseract.js\";\r\nimport \"./styles/App.css\";\r\n\r\nfunction App() {\r\n  const [file, setFile] = useState(null);\r\n  const [imageURL, setImageURL] = useState(null);\r\n  const [processedImage, setProcessedImage] = useState(null);\r\n  const [filter, setFilter] = useState(\"none\");\r\n  const [filterIntensity, setFilterIntensity] = useState(100);\r\n  const [compression, setCompression] = useState(100);\r\n  const [ocrText, setOcrText] = useState(\"\");\r\n  const [scannedFiles, setScannedFiles] = useState([]);\r\n\r\n  // File upload\r\n  const handleFileChange = (e) => {\r\n    const uploaded = e.target.files[0];\r\n    if (!uploaded) return;\r\n    setFile(uploaded);\r\n    setImageURL(URL.createObjectURL(uploaded));\r\n    setProcessedImage(null);\r\n    setOcrText(\"\");\r\n  };\r\n  const handleDrop = (e) => {\r\n    e.preventDefault();\r\n    const dropped = e.dataTransfer.files[0];\r\n    if (!dropped) return;\r\n    setFile(dropped);\r\n    setImageURL(URL.createObjectURL(dropped));\r\n    setProcessedImage(null);\r\n    setOcrText(\"\");\r\n  };\r\n  const handleDragOver = (e) => e.preventDefault();\r\n\r\n  // Background remover\r\n  const handleRemoveBG = async () => {\r\n    if (!file) return alert(\"Upload an image first\");\r\n    if (file.type.includes(\"pdf\")) return alert(\"Works only with images\");\r\n    const formData = new FormData();\r\n    formData.append(\"image_file\", file);\r\n    try {\r\n      const res = await axios.post(\r\n        \"https://api.remove.bg/v1.0/removebg\",\r\n        formData,\r\n        {\r\n          headers: { \"X-Api-Key\": \"VSNXBaMjvgBp6NjjRheLV3cW\" },\r\n          responseType: \"blob\",\r\n        }\r\n      );\r\n      setProcessedImage(URL.createObjectURL(res.data));\r\n    } catch (err) {\r\n      alert(\"Remove.bg API error: \" + err.message);\r\n    }\r\n  };\r\n\r\n  // Filter\r\n  const getFilterStyle = () => {\r\n    const i = Number(filterIntensity);\r\n    switch (filter) {\r\n      case \"grayscale\": return { filter: `grayscale(${i}%)` };\r\n      case \"sepia\": return { filter: `sepia(${i}%)` };\r\n      case \"invert\": return { filter: `invert(${i}%)` };\r\n      case \"blur\": return { filter: `blur(${i / 20}px)` };\r\n      case \"brightness\": return { filter: `brightness(${i}%)` };\r\n      case \"contrast\": return { filter: `contrast(${i}%)` };\r\n      case \"saturate\": return { filter: `saturate(${i}%)` };\r\n      case \"hue-rotate\": return { filter: `hue-rotate(${i * 3.6}deg)` };\r\n      default: return {};\r\n    }\r\n  };\r\n\r\n  // Generate image (with filters + compression)\r\n  const generateFinalImage = () => {\r\n    return new Promise((resolve) => {\r\n      const source = processedImage || imageURL;\r\n      if (!source) return resolve(null);\r\n      const img = new Image();\r\n      img.crossOrigin = \"anonymous\";\r\n      img.onload = () => {\r\n        const canvas = document.createElement(\"canvas\");\r\n        const ctx = canvas.getContext(\"2d\");\r\n        canvas.width = img.width;\r\n        canvas.height = img.height;\r\n        ctx.filter = getFilterStyle().filter || \"none\";\r\n        ctx.drawImage(img, 0, 0);\r\n        resolve(canvas.toDataURL(\"image/jpeg\", Number(compression) / 100));\r\n      };\r\n      img.src = source;\r\n    });\r\n  };\r\n\r\n  // Download\r\n  const handleDownloadImage = async (format) => {\r\n    const finalDataURL = await generateFinalImage();\r\n    if (!finalDataURL) return;\r\n    if (format === \"pdf\") {\r\n      const doc = new jsPDF();\r\n      doc.addImage(finalDataURL, \"JPEG\", 10, 10, 190, 0);\r\n      doc.save(\"docfixer.pdf\");\r\n    } else {\r\n      const link = document.createElement(\"a\");\r\n      link.href = finalDataURL;\r\n      link.download = `docfixer.${format}`;\r\n      link.click();\r\n    }\r\n  };\r\n\r\n  // OCR\r\n  const handleOCR = async () => {\r\n    if (!file || !file.type.startsWith(\"image/\"))\r\n      return alert(\"Upload an image for OCR\");\r\n    setOcrText(\"Processing...\");\r\n    Tesseract.recognize(file, \"eng\").then(({ data: { text } }) =>\r\n      setOcrText(text)\r\n    );\r\n  };\r\n\r\n  // Doc scanner\r\n  const handleDocScanner = async () => {\r\n    if (!scannedFiles.length) return alert(\"No images scanned yet\");\r\n    const pdfDoc = await PDFDocument.create();\r\n    for (let f of scannedFiles) {\r\n      const bytes = await f.arrayBuffer();\r\n      const img = f.type.includes(\"png\")\r\n        ? await pdfDoc.embedPng(bytes)\r\n        : await pdfDoc.embedJpg(bytes);\r\n      const page = pdfDoc.addPage([img.width, img.height]);\r\n      page.drawImage(img, { x: 0, y: 0, width: img.width, height: img.height });\r\n    }\r\n    const pdfBytes = await pdfDoc.save();\r\n    const blob = new Blob([pdfBytes], { type: \"application/pdf\" });\r\n    const link = document.createElement(\"a\");\r\n    link.href = URL.createObjectURL(blob);\r\n    link.download = \"scanned.pdf\";\r\n    link.click();\r\n  };\r\n  const addScannedFile = (e) =>\r\n    setScannedFiles((p) => [...p, ...Array.from(e.target.files)]);\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <div className=\"sidebar\">\r\n        <h2>Tools</h2>\r\n\r\n        <div className=\"tool-section\">\r\n          <h3>Background Remover</h3>\r\n          <button onClick={handleRemoveBG}>Remove BG</button>\r\n        </div>\r\n\r\n        <div className=\"tool-section\">\r\n          <h3>Filters</h3>\r\n          <select value={filter} onChange={(e) => setFilter(e.target.value)}>\r\n            <option value=\"none\">None</option>\r\n            <option value=\"grayscale\">Grayscale</option>\r\n            <option value=\"sepia\">Sepia</option>\r\n            <option value=\"invert\">Invert</option>\r\n            <option value=\"blur\">Blur</option>\r\n            <option value=\"brightness\">Brightness</option>\r\n            <option value=\"contrast\">Contrast</option>\r\n            <option value=\"saturate\">Saturate</option>\r\n            <option value=\"hue-rotate\">Hue Rotate</option>\r\n          </select>\r\n          <label>Intensity: {filterIntensity}%</label>\r\n          <input\r\n            type=\"range\"\r\n            min=\"0\"\r\n            max=\"100\"\r\n            value={filterIntensity}\r\n            onChange={(e) => setFilterIntensity(Number(e.target.value))}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"tool-section\">\r\n          <h3>Compression</h3>\r\n          <input\r\n            type=\"range\"\r\n            min=\"10\"\r\n            max=\"100\"\r\n            value={compression}\r\n            onChange={(e) => setCompression(Number(e.target.value))}\r\n          />\r\n          <span>{compression}%</span>\r\n        </div>\r\n\r\n        <div className=\"tool-section\">\r\n          <h3>Download</h3>\r\n          <button onClick={() => handleDownloadImage(\"jpeg\")}>JPEG</button>\r\n          <button onClick={() => handleDownloadImage(\"png\")}>PNG</button>\r\n          <button onClick={() => handleDownloadImage(\"pdf\")}>PDF</button>\r\n        </div>\r\n\r\n        <div className=\"tool-section\">\r\n          <h3>OCR Extractor</h3>\r\n          <button onClick={handleOCR}>Run OCR</button>\r\n        </div>\r\n\r\n        <div className=\"tool-section\">\r\n          <h3>Doc Scanner</h3>\r\n          <input type=\"file\" multiple onChange={addScannedFile} />\r\n          <button onClick={handleDocScanner}>Create PDF</button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"editor\">\r\n        {!imageURL ? (\r\n          <div\r\n            className=\"upload-zone\"\r\n            onDrop={handleDrop}\r\n            onDragOver={handleDragOver}\r\n            onClick={() => document.getElementById(\"fileInput\").click()}\r\n          >\r\n            <p>Drag & Drop file here or click to upload</p>\r\n            <input\r\n              id=\"fileInput\"\r\n              type=\"file\"\r\n              accept=\"image/*,application/pdf\"\r\n              onChange={handleFileChange}\r\n              style={{ display: \"none\" }}\r\n            />\r\n          </div>\r\n        ) : (\r\n          <img\r\n            src={processedImage || imageURL}\r\n            alt=\"Preview\"\r\n            style={{ maxWidth: \"100%\", ...getFilterStyle() }}\r\n          />\r\n        )}\r\n\r\n        {ocrText && (\r\n          <div style={{ marginTop: 20 }}>\r\n            <h3>OCR Extracted Text</h3>\r\n            <textarea\r\n              rows=\"8\"\r\n              value={ocrText}\r\n              readOnly\r\n              style={{ width: \"100%\" }}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}