{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sahil\\\\OneDrive\\\\Desktop\\\\docfixer\\\\frontend\\\\src\\\\components\\\\CropTool.js\",\n  _s = $RefreshSig$();\n// src/components/CropTool.js\nimport React, { useRef } from 'react';\nimport Cropper from 'react-cropper';\nimport 'cropperjs/dist/cropper.css'; // ✅ correct import\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CropTool = ({\n  image,\n  onCrop\n}) => {\n  _s();\n  const cropperRef = useRef(null);\n  const handleCrop = () => {\n    if (cropperRef.current && cropperRef.current.cropper) {\n      const croppedDataURL = cropperRef.current.cropper.getCroppedCanvas().toDataURL();\n      onCrop(croppedDataURL);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Crop Tool\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), image ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Cropper, {\n        src: image,\n        style: {\n          height: 400,\n          width: '100%'\n        },\n        initialAspectRatio: 1,\n        guides: true,\n        ref: cropperRef,\n        viewMode: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCrop,\n        children: \"Crop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Upload an image to crop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(CropTool, \"krdHc9L+HwtTeAi4jAfMF9sAI9o=\");\n_c = CropTool;\nexport default CropTool;\nvar _c;\n$RefreshReg$(_c, \"CropTool\");","map":{"version":3,"names":["React","useRef","Cropper","jsxDEV","_jsxDEV","Fragment","_Fragment","CropTool","image","onCrop","_s","cropperRef","handleCrop","current","cropper","croppedDataURL","getCroppedCanvas","toDataURL","children","fileName","_jsxFileName","lineNumber","columnNumber","src","style","height","width","initialAspectRatio","guides","ref","viewMode","onClick","_c","$RefreshReg$"],"sources":["C:/Users/sahil/OneDrive/Desktop/docfixer/frontend/src/components/CropTool.js"],"sourcesContent":["// src/components/CropTool.js\r\nimport React, { useRef } from 'react';\r\nimport Cropper from 'react-cropper';\r\nimport 'cropperjs/dist/cropper.css'; // ✅ correct import\r\n\r\nconst CropTool = ({ image, onCrop }) => {\r\n  const cropperRef = useRef(null);\r\n\r\n  const handleCrop = () => {\r\n    if (cropperRef.current && cropperRef.current.cropper) {\r\n      const croppedDataURL = cropperRef.current.cropper\r\n        .getCroppedCanvas()\r\n        .toDataURL();\r\n      onCrop(croppedDataURL);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Crop Tool</h3>\r\n      {image ? (\r\n        <>\r\n          <Cropper\r\n            src={image}\r\n            style={{ height: 400, width: '100%' }}\r\n            initialAspectRatio={1}\r\n            guides={true}\r\n            ref={cropperRef}\r\n            viewMode={1}\r\n          />\r\n          <button onClick={handleCrop}>Crop</button>\r\n        </>\r\n      ) : (\r\n        <p>Upload an image to crop</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CropTool;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,MAAM,QAAQ,OAAO;AACrC,OAAOC,OAAO,MAAM,eAAe;AACnC,OAAO,4BAA4B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAErC,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EACtC,MAAMC,UAAU,GAAGV,MAAM,CAAC,IAAI,CAAC;EAE/B,MAAMW,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAID,UAAU,CAACE,OAAO,IAAIF,UAAU,CAACE,OAAO,CAACC,OAAO,EAAE;MACpD,MAAMC,cAAc,GAAGJ,UAAU,CAACE,OAAO,CAACC,OAAO,CAC9CE,gBAAgB,CAAC,CAAC,CAClBC,SAAS,CAAC,CAAC;MACdR,MAAM,CAACM,cAAc,CAAC;IACxB;EACF,CAAC;EAED,oBACEX,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjBd,KAAK,gBACJJ,OAAA,CAAAE,SAAA;MAAAY,QAAA,gBACEd,OAAA,CAACF,OAAO;QACNqB,GAAG,EAAEf,KAAM;QACXgB,KAAK,EAAE;UAAEC,MAAM,EAAE,GAAG;UAAEC,KAAK,EAAE;QAAO,CAAE;QACtCC,kBAAkB,EAAE,CAAE;QACtBC,MAAM,EAAE,IAAK;QACbC,GAAG,EAAElB,UAAW;QAChBmB,QAAQ,EAAE;MAAE;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACb,CAAC,eACFlB,OAAA;QAAQ2B,OAAO,EAAEnB,UAAW;QAAAM,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,eAC1C,CAAC,gBAEHlB,OAAA;MAAAc,QAAA,EAAG;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAC9B;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACZ,EAAA,CAhCIH,QAAQ;AAAAyB,EAAA,GAARzB,QAAQ;AAkCd,eAAeA,QAAQ;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}