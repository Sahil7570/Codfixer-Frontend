{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sahil\\\\OneDrive\\\\Desktop\\\\docfixer\\\\frontend\\\\src\\\\components\\\\Scanner.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Scanner({\n  onScan\n}) {\n  _s();\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [capturing, setCapturing] = useState(false);\n  const startCamera = async () => {\n    setCapturing(true);\n    const stream = await navigator.mediaDevices.getUserMedia({\n      video: true\n    });\n    videoRef.current.srcObject = stream;\n  };\n  const capturePhoto = () => {\n    const ctx = canvasRef.current.getContext(\"2d\");\n    ctx.drawImage(videoRef.current, 0, 0, 400, 300);\n    const dataUrl = canvasRef.current.toDataURL(\"image/png\");\n    onScan(dataUrl);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    children: [!capturing && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startCamera,\n      children: \"Start Scanner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 22\n    }, this), capturing && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        ref: videoRef,\n        autoPlay: true,\n        width: \"400\",\n        height: \"300\",\n        style: {\n          borderRadius: \"8px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: capturePhoto,\n        children: \"Capture\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        width: \"400\",\n        height: \"300\",\n        style: {\n          display: \"none\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(Scanner, \"9ZDWenooFSFAXoyp0TjgpMtIfXs=\");\n_c = Scanner;\nvar _c;\n$RefreshReg$(_c, \"Scanner\");","map":{"version":3,"names":["React","useRef","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Scanner","onScan","_s","videoRef","canvasRef","capturing","setCapturing","startCamera","stream","navigator","mediaDevices","getUserMedia","video","current","srcObject","capturePhoto","ctx","getContext","drawImage","dataUrl","toDataURL","style","textAlign","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","autoPlay","width","height","borderRadius","display","_c","$RefreshReg$"],"sources":["C:/Users/sahil/OneDrive/Desktop/docfixer/frontend/src/components/Scanner.js"],"sourcesContent":["import React, { useRef, useState } from \"react\";\r\n\r\nexport default function Scanner({ onScan }) {\r\n  const videoRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const [capturing, setCapturing] = useState(false);\r\n\r\n  const startCamera = async () => {\r\n    setCapturing(true);\r\n    const stream = await navigator.mediaDevices.getUserMedia({ video: true });\r\n    videoRef.current.srcObject = stream;\r\n  };\r\n\r\n  const capturePhoto = () => {\r\n    const ctx = canvasRef.current.getContext(\"2d\");\r\n    ctx.drawImage(videoRef.current, 0, 0, 400, 300);\r\n    const dataUrl = canvasRef.current.toDataURL(\"image/png\");\r\n    onScan(dataUrl);\r\n  };\r\n\r\n  return (\r\n    <div style={{ textAlign: \"center\" }}>\r\n      {!capturing && <button onClick={startCamera}>Start Scanner</button>}\r\n      {capturing && (\r\n        <>\r\n          <video ref={videoRef} autoPlay width=\"400\" height=\"300\" style={{ borderRadius: \"8px\" }} />\r\n          <br />\r\n          <button onClick={capturePhoto}>Capture</button>\r\n          <canvas ref={canvasRef} width=\"400\" height=\"300\" style={{ display: \"none\" }} />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEhD,eAAe,SAASC,OAAOA,CAAC;EAAEC;AAAO,CAAC,EAAE;EAAAC,EAAA;EAC1C,MAAMC,QAAQ,GAAGT,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAMU,SAAS,GAAGV,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMY,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9BD,YAAY,CAAC,IAAI,CAAC;IAClB,MAAME,MAAM,GAAG,MAAMC,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;MAAEC,KAAK,EAAE;IAAK,CAAC,CAAC;IACzET,QAAQ,CAACU,OAAO,CAACC,SAAS,GAAGN,MAAM;EACrC,CAAC;EAED,MAAMO,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,GAAG,GAAGZ,SAAS,CAACS,OAAO,CAACI,UAAU,CAAC,IAAI,CAAC;IAC9CD,GAAG,CAACE,SAAS,CAACf,QAAQ,CAACU,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;IAC/C,MAAMM,OAAO,GAAGf,SAAS,CAACS,OAAO,CAACO,SAAS,CAAC,WAAW,CAAC;IACxDnB,MAAM,CAACkB,OAAO,CAAC;EACjB,CAAC;EAED,oBACEtB,OAAA;IAAKwB,KAAK,EAAE;MAAEC,SAAS,EAAE;IAAS,CAAE;IAAAC,QAAA,GACjC,CAAClB,SAAS,iBAAIR,OAAA;MAAQ2B,OAAO,EAAEjB,WAAY;MAAAgB,QAAA,EAAC;IAAa;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAClEvB,SAAS,iBACRR,OAAA,CAAAE,SAAA;MAAAwB,QAAA,gBACE1B,OAAA;QAAOgC,GAAG,EAAE1B,QAAS;QAAC2B,QAAQ;QAACC,KAAK,EAAC,KAAK;QAACC,MAAM,EAAC,KAAK;QAACX,KAAK,EAAE;UAAEY,YAAY,EAAE;QAAM;MAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC1F/B,OAAA;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACN/B,OAAA;QAAQ2B,OAAO,EAAET,YAAa;QAAAQ,QAAA,EAAC;MAAO;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC/C/B,OAAA;QAAQgC,GAAG,EAAEzB,SAAU;QAAC2B,KAAK,EAAC,KAAK;QAACC,MAAM,EAAC,KAAK;QAACX,KAAK,EAAE;UAAEa,OAAO,EAAE;QAAO;MAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,eAC/E,CACH;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC1B,EAAA,CA/BuBF,OAAO;AAAAmC,EAAA,GAAPnC,OAAO;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}