{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sahil\\\\OneDrive\\\\Desktop\\\\docfixer\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Toolbar from \"./components/Toolbar\";\nimport CropTool from \"./components/CropTool\";\nimport BackgroundRemover from \"./components/BackgroundRemover\";\nimport DocEditor from \"./components/DocEditor\";\nimport Filters from \"./components/Filters\";\nimport ScannerConverter from \"./components/ScannerConverter\";\nimport CompressionSlider from \"./components/CompressionSlider\";\nimport DownloadOptions from \"./components/DownloadOptions\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [fileUrl, setFileUrl] = useState(\"\");\n  const [pdfPages, setPdfPages] = useState([]);\n  const handleUpload = async selectedFile => {\n    const formData = new FormData();\n    formData.append(\"file\", selectedFile);\n    const res = await axios.post(\"http://localhost:5000/api/upload\", formData);\n    setFile(selectedFile);\n    if (res.data.type === \"image\") setFileUrl(res.data.url);else setPdfPages(res.data.pages);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"DocFixer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Toolbar, {\n      onUpload: handleUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), file && /*#__PURE__*/_jsxDEV(CropTool, {\n      file: fileUrl || pdfPages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 16\n    }, this), file && /*#__PURE__*/_jsxDEV(BackgroundRemover, {\n      file: fileUrl\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 16\n    }, this), file && /*#__PURE__*/_jsxDEV(DocEditor, {\n      file: fileUrl || pdfPages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 16\n    }, this), file && /*#__PURE__*/_jsxDEV(Filters, {\n      file: fileUrl || pdfPages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 16\n    }, this), file && /*#__PURE__*/_jsxDEV(ScannerConverter, {\n      file: fileUrl || pdfPages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 16\n    }, this), file && /*#__PURE__*/_jsxDEV(CompressionSlider, {\n      file: fileUrl || pdfPages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 16\n    }, this), file && /*#__PURE__*/_jsxDEV(DownloadOptions, {\n      file: fileUrl || pdfPages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"lPBXqa+9n45yH3+0ccobgi3ILQ4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Toolbar","CropTool","BackgroundRemover","DocEditor","Filters","ScannerConverter","CompressionSlider","DownloadOptions","axios","jsxDEV","_jsxDEV","App","_s","file","setFile","fileUrl","setFileUrl","pdfPages","setPdfPages","handleUpload","selectedFile","formData","FormData","append","res","post","data","type","url","pages","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onUpload","_c","$RefreshReg$"],"sources":["C:/Users/sahil/OneDrive/Desktop/docfixer/frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Toolbar from \"./components/Toolbar\";\r\nimport CropTool from \"./components/CropTool\";\r\nimport BackgroundRemover from \"./components/BackgroundRemover\";\r\nimport DocEditor from \"./components/DocEditor\";\r\nimport Filters from \"./components/Filters\";\r\nimport ScannerConverter from \"./components/ScannerConverter\";\r\nimport CompressionSlider from \"./components/CompressionSlider\";\r\nimport DownloadOptions from \"./components/DownloadOptions\";\r\nimport axios from \"axios\";\r\n\r\nfunction App() {\r\n  const [file, setFile] = useState(null);\r\n  const [fileUrl, setFileUrl] = useState(\"\");\r\n  const [pdfPages, setPdfPages] = useState([]);\r\n\r\n  const handleUpload = async (selectedFile) => {\r\n    const formData = new FormData();\r\n    formData.append(\"file\", selectedFile);\r\n    const res = await axios.post(\"http://localhost:5000/api/upload\", formData);\r\n    setFile(selectedFile);\r\n\r\n    if (res.data.type === \"image\") setFileUrl(res.data.url);\r\n    else setPdfPages(res.data.pages);\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <h1>DocFixer</h1>\r\n      <Toolbar onUpload={handleUpload} />\r\n      {file && <CropTool file={fileUrl || pdfPages} />}\r\n      {file && <BackgroundRemover file={fileUrl} />}\r\n      {file && <DocEditor file={fileUrl || pdfPages} />}\r\n      {file && <Filters file={fileUrl || pdfPages} />}\r\n      {file && <ScannerConverter file={fileUrl || pdfPages} />}\r\n      {file && <CompressionSlider file={fileUrl || pdfPages} />}\r\n      {file && <DownloadOptions file={fileUrl || pdfPages} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}