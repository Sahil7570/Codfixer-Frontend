{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sahil\\\\OneDrive\\\\Desktop\\\\docfixer\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// ... keep all your existing imports\nimport React, { useState, useRef } from \"react\";\nimport axios from \"axios\";\nimport { jsPDF } from \"jspdf\";\nimport { PDFDocument } from \"pdf-lib\";\nimport Tesseract from \"tesseract.js\";\nimport \"./styles/App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [imageURL, setImageURL] = useState(null);\n  const [processedImage, setProcessedImage] = useState(null);\n  const [ocrText, setOcrText] = useState(\"\");\n  const [filter, setFilter] = useState(\"none\");\n  const [filterIntensity, setFilterIntensity] = useState(100);\n  const [compression, setCompression] = useState(100);\n  const [addingText, setAddingText] = useState(false);\n  const [currentText, setCurrentText] = useState(\"\");\n  const [placedTexts, setPlacedTexts] = useState([]);\n  const [textStyle, setTextStyle] = useState({\n    bold: false,\n    italic: false,\n    underline: false,\n    uppercase: false,\n    lowercase: false,\n    color: \"#000000\",\n    size: 20\n  });\n  const [loadingOCR, setLoadingOCR] = useState(false);\n  const [loadingEnhance, setLoadingEnhance] = useState(false);\n  const imageRef = useRef(null);\n\n  // --- File Upload ---\n  const handleFileChange = e => {\n    const uploaded = e.target.files[0];\n    if (!uploaded) return;\n    setFile(uploaded);\n    setImageURL(URL.createObjectURL(uploaded));\n    setProcessedImage(null);\n    setOcrText(\"\");\n    setPlacedTexts([]);\n  };\n  const handleDrop = e => {\n    e.preventDefault();\n    const dropped = e.dataTransfer.files[0];\n    if (!dropped) return;\n    setFile(dropped);\n    setImageURL(URL.createObjectURL(dropped));\n    setProcessedImage(null);\n    setOcrText(\"\");\n    setPlacedTexts([]);\n  };\n  const handleDragOver = e => e.preventDefault();\n\n  // --- OCR ---\n  const handleOCR = async () => {\n    if (!processedImage && !file) return alert(\"Upload an image for OCR\");\n    const target = processedImage || imageURL;\n    setLoadingOCR(true);\n    Tesseract.recognize(target, \"eng\").then(({\n      data: {\n        text\n      }\n    }) => {\n      setOcrText(text);\n      setLoadingOCR(false);\n    });\n  };\n\n  // --- Background remover ---\n  const handleRemoveBG = async () => {\n    if (!file) return alert(\"Upload an image first\");\n    if (file.type.includes(\"pdf\")) return alert(\"Works only with images\");\n    const formData = new FormData();\n    formData.append(\"image_file\", file);\n    try {\n      const res = await axios.post(\"https://api.remove.bg/v1.0/removebg\", formData, {\n        headers: {\n          \"X-Api-Key\": \"VSNXBaMjvgBp6NjjRheLV3cW\"\n        },\n        responseType: \"blob\"\n      });\n      setProcessedImage(URL.createObjectURL(res.data));\n    } catch (err) {\n      alert(\"Remove.bg API error: \" + err.message);\n    }\n  };\n\n  // --- AI Enhancer (Gemini) ---\n  const handleEnhance = async () => {\n    if (!file) return alert(\"Upload an image or document first\");\n    setLoadingEnhance(true);\n    const formData = new FormData();\n    formData.append(\"image\", file); // matches backend route\n\n    try {\n      const res = await axios.post(\"http://localhost:5000/api/enhance\", formData, {\n        responseType: \"blob\"\n      });\n      setProcessedImage(URL.createObjectURL(res.data));\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error(err);\n      alert(\"Enhancement failed: \" + (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || err.message));\n    } finally {\n      setLoadingEnhance(false);\n    }\n  };\n\n  // --- Filters ---\n  const getFilterStyle = () => {\n    const i = Number(filterIntensity);\n    switch (filter) {\n      case \"grayscale\":\n        return {\n          filter: `grayscale(${i}%)`\n        };\n      case \"sepia\":\n        return {\n          filter: `sepia(${i}%)`\n        };\n      case \"invert\":\n        return {\n          filter: `invert(${i}%)`\n        };\n      case \"blur\":\n        return {\n          filter: `blur(${i / 20}px)`\n        };\n      case \"brightness\":\n        return {\n          filter: `brightness(${i}%)`\n        };\n      case \"contrast\":\n        return {\n          filter: `contrast(${i}%)`\n        };\n      case \"saturate\":\n        return {\n          filter: `saturate(${i}%)`\n        };\n      case \"hue-rotate\":\n        return {\n          filter: `hue-rotate(${i * 3.6}deg)`\n        };\n      default:\n        return {};\n    }\n  };\n\n  // --- Generate final image for download ---\n  const generateFinalImage = () => new Promise(resolve => {\n    const source = processedImage || imageURL;\n    if (!source) return resolve(null);\n    const img = new Image();\n    img.crossOrigin = \"anonymous\";\n    img.onload = () => {\n      const canvas = document.createElement(\"canvas\");\n      const ctx = canvas.getContext(\"2d\");\n      canvas.width = img.width;\n      canvas.height = img.height;\n      ctx.filter = getFilterStyle().filter || \"none\";\n      ctx.drawImage(img, 0, 0);\n      resolve(canvas.toDataURL(\"image/jpeg\", Number(compression) / 100));\n    };\n    img.src = source;\n  });\n\n  // --- Download ---\n  const handleDownloadImage = async format => {\n    const finalDataURL = await generateFinalImage();\n    if (!finalDataURL) return;\n    if (format === \"pdf\") {\n      const doc = new jsPDF();\n      doc.addImage(finalDataURL, \"JPEG\", 10, 10, 190, 0);\n      doc.save(\"docfixer.pdf\");\n    } else {\n      const link = document.createElement(\"a\");\n      link.href = finalDataURL;\n      link.download = `docfixer.${format}`;\n      link.click();\n    }\n  };\n\n  // --- Text ---\n  const handleAddText = () => setAddingText(true);\n  const handlePlaceText = () => {\n    setPlacedTexts([...placedTexts, {\n      ...currentText\n    }]);\n    setCurrentText(\"\");\n    setAddingText(false);\n  };\n  const handleDeleteText = () => {\n    setCurrentText(\"\");\n    setAddingText(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Tools\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tool-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Background Remover\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleRemoveBG,\n          children: \"Remove BG\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tool-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Enhancer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleEnhance,\n          children: loadingEnhance ? \"Enhancing...\" : \"Enhance Image/Document\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"a2exXnY4zoM15u9EGD+/ixhv85E=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","axios","jsPDF","PDFDocument","Tesseract","jsxDEV","_jsxDEV","App","_s","file","setFile","imageURL","setImageURL","processedImage","setProcessedImage","ocrText","setOcrText","filter","setFilter","filterIntensity","setFilterIntensity","compression","setCompression","addingText","setAddingText","currentText","setCurrentText","placedTexts","setPlacedTexts","textStyle","setTextStyle","bold","italic","underline","uppercase","lowercase","color","size","loadingOCR","setLoadingOCR","loadingEnhance","setLoadingEnhance","imageRef","handleFileChange","e","uploaded","target","files","URL","createObjectURL","handleDrop","preventDefault","dropped","dataTransfer","handleDragOver","handleOCR","alert","recognize","then","data","text","handleRemoveBG","type","includes","formData","FormData","append","res","post","headers","responseType","err","message","handleEnhance","_err$response","_err$response$data","console","error","response","getFilterStyle","i","Number","generateFinalImage","Promise","resolve","source","img","Image","crossOrigin","onload","canvas","document","createElement","ctx","getContext","width","height","drawImage","toDataURL","src","handleDownloadImage","format","finalDataURL","doc","addImage","save","link","href","download","click","handleAddText","handlePlaceText","handleDeleteText","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/sahil/OneDrive/Desktop/docfixer/frontend/src/App.js"],"sourcesContent":["// ... keep all your existing imports\r\nimport React, { useState, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport { jsPDF } from \"jspdf\";\r\nimport { PDFDocument } from \"pdf-lib\";\r\nimport Tesseract from \"tesseract.js\";\r\nimport \"./styles/App.css\";\r\n\r\nfunction App() {\r\n  const [file, setFile] = useState(null);\r\n  const [imageURL, setImageURL] = useState(null);\r\n  const [processedImage, setProcessedImage] = useState(null);\r\n  const [ocrText, setOcrText] = useState(\"\");\r\n  const [filter, setFilter] = useState(\"none\");\r\n  const [filterIntensity, setFilterIntensity] = useState(100);\r\n  const [compression, setCompression] = useState(100);\r\n  const [addingText, setAddingText] = useState(false);\r\n  const [currentText, setCurrentText] = useState(\"\");\r\n  const [placedTexts, setPlacedTexts] = useState([]);\r\n  const [textStyle, setTextStyle] = useState({\r\n    bold: false,\r\n    italic: false,\r\n    underline: false,\r\n    uppercase: false,\r\n    lowercase: false,\r\n    color: \"#000000\",\r\n    size: 20,\r\n  });\r\n  const [loadingOCR, setLoadingOCR] = useState(false);\r\n  const [loadingEnhance, setLoadingEnhance] = useState(false);\r\n  const imageRef = useRef(null);\r\n\r\n  // --- File Upload ---\r\n  const handleFileChange = (e) => {\r\n    const uploaded = e.target.files[0];\r\n    if (!uploaded) return;\r\n    setFile(uploaded);\r\n    setImageURL(URL.createObjectURL(uploaded));\r\n    setProcessedImage(null);\r\n    setOcrText(\"\");\r\n    setPlacedTexts([]);\r\n  };\r\n\r\n  const handleDrop = (e) => {\r\n    e.preventDefault();\r\n    const dropped = e.dataTransfer.files[0];\r\n    if (!dropped) return;\r\n    setFile(dropped);\r\n    setImageURL(URL.createObjectURL(dropped));\r\n    setProcessedImage(null);\r\n    setOcrText(\"\");\r\n    setPlacedTexts([]);\r\n  };\r\n  const handleDragOver = (e) => e.preventDefault();\r\n\r\n  // --- OCR ---\r\n  const handleOCR = async () => {\r\n    if (!processedImage && !file) return alert(\"Upload an image for OCR\");\r\n    const target = processedImage || imageURL;\r\n    setLoadingOCR(true);\r\n    Tesseract.recognize(target, \"eng\").then(({ data: { text } }) => {\r\n      setOcrText(text);\r\n      setLoadingOCR(false);\r\n    });\r\n  };\r\n\r\n  // --- Background remover ---\r\n  const handleRemoveBG = async () => {\r\n    if (!file) return alert(\"Upload an image first\");\r\n    if (file.type.includes(\"pdf\")) return alert(\"Works only with images\");\r\n    const formData = new FormData();\r\n    formData.append(\"image_file\", file);\r\n    try {\r\n      const res = await axios.post(\r\n        \"https://api.remove.bg/v1.0/removebg\",\r\n        formData,\r\n        {\r\n          headers: { \"X-Api-Key\": \"VSNXBaMjvgBp6NjjRheLV3cW\" },\r\n          responseType: \"blob\",\r\n        }\r\n      );\r\n      setProcessedImage(URL.createObjectURL(res.data));\r\n    } catch (err) {\r\n      alert(\"Remove.bg API error: \" + err.message);\r\n    }\r\n  };\r\n\r\n  // --- AI Enhancer (Gemini) ---\r\n  const handleEnhance = async () => {\r\n    if (!file) return alert(\"Upload an image or document first\");\r\n    setLoadingEnhance(true);\r\n    const formData = new FormData();\r\n    formData.append(\"image\", file); // matches backend route\r\n\r\n    try {\r\n      const res = await axios.post(\"http://localhost:5000/api/enhance\", formData, {\r\n        responseType: \"blob\",\r\n      });\r\n      setProcessedImage(URL.createObjectURL(res.data));\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert(\"Enhancement failed: \" + (err.response?.data?.error || err.message));\r\n    } finally {\r\n      setLoadingEnhance(false);\r\n    }\r\n  };\r\n\r\n  // --- Filters ---\r\n  const getFilterStyle = () => {\r\n    const i = Number(filterIntensity);\r\n    switch (filter) {\r\n      case \"grayscale\": return { filter: `grayscale(${i}%)` };\r\n      case \"sepia\": return { filter: `sepia(${i}%)` };\r\n      case \"invert\": return { filter: `invert(${i}%)` };\r\n      case \"blur\": return { filter: `blur(${i / 20}px)` };\r\n      case \"brightness\": return { filter: `brightness(${i}%)` };\r\n      case \"contrast\": return { filter: `contrast(${i}%)` };\r\n      case \"saturate\": return { filter: `saturate(${i}%)` };\r\n      case \"hue-rotate\": return { filter: `hue-rotate(${i * 3.6}deg)` };\r\n      default: return {};\r\n    }\r\n  };\r\n\r\n  // --- Generate final image for download ---\r\n  const generateFinalImage = () =>\r\n    new Promise((resolve) => {\r\n      const source = processedImage || imageURL;\r\n      if (!source) return resolve(null);\r\n      const img = new Image();\r\n      img.crossOrigin = \"anonymous\";\r\n      img.onload = () => {\r\n        const canvas = document.createElement(\"canvas\");\r\n        const ctx = canvas.getContext(\"2d\");\r\n        canvas.width = img.width;\r\n        canvas.height = img.height;\r\n        ctx.filter = getFilterStyle().filter || \"none\";\r\n        ctx.drawImage(img, 0, 0);\r\n        resolve(canvas.toDataURL(\"image/jpeg\", Number(compression) / 100));\r\n      };\r\n      img.src = source;\r\n    });\r\n\r\n  // --- Download ---\r\n  const handleDownloadImage = async (format) => {\r\n    const finalDataURL = await generateFinalImage();\r\n    if (!finalDataURL) return;\r\n    if (format === \"pdf\") {\r\n      const doc = new jsPDF();\r\n      doc.addImage(finalDataURL, \"JPEG\", 10, 10, 190, 0);\r\n      doc.save(\"docfixer.pdf\");\r\n    } else {\r\n      const link = document.createElement(\"a\");\r\n      link.href = finalDataURL;\r\n      link.download = `docfixer.${format}`;\r\n      link.click();\r\n    }\r\n  };\r\n\r\n  // --- Text ---\r\n  const handleAddText = () => setAddingText(true);\r\n  const handlePlaceText = () => {\r\n    setPlacedTexts([...placedTexts, { ...currentText }]);\r\n    setCurrentText(\"\");\r\n    setAddingText(false);\r\n  };\r\n  const handleDeleteText = () => {\r\n    setCurrentText(\"\");\r\n    setAddingText(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <div className=\"sidebar\">\r\n        <h2>Tools</h2>\r\n\r\n        <div className=\"tool-section\">\r\n          <h3>Background Remover</h3>\r\n          <button onClick={handleRemoveBG}>Remove BG</button>\r\n        </div>\r\n\r\n        <div className=\"tool-section\">\r\n          <h3>Enhancer</h3>\r\n          <button onClick={handleEnhance}>\r\n            {loadingEnhance ? \"Enhancing...\" : \"Enhance Image/Document\"}\r\n          </button>\r\n        </div>\r\n\r\n        {/* Filters, Compression, Text, Download, OCR */}\r\n        {/* Keep all your existing sidebar JSX unchanged */}\r\n      </div>\r\n\r\n      <div className=\"editor\">\r\n        {/* Keep editor JSX as is, no changes */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}