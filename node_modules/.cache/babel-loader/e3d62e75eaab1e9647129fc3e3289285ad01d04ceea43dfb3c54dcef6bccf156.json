{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sahil\\\\OneDrive\\\\Desktop\\\\docfixer\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Rnd } from \"react-rnd\";\nimport { HexColorPicker } from \"react-colorful\";\nimport { jsPDF } from \"jspdf\";\nimport { PDFDocument } from \"pdf-lib\";\nimport Tesseract from \"tesseract.js\";\nimport \"./styles/App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [imageURL, setImageURL] = useState(null);\n  const [processedImage, setProcessedImage] = useState(null);\n  const [filter, setFilter] = useState(\"none\");\n  const [filterIntensity, setFilterIntensity] = useState(100);\n  const [compression, setCompression] = useState(100);\n  const [texts, setTexts] = useState([]);\n  const [selectedTextId, setSelectedTextId] = useState(null);\n  const [showColorPicker, setShowColorPicker] = useState(false);\n  const [ocrText, setOcrText] = useState(\"\");\n  const [scannedFiles, setScannedFiles] = useState([]);\n\n  // === File upload handlers ===\n  const handleFileChange = e => {\n    const uploadedFile = e.target.files[0];\n    if (!uploadedFile) return;\n    setFile(uploadedFile);\n    setImageURL(URL.createObjectURL(uploadedFile));\n    setProcessedImage(null);\n    setTexts([]);\n    setOcrText(\"\");\n  };\n  const handleDrop = e => {\n    e.preventDefault();\n    const droppedFile = e.dataTransfer.files[0];\n    if (droppedFile) {\n      setFile(droppedFile);\n      setImageURL(URL.createObjectURL(droppedFile));\n      setProcessedImage(null);\n      setTexts([]);\n      setOcrText(\"\");\n    }\n  };\n  const handleDragOver = e => e.preventDefault();\n\n  // === Remove background ===\n  const handleRemoveBG = async () => {\n    if (!file) return alert(\"Upload an image first\");\n    if (file.type.includes(\"pdf\")) return alert(\"Remove.bg works only with images\");\n    const formData = new FormData();\n    formData.append(\"image_file\", file);\n    try {\n      const res = await axios.post(\"https://api.remove.bg/v1.0/removebg\", formData, {\n        headers: {\n          \"X-Api-Key\": \"VSNXBaMjvgBp6NjjRheLV3cW\",\n          \"Content-Type\": \"multipart/form-data\"\n        },\n        responseType: \"blob\"\n      });\n      const url = URL.createObjectURL(res.data);\n      setProcessedImage(url);\n    } catch (err) {\n      alert(\"Remove.bg API error: \" + err.message);\n    }\n  };\n\n  // === Filters ===\n  const getFilterStyle = () => {\n    const intensity = filterIntensity;\n    switch (filter) {\n      case \"grayscale\":\n        return {\n          filter: `grayscale(${intensity}%)`\n        };\n      case \"sepia\":\n        return {\n          filter: `sepia(${intensity}%)`\n        };\n      case \"invert\":\n        return {\n          filter: `invert(${intensity}%)`\n        };\n      case \"blur\":\n        return {\n          filter: `blur(${intensity / 20}px)`\n        };\n      case \"brightness\":\n        return {\n          filter: `brightness(${intensity}%)`\n        };\n      case \"contrast\":\n        return {\n          filter: `contrast(${intensity}%)`\n        };\n      case \"saturate\":\n        return {\n          filter: `saturate(${intensity}%)`\n        };\n      case \"hue-rotate\":\n        return {\n          filter: `hue-rotate(${intensity * 3.6}deg)`\n        };\n      default:\n        return {};\n    }\n  };\n\n  // === Text overlay ===\n  const addText = () => {\n    const newText = {\n      id: Date.now(),\n      text: \"New Text\",\n      color: \"#ff0000\",\n      fontSize: 24,\n      x: 50,\n      y: 50,\n      width: 200,\n      height: 50,\n      rotation: 0,\n      opacity: 1\n    };\n    setTexts([...texts, newText]);\n    setSelectedTextId(newText.id);\n  };\n  const updateText = (id, key, value) => {\n    setTexts(texts.map(t => t.id === id ? {\n      ...t,\n      [key]: value\n    } : t));\n  };\n  const deleteText = id => {\n    setTexts(texts.filter(t => t.id !== id));\n    if (selectedTextId === id) setSelectedTextId(null);\n  };\n\n  // === Generate final image ===\n  const generateFinalImage = () => {\n    return new Promise(resolve => {\n      const source = processedImage || imageURL;\n      if (!source) return resolve(null);\n      const img = new Image();\n      img.crossOrigin = \"anonymous\";\n      img.onload = () => {\n        const canvas = document.createElement(\"canvas\");\n        const ctx = canvas.getContext(\"2d\");\n        canvas.width = img.width;\n        canvas.height = img.height;\n        ctx.filter = getFilterStyle().filter || \"none\";\n        ctx.drawImage(img, 0, 0);\n        texts.forEach(t => {\n          ctx.save();\n          ctx.translate(t.x + t.width / 2, t.y + t.height / 2);\n          ctx.rotate(t.rotation * Math.PI / 180);\n          ctx.globalAlpha = t.opacity;\n          ctx.font = `${t.fontSize}px Arial`;\n          ctx.fillStyle = t.color;\n          ctx.textAlign = \"center\";\n          ctx.textBaseline = \"middle\";\n          ctx.fillText(t.text, 0, 0);\n          ctx.restore();\n        });\n        resolve(canvas.toDataURL(\"image/jpeg\", compression / 100));\n      };\n      img.src = source;\n    });\n  };\n\n  // === Download ===\n  const handleDownloadImage = async format => {\n    const finalDataURL = await generateFinalImage();\n    if (!finalDataURL) return;\n    if (format === \"pdf\") {\n      const doc = new jsPDF();\n      doc.addImage(finalDataURL, \"JPEG\", 10, 10, 190, 0);\n      doc.save(\"docfixer.pdf\");\n    } else {\n      const link = document.createElement(\"a\");\n      link.href = finalDataURL;\n      link.download = `docfixer.${format}`;\n      link.click();\n    }\n  };\n\n  // === OCR ===\n  const handleOCR = async () => {\n    if (!file || !file.type.startsWith(\"image/\")) return alert(\"Upload an image for OCR\");\n    setOcrText(\"Processing...\");\n    Tesseract.recognize(file, \"eng\", {\n      logger: m => {}\n    }).then(({\n      data: {\n        text\n      }\n    }) => {\n      setOcrText(text);\n    }).catch(err => setOcrText(\"Error: \" + err.message));\n  };\n\n  // === DocScanner (multi-image PDF) ===\n  const handleDocScanner = async () => {\n    if (scannedFiles.length === 0) return alert(\"No images scanned yet\");\n    const pdfDoc = await PDFDocument.create();\n    for (let imgFile of scannedFiles) {\n      const imgBytes = await imgFile.arrayBuffer();\n      let img;\n      if (imgFile.type.includes(\"png\")) img = await pdfDoc.embedPng(imgBytes);else img = await pdfDoc.embedJpg(imgBytes);\n      const page = pdfDoc.addPage([img.width, img.height]);\n      page.drawImage(img, {\n        x: 0,\n        y: 0,\n        width: img.width,\n        height: img.height\n      });\n    }\n    const pdfBytes = await pdfDoc.save();\n    const blob = new Blob([pdfBytes], {\n      type: \"application/pdf\"\n    });\n    const link = document.createElement(\"a\");\n    link.href = URL.createObjectURL(blob);\n    link.download = \"scanned.pdf\";\n    link.click();\n  };\n\n  // === Add image to scanner ===\n  const addScannedFile = e => {\n    const files = Array.from(e.target.files);\n    setScannedFiles([...scannedFiles, ...files]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Tools\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tool-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Background Remover\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleRemoveBG,\n          children: \"Remove BG\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tool-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Text Overlay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addText,\n          children: \"+ Add Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tool-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Filters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: filter,\n          onChange: e => setFilter(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"none\",\n            children: \"None\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"grayscale\",\n            children: \"Grayscale\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"sepia\",\n            children: \"Sepia\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"invert\",\n            children: \"Invert\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"blur\",\n            children: \"Blur\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"brightness\",\n            children: \"Brightness\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"contrast\",\n            children: \"Contrast\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"saturate\",\n            children: \"Saturate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"hue-rotate\",\n            children: \"Hue Rotate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Intensity: \", filterIntensity, \"%\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: \"0\",\n            max: \"100\",\n            value: filterIntensity,\n            onChange: e => setFilterIntensity(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tool-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Compression\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"10\",\n          max: \"100\",\n          value: compression,\n          onChange: e => setCompression(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [compression, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tool-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Download\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDownloadImage(\"jpeg\"),\n          children: \"JPEG\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDownloadImage(\"png\"),\n          children: \"PNG\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDownloadImage(\"pdf\"),\n          children: \"PDF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tool-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"OCR Extractor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleOCR,\n          children: \"Run OCR\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tool-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Doc Scanner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          multiple: true,\n          onChange: addScannedFile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDocScanner,\n          children: \"Create PDF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editor\",\n      children: [!imageURL && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-zone\",\n        onDrop: handleDrop,\n        onDragOver: handleDragOver,\n        onClick: () => document.getElementById(\"fileInput\").click(),\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Drag & Drop file here or click to upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"fileInput\",\n          type: \"file\",\n          accept: \"image/*,application/pdf\",\n          onChange: handleFileChange,\n          style: {\n            display: \"none\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 11\n      }, this), imageURL && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"preview-area\",\n        children: file !== null && file !== void 0 && file.type.startsWith(\"image/\") ? ocrText ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ocr-preview-split\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ocr-left\",\n            style: {\n              position: \"relative\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: processedImage || imageURL,\n              alt: \"Preview\",\n              style: {\n                maxWidth: \"100%\",\n                ...getFilterStyle()\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 13\n            }, this), texts.map(t => /*#__PURE__*/_jsxDEV(Rnd, {\n              size: {\n                width: t.width,\n                height: t.height\n              },\n              position: {\n                x: t.x,\n                y: t.y\n              },\n              onDragStop: (e, d) => {\n                updateText(t.id, \"x\", d.x);\n                updateText(t.id, \"y\", d.y);\n              },\n              onResizeStop: (e, direction, ref, delta, position) => {\n                updateText(t.id, \"width\", parseInt(ref.style.width));\n                updateText(t.id, \"height\", parseInt(ref.style.height));\n                updateText(t.id, \"x\", position.x);\n                updateText(t.id, \"y\", position.y);\n              },\n              onClick: () => setSelectedTextId(t.id),\n              style: {\n                border: selectedTextId === t.id ? \"2px dashed #007bff\" : \"none\",\n                padding: \"2px\",\n                cursor: \"move\",\n                backgroundColor: \"rgba(255,255,255,0.2)\",\n                overflow: \"hidden\",\n                transform: `rotate(${t.rotation}deg)`,\n                opacity: t.opacity\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                contentEditable: true,\n                suppressContentEditableWarning: true,\n                style: {\n                  width: \"100%\",\n                  height: \"100%\",\n                  textAlign: \"center\",\n                  cursor: \"text\",\n                  color: t.color,\n                  fontSize: t.fontSize\n                },\n                onInput: e => updateText(t.id, \"text\", e.currentTarget.textContent),\n                children: t.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 17\n              }, this)\n            }, t.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 15\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ocr-right\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"OCR Output:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ocr-output\",\n              children: ocrText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 9\n        }, this) :\n        /*#__PURE__*/\n        // Normal editor without OCR\n        _jsxDEV(\"div\", {\n          style: {\n            position: \"relative\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: processedImage || imageURL,\n            alt: \"Preview\",\n            style: {\n              maxWidth: \"100%\",\n              ...getFilterStyle()\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 11\n          }, this), texts.map(t => /*#__PURE__*/_jsxDEV(Rnd, {\n            size: {\n              width: t.width,\n              height: t.height\n            },\n            position: {\n              x: t.x,\n              y: t.y\n            },\n            onDragStop: (e, d) => {\n              updateText(t.id, \"x\", d.x);\n              updateText(t.id, \"y\", d.y);\n            },\n            onResizeStop: (e, direction, ref, delta, position) => {\n              updateText(t.id, \"width\", parseInt(ref.style.width));\n              updateText(t.id, \"height\", parseInt(ref.style.height));\n              updateText(t.id, \"x\", position.x);\n              updateText(t.id, \"y\", position.y);\n            },\n            onClick: () => setSelectedTextId(t.id),\n            style: {\n              border: selectedTextId === t.id ? \"2px dashed #007bff\" : \"none\",\n              padding: \"2px\",\n              cursor: \"move\",\n              backgroundColor: \"rgba(255,255,255,0.2)\",\n              overflow: \"hidden\",\n              transform: `rotate(${t.rotation}deg)`,\n              opacity: t.opacity\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              contentEditable: true,\n              suppressContentEditableWarning: true,\n              style: {\n                width: \"100%\",\n                height: \"100%\",\n                textAlign: \"center\",\n                cursor: \"text\",\n                color: t.color,\n                fontSize: t.fontSize\n              },\n              onInput: e => updateText(t.id, \"text\", e.currentTarget.textContent),\n              children: t.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 15\n            }, this)\n          }, t.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 13\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 9\n        }, this) :\n        /*#__PURE__*/\n        // PDF preview\n        _jsxDEV(\"embed\", {\n          src: imageURL,\n          type: \"application/pdf\",\n          width: \"100%\",\n          height: \"600px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 215,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"dSkBl40pQx+WZTvCbU2X1MP3ygg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","Rnd","HexColorPicker","jsPDF","PDFDocument","Tesseract","jsxDEV","_jsxDEV","App","_s","file","setFile","imageURL","setImageURL","processedImage","setProcessedImage","filter","setFilter","filterIntensity","setFilterIntensity","compression","setCompression","texts","setTexts","selectedTextId","setSelectedTextId","showColorPicker","setShowColorPicker","ocrText","setOcrText","scannedFiles","setScannedFiles","handleFileChange","e","uploadedFile","target","files","URL","createObjectURL","handleDrop","preventDefault","droppedFile","dataTransfer","handleDragOver","handleRemoveBG","alert","type","includes","formData","FormData","append","res","post","headers","responseType","url","data","err","message","getFilterStyle","intensity","addText","newText","id","Date","now","text","color","fontSize","x","y","width","height","rotation","opacity","updateText","key","value","map","t","deleteText","generateFinalImage","Promise","resolve","source","img","Image","crossOrigin","onload","canvas","document","createElement","ctx","getContext","drawImage","forEach","save","translate","rotate","Math","PI","globalAlpha","font","fillStyle","textAlign","textBaseline","fillText","restore","toDataURL","src","handleDownloadImage","format","finalDataURL","doc","addImage","link","href","download","click","handleOCR","startsWith","recognize","logger","m","then","catch","handleDocScanner","length","pdfDoc","create","imgFile","imgBytes","arrayBuffer","embedPng","embedJpg","page","addPage","pdfBytes","blob","Blob","addScannedFile","Array","from","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onChange","min","max","multiple","onDrop","onDragOver","getElementById","accept","style","display","position","alt","maxWidth","size","onDragStop","d","onResizeStop","direction","ref","delta","parseInt","border","padding","cursor","backgroundColor","overflow","transform","contentEditable","suppressContentEditableWarning","onInput","currentTarget","textContent","_c","$RefreshReg$"],"sources":["C:/Users/sahil/OneDrive/Desktop/docfixer/frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Rnd } from \"react-rnd\";\r\nimport { HexColorPicker } from \"react-colorful\";\r\nimport { jsPDF } from \"jspdf\";\r\nimport { PDFDocument } from \"pdf-lib\";\r\nimport Tesseract from \"tesseract.js\";\r\nimport \"./styles/App.css\";\r\n\r\nfunction App() {\r\n  const [file, setFile] = useState(null);\r\n  const [imageURL, setImageURL] = useState(null);\r\n  const [processedImage, setProcessedImage] = useState(null);\r\n  const [filter, setFilter] = useState(\"none\");\r\n  const [filterIntensity, setFilterIntensity] = useState(100);\r\n  const [compression, setCompression] = useState(100);\r\n\r\n  const [texts, setTexts] = useState([]);\r\n  const [selectedTextId, setSelectedTextId] = useState(null);\r\n  const [showColorPicker, setShowColorPicker] = useState(false);\r\n\r\n  const [ocrText, setOcrText] = useState(\"\");\r\n  const [scannedFiles, setScannedFiles] = useState([]);\r\n\r\n  // === File upload handlers ===\r\n  const handleFileChange = (e) => {\r\n    const uploadedFile = e.target.files[0];\r\n    if (!uploadedFile) return;\r\n    setFile(uploadedFile);\r\n    setImageURL(URL.createObjectURL(uploadedFile));\r\n    setProcessedImage(null);\r\n    setTexts([]);\r\n    setOcrText(\"\");\r\n  };\r\n\r\n  const handleDrop = (e) => {\r\n    e.preventDefault();\r\n    const droppedFile = e.dataTransfer.files[0];\r\n    if (droppedFile) {\r\n      setFile(droppedFile);\r\n      setImageURL(URL.createObjectURL(droppedFile));\r\n      setProcessedImage(null);\r\n      setTexts([]);\r\n      setOcrText(\"\");\r\n    }\r\n  };\r\n\r\n  const handleDragOver = (e) => e.preventDefault();\r\n\r\n  // === Remove background ===\r\n  const handleRemoveBG = async () => {\r\n    if (!file) return alert(\"Upload an image first\");\r\n    if (file.type.includes(\"pdf\")) return alert(\"Remove.bg works only with images\");\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"image_file\", file);\r\n    try {\r\n      const res = await axios.post(\"https://api.remove.bg/v1.0/removebg\", formData, {\r\n        headers: {\r\n          \"X-Api-Key\": \"VSNXBaMjvgBp6NjjRheLV3cW\",\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n        responseType: \"blob\",\r\n      });\r\n      const url = URL.createObjectURL(res.data);\r\n      setProcessedImage(url);\r\n    } catch (err) {\r\n      alert(\"Remove.bg API error: \" + err.message);\r\n    }\r\n  };\r\n\r\n  // === Filters ===\r\n  const getFilterStyle = () => {\r\n    const intensity = filterIntensity;\r\n    switch (filter) {\r\n      case \"grayscale\":\r\n        return { filter: `grayscale(${intensity}%)` };\r\n      case \"sepia\":\r\n        return { filter: `sepia(${intensity}%)` };\r\n      case \"invert\":\r\n        return { filter: `invert(${intensity}%)` };\r\n      case \"blur\":\r\n        return { filter: `blur(${intensity / 20}px)` };\r\n      case \"brightness\":\r\n        return { filter: `brightness(${intensity}%)` };\r\n      case \"contrast\":\r\n        return { filter: `contrast(${intensity}%)` };\r\n      case \"saturate\":\r\n        return { filter: `saturate(${intensity}%)` };\r\n      case \"hue-rotate\":\r\n        return { filter: `hue-rotate(${intensity * 3.6}deg)` };\r\n      default:\r\n        return {};\r\n    }\r\n  };\r\n\r\n  // === Text overlay ===\r\n  const addText = () => {\r\n    const newText = {\r\n      id: Date.now(),\r\n      text: \"New Text\",\r\n      color: \"#ff0000\",\r\n      fontSize: 24,\r\n      x: 50,\r\n      y: 50,\r\n      width: 200,\r\n      height: 50,\r\n      rotation: 0,\r\n      opacity: 1,\r\n    };\r\n    setTexts([...texts, newText]);\r\n    setSelectedTextId(newText.id);\r\n  };\r\n\r\n  const updateText = (id, key, value) => {\r\n    setTexts(texts.map((t) => (t.id === id ? { ...t, [key]: value } : t)));\r\n  };\r\n\r\n  const deleteText = (id) => {\r\n    setTexts(texts.filter((t) => t.id !== id));\r\n    if (selectedTextId === id) setSelectedTextId(null);\r\n  };\r\n\r\n  // === Generate final image ===\r\n  const generateFinalImage = () => {\r\n    return new Promise((resolve) => {\r\n      const source = processedImage || imageURL;\r\n      if (!source) return resolve(null);\r\n\r\n      const img = new Image();\r\n      img.crossOrigin = \"anonymous\";\r\n      img.onload = () => {\r\n        const canvas = document.createElement(\"canvas\");\r\n        const ctx = canvas.getContext(\"2d\");\r\n        canvas.width = img.width;\r\n        canvas.height = img.height;\r\n\r\n        ctx.filter = getFilterStyle().filter || \"none\";\r\n        ctx.drawImage(img, 0, 0);\r\n\r\n        texts.forEach((t) => {\r\n          ctx.save();\r\n          ctx.translate(t.x + t.width / 2, t.y + t.height / 2);\r\n          ctx.rotate((t.rotation * Math.PI) / 180);\r\n          ctx.globalAlpha = t.opacity;\r\n          ctx.font = `${t.fontSize}px Arial`;\r\n          ctx.fillStyle = t.color;\r\n          ctx.textAlign = \"center\";\r\n          ctx.textBaseline = \"middle\";\r\n          ctx.fillText(t.text, 0, 0);\r\n          ctx.restore();\r\n        });\r\n\r\n        resolve(canvas.toDataURL(\"image/jpeg\", compression / 100));\r\n      };\r\n      img.src = source;\r\n    });\r\n  };\r\n\r\n  // === Download ===\r\n  const handleDownloadImage = async (format) => {\r\n    const finalDataURL = await generateFinalImage();\r\n    if (!finalDataURL) return;\r\n\r\n    if (format === \"pdf\") {\r\n      const doc = new jsPDF();\r\n      doc.addImage(finalDataURL, \"JPEG\", 10, 10, 190, 0);\r\n      doc.save(\"docfixer.pdf\");\r\n    } else {\r\n      const link = document.createElement(\"a\");\r\n      link.href = finalDataURL;\r\n      link.download = `docfixer.${format}`;\r\n      link.click();\r\n    }\r\n  };\r\n\r\n  // === OCR ===\r\n  const handleOCR = async () => {\r\n    if (!file || !file.type.startsWith(\"image/\")) return alert(\"Upload an image for OCR\");\r\n    setOcrText(\"Processing...\");\r\n    Tesseract.recognize(file, \"eng\", { logger: (m) => {} })\r\n      .then(({ data: { text } }) => {\r\n        setOcrText(text);\r\n      })\r\n      .catch((err) => setOcrText(\"Error: \" + err.message));\r\n  };\r\n\r\n  // === DocScanner (multi-image PDF) ===\r\n  const handleDocScanner = async () => {\r\n    if (scannedFiles.length === 0) return alert(\"No images scanned yet\");\r\n    const pdfDoc = await PDFDocument.create();\r\n    for (let imgFile of scannedFiles) {\r\n      const imgBytes = await imgFile.arrayBuffer();\r\n      let img;\r\n      if (imgFile.type.includes(\"png\")) img = await pdfDoc.embedPng(imgBytes);\r\n      else img = await pdfDoc.embedJpg(imgBytes);\r\n      const page = pdfDoc.addPage([img.width, img.height]);\r\n      page.drawImage(img, { x: 0, y: 0, width: img.width, height: img.height });\r\n    }\r\n    const pdfBytes = await pdfDoc.save();\r\n    const blob = new Blob([pdfBytes], { type: \"application/pdf\" });\r\n    const link = document.createElement(\"a\");\r\n    link.href = URL.createObjectURL(blob);\r\n    link.download = \"scanned.pdf\";\r\n    link.click();\r\n  };\r\n\r\n  // === Add image to scanner ===\r\n  const addScannedFile = (e) => {\r\n    const files = Array.from(e.target.files);\r\n    setScannedFiles([...scannedFiles, ...files]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      {/* Sidebar */}\r\n      <div className=\"sidebar\">\r\n        <h2>Tools</h2>\r\n\r\n        <div className=\"tool-section\">\r\n          <h3>Background Remover</h3>\r\n          <button onClick={handleRemoveBG}>Remove BG</button>\r\n        </div>\r\n\r\n        <div className=\"tool-section\">\r\n          <h3>Text Overlay</h3>\r\n          <button onClick={addText}>+ Add Text</button>\r\n        </div>\r\n\r\n        <div className=\"tool-section\">\r\n          <h3>Filters</h3>\r\n          <select value={filter} onChange={(e) => setFilter(e.target.value)}>\r\n            <option value=\"none\">None</option>\r\n            <option value=\"grayscale\">Grayscale</option>\r\n            <option value=\"sepia\">Sepia</option>\r\n            <option value=\"invert\">Invert</option>\r\n            <option value=\"blur\">Blur</option>\r\n            <option value=\"brightness\">Brightness</option>\r\n            <option value=\"contrast\">Contrast</option>\r\n            <option value=\"saturate\">Saturate</option>\r\n            <option value=\"hue-rotate\">Hue Rotate</option>\r\n          </select>\r\n          <label>\r\n            Intensity: {filterIntensity}%\r\n            <input\r\n              type=\"range\"\r\n              min=\"0\"\r\n              max=\"100\"\r\n              value={filterIntensity}\r\n              onChange={(e) => setFilterIntensity(e.target.value)}\r\n            />\r\n          </label>\r\n        </div>\r\n\r\n        <div className=\"tool-section\">\r\n          <h3>Compression</h3>\r\n          <input\r\n            type=\"range\"\r\n            min=\"10\"\r\n            max=\"100\"\r\n            value={compression}\r\n            onChange={(e) => setCompression(e.target.value)}\r\n          />\r\n          <span>{compression}%</span>\r\n        </div>\r\n\r\n        <div className=\"tool-section\">\r\n          <h3>Download</h3>\r\n          <button onClick={() => handleDownloadImage(\"jpeg\")}>JPEG</button>\r\n          <button onClick={() => handleDownloadImage(\"png\")}>PNG</button>\r\n          <button onClick={() => handleDownloadImage(\"pdf\")}>PDF</button>\r\n        </div>\r\n\r\n        <div className=\"tool-section\">\r\n          <h3>OCR Extractor</h3>\r\n          <button onClick={handleOCR}>Run OCR</button>\r\n        </div>\r\n\r\n        <div className=\"tool-section\">\r\n          <h3>Doc Scanner</h3>\r\n          <input type=\"file\" multiple onChange={addScannedFile} />\r\n          <button onClick={handleDocScanner}>Create PDF</button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Editor */}\r\n      <div className=\"editor\">\r\n        {!imageURL && (\r\n          <div\r\n            className=\"upload-zone\"\r\n            onDrop={handleDrop}\r\n            onDragOver={handleDragOver}\r\n            onClick={() => document.getElementById(\"fileInput\").click()}\r\n          >\r\n            <p>Drag & Drop file here or click to upload</p>\r\n            <input\r\n              id=\"fileInput\"\r\n              type=\"file\"\r\n              accept=\"image/*,application/pdf\"\r\n              onChange={handleFileChange}\r\n              style={{ display: \"none\" }}\r\n            />\r\n          </div>\r\n        )}\r\n\r\n       {imageURL && (\r\n  <div className=\"preview-area\">\r\n    {file?.type.startsWith(\"image/\") ? (\r\n      ocrText ? (\r\n        <div className=\"ocr-preview-split\">\r\n          {/* Left side: image editor */}\r\n          <div className=\"ocr-left\" style={{ position: \"relative\" }}>\r\n            <img\r\n              src={processedImage || imageURL}\r\n              alt=\"Preview\"\r\n              style={{ maxWidth: \"100%\", ...getFilterStyle() }}\r\n            />\r\n            {texts.map((t) => (\r\n              <Rnd\r\n                key={t.id}\r\n                size={{ width: t.width, height: t.height }}\r\n                position={{ x: t.x, y: t.y }}\r\n                onDragStop={(e, d) => {\r\n                  updateText(t.id, \"x\", d.x);\r\n                  updateText(t.id, \"y\", d.y);\r\n                }}\r\n                onResizeStop={(e, direction, ref, delta, position) => {\r\n                  updateText(t.id, \"width\", parseInt(ref.style.width));\r\n                  updateText(t.id, \"height\", parseInt(ref.style.height));\r\n                  updateText(t.id, \"x\", position.x);\r\n                  updateText(t.id, \"y\", position.y);\r\n                }}\r\n                onClick={() => setSelectedTextId(t.id)}\r\n                style={{\r\n                  border: selectedTextId === t.id ? \"2px dashed #007bff\" : \"none\",\r\n                  padding: \"2px\",\r\n                  cursor: \"move\",\r\n                  backgroundColor: \"rgba(255,255,255,0.2)\",\r\n                  overflow: \"hidden\",\r\n                  transform: `rotate(${t.rotation}deg)`,\r\n                  opacity: t.opacity,\r\n                }}\r\n              >\r\n                <div\r\n                  contentEditable\r\n                  suppressContentEditableWarning\r\n                  style={{\r\n                    width: \"100%\",\r\n                    height: \"100%\",\r\n                    textAlign: \"center\",\r\n                    cursor: \"text\",\r\n                    color: t.color,\r\n                    fontSize: t.fontSize,\r\n                  }}\r\n                  onInput={(e) =>\r\n                    updateText(t.id, \"text\", e.currentTarget.textContent)\r\n                  }\r\n                >\r\n                  {t.text}\r\n                </div>\r\n              </Rnd>\r\n            ))}\r\n          </div>\r\n\r\n          {/* Right side: OCR output */}\r\n          <div className=\"ocr-right\">\r\n            <h4>OCR Output:</h4>\r\n            <div className=\"ocr-output\">{ocrText}</div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        // Normal editor without OCR\r\n        <div style={{ position: \"relative\" }}>\r\n          <img\r\n            src={processedImage || imageURL}\r\n            alt=\"Preview\"\r\n            style={{ maxWidth: \"100%\", ...getFilterStyle() }}\r\n          />\r\n          {texts.map((t) => (\r\n            <Rnd\r\n              key={t.id}\r\n              size={{ width: t.width, height: t.height }}\r\n              position={{ x: t.x, y: t.y }}\r\n              onDragStop={(e, d) => {\r\n                updateText(t.id, \"x\", d.x);\r\n                updateText(t.id, \"y\", d.y);\r\n              }}\r\n              onResizeStop={(e, direction, ref, delta, position) => {\r\n                updateText(t.id, \"width\", parseInt(ref.style.width));\r\n                updateText(t.id, \"height\", parseInt(ref.style.height));\r\n                updateText(t.id, \"x\", position.x);\r\n                updateText(t.id, \"y\", position.y);\r\n              }}\r\n              onClick={() => setSelectedTextId(t.id)}\r\n              style={{\r\n                border: selectedTextId === t.id ? \"2px dashed #007bff\" : \"none\",\r\n                padding: \"2px\",\r\n                cursor: \"move\",\r\n                backgroundColor: \"rgba(255,255,255,0.2)\",\r\n                overflow: \"hidden\",\r\n                transform: `rotate(${t.rotation}deg)`,\r\n                opacity: t.opacity,\r\n              }}\r\n            >\r\n              <div\r\n                contentEditable\r\n                suppressContentEditableWarning\r\n                style={{\r\n                  width: \"100%\",\r\n                  height: \"100%\",\r\n                  textAlign: \"center\",\r\n                  cursor: \"text\",\r\n                  color: t.color,\r\n                  fontSize: t.fontSize,\r\n                }}\r\n                onInput={(e) =>\r\n                  updateText(t.id, \"text\", e.currentTarget.textContent)\r\n                }\r\n              >\r\n                {t.text}\r\n              </div>\r\n            </Rnd>\r\n          ))}\r\n        </div>\r\n      )\r\n    ) : (\r\n      // PDF preview\r\n      <embed src={imageURL} type=\"application/pdf\" width=\"100%\" height=\"600px\" />\r\n    )}\r\n  </div>\r\n)}\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}