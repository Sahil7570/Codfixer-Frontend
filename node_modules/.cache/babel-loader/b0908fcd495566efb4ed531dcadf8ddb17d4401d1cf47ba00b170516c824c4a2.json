{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sahil\\\\OneDrive\\\\Desktop\\\\docfixer\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Rnd } from \"react-rnd\";\nimport { jsPDF } from \"jspdf\";\nimport { PDFDocument } from \"pdf-lib\";\nimport Tesseract from \"tesseract.js\";\nimport { HexColorPicker } from \"react-colorful\"; // added for color picker\nimport \"./styles/App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // ===== State Variables =====\n  const [file, setFile] = useState(null);\n  const [imageURL, setImageURL] = useState(null);\n  const [processedImage, setProcessedImage] = useState(null);\n  const [filter, setFilter] = useState(\"none\");\n  const [filterIntensity, setFilterIntensity] = useState(100);\n  const [compression, setCompression] = useState(100);\n  const [texts, setTexts] = useState([]);\n  const [selectedTextId, setSelectedTextId] = useState(null);\n  const [showColorPicker, setShowColorPicker] = useState(false);\n  const [ocrText, setOcrText] = useState(\"\");\n  const [scannedFiles, setScannedFiles] = useState([]);\n\n  // ===== File Upload =====\n  const handleFileChange = e => {\n    const uploadedFile = e.target.files[0];\n    if (!uploadedFile) return;\n    setFile(uploadedFile);\n    setImageURL(URL.createObjectURL(uploadedFile));\n    setProcessedImage(null);\n    setTexts([]);\n    setOcrText(\"\");\n  };\n  const handleDrop = e => {\n    e.preventDefault();\n    const droppedFile = e.dataTransfer.files[0];\n    if (!droppedFile) return;\n    setFile(droppedFile);\n    setImageURL(URL.createObjectURL(droppedFile));\n    setProcessedImage(null);\n    setTexts([]);\n    setOcrText(\"\");\n  };\n  const handleDragOver = e => e.preventDefault();\n\n  // ===== Remove Background =====\n  const handleRemoveBG = async () => {\n    if (!file) return alert(\"Upload an image first\");\n    if (file.type.includes(\"pdf\")) return alert(\"Remove.bg works only with images\");\n    const formData = new FormData();\n    formData.append(\"image_file\", file);\n    try {\n      const res = await axios.post(\"https://api.remove.bg/v1.0/removebg\", formData, {\n        headers: {\n          \"X-Api-Key\": \"VSNXBaMjvgBp6NjjRheLV3cW\"\n        },\n        responseType: \"blob\"\n      });\n      setProcessedImage(URL.createObjectURL(res.data));\n    } catch (err) {\n      alert(\"Remove.bg API error: \" + err.message);\n    }\n  };\n\n  // ===== Filters =====\n  const getFilterStyle = () => {\n    const i = filterIntensity;\n    switch (filter) {\n      case \"grayscale\":\n        return {\n          filter: `grayscale(${i}%)`\n        };\n      case \"sepia\":\n        return {\n          filter: `sepia(${i}%)`\n        };\n      case \"invert\":\n        return {\n          filter: `invert(${i}%)`\n        };\n      case \"blur\":\n        return {\n          filter: `blur(${i / 20}px)`\n        };\n      case \"brightness\":\n        return {\n          filter: `brightness(${i}%)`\n        };\n      case \"contrast\":\n        return {\n          filter: `contrast(${i}%)`\n        };\n      case \"saturate\":\n        return {\n          filter: `saturate(${i}%)`\n        };\n      case \"hue-rotate\":\n        return {\n          filter: `hue-rotate(${i * 3.6}deg)`\n        };\n      default:\n        return {};\n    }\n  };\n\n  // ===== Text Overlay (modern version) =====\n  const addText = () => {\n    const newText = {\n      id: Date.now(),\n      text: \"New Text\",\n      color: \"#ff0000\",\n      fontSize: 24,\n      x: 50,\n      y: 50,\n      width: 200,\n      height: 50,\n      rotation: 0,\n      opacity: 1\n    };\n    setTexts([...texts, newText]);\n    setSelectedTextId(newText.id);\n    setShowColorPicker(false);\n  };\n  const updateText = (id, key, value) => {\n    setTexts(texts.map(t => t.id === id ? {\n      ...t,\n      [key]: value\n    } : t));\n  };\n  const deleteText = id => {\n    setTexts(texts.filter(t => t.id !== id));\n    if (selectedTextId === id) setSelectedTextId(null);\n    setShowColorPicker(false);\n  };\n\n  // ===== Generate Image =====\n  const generateFinalImage = () => {\n    return new Promise(resolve => {\n      const source = processedImage || imageURL;\n      if (!source) return resolve(null);\n      const img = new Image();\n      img.crossOrigin = \"anonymous\";\n      img.onload = () => {\n        const canvas = document.createElement(\"canvas\");\n        const ctx = canvas.getContext(\"2d\");\n        canvas.width = img.width;\n        canvas.height = img.height;\n        ctx.filter = getFilterStyle().filter || \"none\";\n        ctx.drawImage(img, 0, 0);\n        texts.forEach(t => {\n          ctx.save();\n          ctx.translate(t.x + t.width / 2, t.y + t.height / 2);\n          ctx.rotate(t.rotation * Math.PI / 180);\n          ctx.globalAlpha = t.opacity;\n          ctx.font = `${t.fontSize}px Arial`;\n          ctx.fillStyle = t.color;\n          ctx.textAlign = \"center\";\n          ctx.textBaseline = \"middle\";\n          ctx.fillText(t.text, 0, 0);\n          ctx.restore();\n        });\n        resolve(canvas.toDataURL(\"image/jpeg\", compression / 100));\n      };\n      img.src = source;\n    });\n  };\n\n  // ===== Download =====\n  const handleDownloadImage = async format => {\n    const finalDataURL = await generateFinalImage();\n    if (!finalDataURL) return;\n    if (format === \"pdf\") {\n      const doc = new jsPDF();\n      doc.addImage(finalDataURL, \"JPEG\", 10, 10, 190, 0);\n      doc.save(\"docfixer.pdf\");\n    } else {\n      const link = document.createElement(\"a\");\n      link.href = finalDataURL;\n      link.download = `docfixer.${format}`;\n      link.click();\n    }\n  };\n\n  // ===== OCR =====\n  const handleOCR = async () => {\n    if (!file || !file.type.startsWith(\"image/\")) return alert(\"Upload an image for OCR\");\n    setOcrText(\"Processing...\");\n    Tesseract.recognize(file, \"eng\").then(({\n      data: {\n        text\n      }\n    }) => setOcrText(text));\n  };\n\n  // ===== Doc Scanner =====\n  const handleDocScanner = async () => {\n    if (!scannedFiles.length) return alert(\"No images scanned yet\");\n    const pdfDoc = await PDFDocument.create();\n    for (let imgFile of scannedFiles) {\n      const bytes = await imgFile.arrayBuffer();\n      const img = imgFile.type.includes(\"png\") ? await pdfDoc.embedPng(bytes) : await pdfDoc.embedJpg(bytes);\n      const page = pdfDoc.addPage([img.width, img.height]);\n      page.drawImage(img, {\n        x: 0,\n        y: 0,\n        width: img.width,\n        height: img.height\n      });\n    }\n    const pdfBytes = await pdfDoc.save();\n    const blob = new Blob([pdfBytes], {\n      type: \"application/pdf\"\n    });\n    const link = document.createElement(\"a\");\n    link.href = URL.createObjectURL(blob);\n    link.download = \"scanned.pdf\";\n    link.click();\n  };\n  const addScannedFile = e => setScannedFiles([...scannedFiles, ...Array.from(e.target.files)]);\n\n  // ===== JSX =====\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Tools\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tool-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Background Remover\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleRemoveBG,\n          children: \"Remove BG\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tool-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Text Overlay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addText,\n          children: \"+ Add Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tool-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Filters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: filter,\n          onChange: e => setFilter(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"none\",\n            children: \"None\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"grayscale\",\n            children: \"Grayscale\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"sepia\",\n            children: \"Sepia\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"invert\",\n            children: \"Invert\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"blur\",\n            children: \"Blur\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"brightness\",\n            children: \"Brightness\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"contrast\",\n            children: \"Contrast\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"saturate\",\n            children: \"Saturate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"hue-rotate\",\n            children: \"Hue Rotate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Intensity: \", filterIntensity, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"0\",\n          max: \"100\",\n          value: filterIntensity,\n          onChange: e => setFilterIntensity(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tool-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Compression\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"10\",\n          max: \"100\",\n          value: compression,\n          onChange: e => setCompression(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [compression, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tool-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Download\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDownloadImage(\"jpeg\"),\n          children: \"JPEG\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDownloadImage(\"png\"),\n          children: \"PNG\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDownloadImage(\"pdf\"),\n          children: \"PDF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tool-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"OCR Extractor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleOCR,\n          children: \"Run OCR\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tool-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Doc Scanner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          multiple: true,\n          onChange: addScannedFile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDocScanner,\n          children: \"Create PDF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editor\",\n      children: [!imageURL && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-zone\",\n        onDrop: handleDrop,\n        onDragOver: handleDragOver,\n        onClick: () => document.getElementById(\"fileInput\").click(),\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Drag & Drop file here or click to upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"fileInput\",\n          type: \"file\",\n          accept: \"image/*,application/pdf\",\n          onChange: handleFileChange,\n          style: {\n            display: \"none\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 11\n      }, this), imageURL && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"preview-area\",\n        children: file.type.startsWith(\"image/\") ? ocrText ?\n        /*#__PURE__*/\n        // OCR split view\n        _jsxDEV(\"div\", {\n          className: \"ocr-preview-split\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ocr-left\",\n            style: {\n              position: \"relative\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: processedImage || imageURL,\n              alt: \"Preview\",\n              style: {\n                maxWidth: \"100%\",\n                ...getFilterStyle()\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 21\n            }, this), texts.map(t => /*#__PURE__*/_jsxDEV(Rnd, {\n              size: {\n                width: t.width,\n                height: t.height\n              },\n              position: {\n                x: t.x,\n                y: t.y\n              },\n              onDragStop: (e, d) => {\n                updateText(t.id, \"x\", d.x);\n                updateText(t.id, \"y\", d.y);\n              },\n              onResizeStop: (e, dir, ref, delta, pos) => {\n                updateText(t.id, \"width\", parseInt(ref.style.width));\n                updateText(t.id, \"height\", parseInt(ref.style.height));\n                updateText(t.id, \"x\", pos.x);\n                updateText(t.id, \"y\", pos.y);\n              },\n              onClick: () => {\n                setSelectedTextId(t.id);\n                setShowColorPicker(false);\n              },\n              style: {\n                border: selectedTextId === t.id ? \"2px dashed #007bff\" : \"none\",\n                padding: 2,\n                cursor: \"move\",\n                backgroundColor: \"rgba(255,255,255,0.2)\",\n                transform: `rotate(${t.rotation}deg)`,\n                opacity: t.opacity\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                contentEditable: true,\n                suppressContentEditableWarning: true,\n                style: {\n                  width: \"100%\",\n                  height: \"100%\",\n                  textAlign: \"center\",\n                  cursor: \"text\",\n                  color: t.color,\n                  fontSize: t.fontSize\n                },\n                onInput: e => updateText(t.id, \"text\", e.currentTarget.textContent),\n                children: t.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 25\n              }, this), selectedTextId === t.id && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  textAlign: \"center\",\n                  marginTop: 5\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: [\"Font:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    value: t.fontSize,\n                    onChange: e => updateText(t.id, \"fontSize\", parseInt(e.target.value)),\n                    style: {\n                      width: 50\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 282,\n                    columnNumber: 31\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => setShowColorPicker(!showColorPicker),\n                  children: \"Color\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => deleteText(t.id),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 29\n                }, this), showColorPicker && /*#__PURE__*/_jsxDEV(HexColorPicker, {\n                  color: t.color,\n                  onChange: color => updateText(t.id, \"color\", color)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 27\n              }, this)]\n            }, t.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 23\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ocr-right\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"OCR Output:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ocr-output\",\n              children: ocrText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 17\n        }, this) :\n        /*#__PURE__*/\n        // Normal editor without OCR\n        _jsxDEV(\"div\", {\n          style: {\n            position: \"relative\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: processedImage || imageURL,\n            alt: \"Preview\",\n            style: {\n              maxWidth: \"100%\",\n              ...getFilterStyle()\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 19\n          }, this), texts.map(t => /*#__PURE__*/_jsxDEV(Rnd, {\n            size: {\n              width: t.width,\n              height: t.height\n            },\n            position: {\n              x: t.x,\n              y: t.y\n            },\n            bounds: \"parent\",\n            onDragStop: (e, d) => {\n              updateText(t.id, \"x\", d.x);\n              updateText(t.id, \"y\", d.y);\n            },\n            onResizeStop: (e, dir, ref, delta, pos) => {\n              updateText(t.id, \"width\", parseInt(ref.style.width));\n              updateText(t.id, \"height\", parseInt(ref.style.height));\n              updateText(t.id, \"x\", pos.x);\n              updateText(t.id, \"y\", pos.y);\n            },\n            onClick: () => {\n              setSelectedTextId(t.id);\n            },\n            style: {\n              border: selectedTextId === t.id ? \"2px dashed #007bff\" : \"none\",\n              padding: 4,\n              cursor: \"move\",\n              backgroundColor: \"rgba(255,255,255,0.2)\",\n              borderRadius: 8,\n              boxShadow: \"0 2px 8px rgba(0,0,0,0.2)\",\n              transform: `rotate(${t.rotation}deg)`,\n              opacity: t.opacity,\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              contentEditable: true,\n              suppressContentEditableWarning: true,\n              style: {\n                width: \"100%\",\n                height: \"100%\",\n                textAlign: \"center\",\n                cursor: \"text\",\n                color: t.color,\n                fontSize: t.fontSize,\n                outline: \"none\",\n                wordBreak: \"break-word\"\n              },\n              onInput: e => updateText(t.id, \"text\", e.currentTarget.textContent),\n              children: t.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 5\n            }, this), selectedTextId === t.id && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                textAlign: \"center\",\n                marginTop: 6\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\"Font:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  value: t.fontSize,\n                  onChange: e => updateText(t.id, \"fontSize\", parseInt(e.target.value)),\n                  style: {\n                    width: 50\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 350,\n                  columnNumber: 11\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => updateText(t.id, \"color\", prompt(\"Enter color hex or name:\", t.color)),\n                children: \"Color\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => deleteText(t.id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 7\n            }, this)]\n          }, t.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 3\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"embed\", {\n          src: imageURL,\n          type: \"application/pdf\",\n          width: \"100%\",\n          height: \"600px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"dSkBl40pQx+WZTvCbU2X1MP3ygg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","Rnd","jsPDF","PDFDocument","Tesseract","HexColorPicker","jsxDEV","_jsxDEV","App","_s","file","setFile","imageURL","setImageURL","processedImage","setProcessedImage","filter","setFilter","filterIntensity","setFilterIntensity","compression","setCompression","texts","setTexts","selectedTextId","setSelectedTextId","showColorPicker","setShowColorPicker","ocrText","setOcrText","scannedFiles","setScannedFiles","handleFileChange","e","uploadedFile","target","files","URL","createObjectURL","handleDrop","preventDefault","droppedFile","dataTransfer","handleDragOver","handleRemoveBG","alert","type","includes","formData","FormData","append","res","post","headers","responseType","data","err","message","getFilterStyle","i","addText","newText","id","Date","now","text","color","fontSize","x","y","width","height","rotation","opacity","updateText","key","value","map","t","deleteText","generateFinalImage","Promise","resolve","source","img","Image","crossOrigin","onload","canvas","document","createElement","ctx","getContext","drawImage","forEach","save","translate","rotate","Math","PI","globalAlpha","font","fillStyle","textAlign","textBaseline","fillText","restore","toDataURL","src","handleDownloadImage","format","finalDataURL","doc","addImage","link","href","download","click","handleOCR","startsWith","recognize","then","handleDocScanner","length","pdfDoc","create","imgFile","bytes","arrayBuffer","embedPng","embedJpg","page","addPage","pdfBytes","blob","Blob","addScannedFile","Array","from","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onChange","min","max","multiple","onDrop","onDragOver","getElementById","accept","style","display","position","alt","maxWidth","size","onDragStop","d","onResizeStop","dir","ref","delta","pos","parseInt","border","padding","cursor","backgroundColor","transform","contentEditable","suppressContentEditableWarning","onInput","currentTarget","textContent","marginTop","bounds","borderRadius","boxShadow","alignItems","justifyContent","outline","wordBreak","prompt","_c","$RefreshReg$"],"sources":["C:/Users/sahil/OneDrive/Desktop/docfixer/frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Rnd } from \"react-rnd\";\r\nimport { jsPDF } from \"jspdf\";\r\nimport { PDFDocument } from \"pdf-lib\";\r\nimport Tesseract from \"tesseract.js\";\r\nimport { HexColorPicker } from \"react-colorful\"; // added for color picker\r\nimport \"./styles/App.css\";\r\n\r\nfunction App() {\r\n  // ===== State Variables =====\r\n  const [file, setFile] = useState(null);\r\n  const [imageURL, setImageURL] = useState(null);\r\n  const [processedImage, setProcessedImage] = useState(null);\r\n  const [filter, setFilter] = useState(\"none\");\r\n  const [filterIntensity, setFilterIntensity] = useState(100);\r\n  const [compression, setCompression] = useState(100);\r\n  const [texts, setTexts] = useState([]);\r\n  const [selectedTextId, setSelectedTextId] = useState(null);\r\n  const [showColorPicker, setShowColorPicker] = useState(false);\r\n  const [ocrText, setOcrText] = useState(\"\");\r\n  const [scannedFiles, setScannedFiles] = useState([]);\r\n\r\n  // ===== File Upload =====\r\n  const handleFileChange = (e) => {\r\n    const uploadedFile = e.target.files[0];\r\n    if (!uploadedFile) return;\r\n    setFile(uploadedFile);\r\n    setImageURL(URL.createObjectURL(uploadedFile));\r\n    setProcessedImage(null);\r\n    setTexts([]);\r\n    setOcrText(\"\");\r\n  };\r\n  const handleDrop = (e) => {\r\n    e.preventDefault();\r\n    const droppedFile = e.dataTransfer.files[0];\r\n    if (!droppedFile) return;\r\n    setFile(droppedFile);\r\n    setImageURL(URL.createObjectURL(droppedFile));\r\n    setProcessedImage(null);\r\n    setTexts([]);\r\n    setOcrText(\"\");\r\n  };\r\n  const handleDragOver = (e) => e.preventDefault();\r\n\r\n  // ===== Remove Background =====\r\n  const handleRemoveBG = async () => {\r\n    if (!file) return alert(\"Upload an image first\");\r\n    if (file.type.includes(\"pdf\")) return alert(\"Remove.bg works only with images\");\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"image_file\", file);\r\n    try {\r\n      const res = await axios.post(\"https://api.remove.bg/v1.0/removebg\", formData, {\r\n        headers: { \"X-Api-Key\": \"VSNXBaMjvgBp6NjjRheLV3cW\" },\r\n        responseType: \"blob\",\r\n      });\r\n      setProcessedImage(URL.createObjectURL(res.data));\r\n    } catch (err) {\r\n      alert(\"Remove.bg API error: \" + err.message);\r\n    }\r\n  };\r\n\r\n  // ===== Filters =====\r\n  const getFilterStyle = () => {\r\n    const i = filterIntensity;\r\n    switch (filter) {\r\n      case \"grayscale\": return { filter: `grayscale(${i}%)` };\r\n      case \"sepia\": return { filter: `sepia(${i}%)` };\r\n      case \"invert\": return { filter: `invert(${i}%)` };\r\n      case \"blur\": return { filter: `blur(${i / 20}px)` };\r\n      case \"brightness\": return { filter: `brightness(${i}%)` };\r\n      case \"contrast\": return { filter: `contrast(${i}%)` };\r\n      case \"saturate\": return { filter: `saturate(${i}%)` };\r\n      case \"hue-rotate\": return { filter: `hue-rotate(${i * 3.6}deg)` };\r\n      default: return {};\r\n    }\r\n  };\r\n\r\n  // ===== Text Overlay (modern version) =====\r\n  const addText = () => {\r\n    const newText = {\r\n      id: Date.now(),\r\n      text: \"New Text\",\r\n      color: \"#ff0000\",\r\n      fontSize: 24,\r\n      x: 50,\r\n      y: 50,\r\n      width: 200,\r\n      height: 50,\r\n      rotation: 0,\r\n      opacity: 1,\r\n    };\r\n    setTexts([...texts, newText]);\r\n    setSelectedTextId(newText.id);\r\n    setShowColorPicker(false);\r\n  };\r\n\r\n  const updateText = (id, key, value) => {\r\n    setTexts(texts.map(t => (t.id === id ? { ...t, [key]: value } : t)));\r\n  };\r\n\r\n  const deleteText = (id) => {\r\n    setTexts(texts.filter(t => t.id !== id));\r\n    if (selectedTextId === id) setSelectedTextId(null);\r\n    setShowColorPicker(false);\r\n  };\r\n\r\n  // ===== Generate Image =====\r\n  const generateFinalImage = () => {\r\n    return new Promise((resolve) => {\r\n      const source = processedImage || imageURL;\r\n      if (!source) return resolve(null);\r\n      const img = new Image();\r\n      img.crossOrigin = \"anonymous\";\r\n      img.onload = () => {\r\n        const canvas = document.createElement(\"canvas\");\r\n        const ctx = canvas.getContext(\"2d\");\r\n        canvas.width = img.width;\r\n        canvas.height = img.height;\r\n        ctx.filter = getFilterStyle().filter || \"none\";\r\n        ctx.drawImage(img, 0, 0);\r\n        texts.forEach(t => {\r\n          ctx.save();\r\n          ctx.translate(t.x + t.width / 2, t.y + t.height / 2);\r\n          ctx.rotate((t.rotation * Math.PI) / 180);\r\n          ctx.globalAlpha = t.opacity;\r\n          ctx.font = `${t.fontSize}px Arial`;\r\n          ctx.fillStyle = t.color;\r\n          ctx.textAlign = \"center\";\r\n          ctx.textBaseline = \"middle\";\r\n          ctx.fillText(t.text, 0, 0);\r\n          ctx.restore();\r\n        });\r\n        resolve(canvas.toDataURL(\"image/jpeg\", compression / 100));\r\n      };\r\n      img.src = source;\r\n    });\r\n  };\r\n\r\n  // ===== Download =====\r\n  const handleDownloadImage = async (format) => {\r\n    const finalDataURL = await generateFinalImage();\r\n    if (!finalDataURL) return;\r\n    if (format === \"pdf\") {\r\n      const doc = new jsPDF();\r\n      doc.addImage(finalDataURL, \"JPEG\", 10, 10, 190, 0);\r\n      doc.save(\"docfixer.pdf\");\r\n    } else {\r\n      const link = document.createElement(\"a\");\r\n      link.href = finalDataURL;\r\n      link.download = `docfixer.${format}`;\r\n      link.click();\r\n    }\r\n  };\r\n\r\n  // ===== OCR =====\r\n  const handleOCR = async () => {\r\n    if (!file || !file.type.startsWith(\"image/\")) return alert(\"Upload an image for OCR\");\r\n    setOcrText(\"Processing...\");\r\n    Tesseract.recognize(file, \"eng\").then(({ data: { text } }) => setOcrText(text));\r\n  };\r\n\r\n  // ===== Doc Scanner =====\r\n  const handleDocScanner = async () => {\r\n    if (!scannedFiles.length) return alert(\"No images scanned yet\");\r\n    const pdfDoc = await PDFDocument.create();\r\n    for (let imgFile of scannedFiles) {\r\n      const bytes = await imgFile.arrayBuffer();\r\n      const img = imgFile.type.includes(\"png\")\r\n        ? await pdfDoc.embedPng(bytes)\r\n        : await pdfDoc.embedJpg(bytes);\r\n      const page = pdfDoc.addPage([img.width, img.height]);\r\n      page.drawImage(img, { x: 0, y: 0, width: img.width, height: img.height });\r\n    }\r\n    const pdfBytes = await pdfDoc.save();\r\n    const blob = new Blob([pdfBytes], { type: \"application/pdf\" });\r\n    const link = document.createElement(\"a\");\r\n    link.href = URL.createObjectURL(blob);\r\n    link.download = \"scanned.pdf\";\r\n    link.click();\r\n  };\r\n\r\n  const addScannedFile = (e) => setScannedFiles([...scannedFiles, ...Array.from(e.target.files)]);\r\n\r\n  // ===== JSX =====\r\n  return (\r\n    <div className=\"app-container\">\r\n      {/* Sidebar */}\r\n      <div className=\"sidebar\">\r\n        <h2>Tools</h2>\r\n        <div className=\"tool-section\">\r\n          <h3>Background Remover</h3>\r\n          <button onClick={handleRemoveBG}>Remove BG</button>\r\n        </div>\r\n        <div className=\"tool-section\">\r\n          <h3>Text Overlay</h3>\r\n          <button onClick={addText}>+ Add Text</button>\r\n        </div>\r\n        {/* Filters, Compression, Download, OCR, Doc Scanner remain unchanged */}\r\n        <div className=\"tool-section\">\r\n          <h3>Filters</h3>\r\n          <select value={filter} onChange={(e) => setFilter(e.target.value)}>\r\n            <option value=\"none\">None</option>\r\n            <option value=\"grayscale\">Grayscale</option>\r\n            <option value=\"sepia\">Sepia</option>\r\n            <option value=\"invert\">Invert</option>\r\n            <option value=\"blur\">Blur</option>\r\n            <option value=\"brightness\">Brightness</option>\r\n            <option value=\"contrast\">Contrast</option>\r\n            <option value=\"saturate\">Saturate</option>\r\n            <option value=\"hue-rotate\">Hue Rotate</option>\r\n          </select>\r\n          <label>Intensity: {filterIntensity}%</label>\r\n          <input type=\"range\" min=\"0\" max=\"100\" value={filterIntensity} onChange={(e) => setFilterIntensity(e.target.value)} />\r\n        </div>\r\n        <div className=\"tool-section\">\r\n          <h3>Compression</h3>\r\n          <input type=\"range\" min=\"10\" max=\"100\" value={compression} onChange={(e) => setCompression(e.target.value)} />\r\n          <span>{compression}%</span>\r\n        </div>\r\n        <div className=\"tool-section\">\r\n          <h3>Download</h3>\r\n          <button onClick={() => handleDownloadImage(\"jpeg\")}>JPEG</button>\r\n          <button onClick={() => handleDownloadImage(\"png\")}>PNG</button>\r\n          <button onClick={() => handleDownloadImage(\"pdf\")}>PDF</button>\r\n        </div>\r\n        <div className=\"tool-section\">\r\n          <h3>OCR Extractor</h3>\r\n          <button onClick={handleOCR}>Run OCR</button>\r\n        </div>\r\n        <div className=\"tool-section\">\r\n          <h3>Doc Scanner</h3>\r\n          <input type=\"file\" multiple onChange={addScannedFile} />\r\n          <button onClick={handleDocScanner}>Create PDF</button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Editor */}\r\n      <div className=\"editor\">\r\n        {!imageURL && (\r\n          <div className=\"upload-zone\" onDrop={handleDrop} onDragOver={handleDragOver} onClick={() => document.getElementById(\"fileInput\").click()}>\r\n            <p>Drag & Drop file here or click to upload</p>\r\n            <input id=\"fileInput\" type=\"file\" accept=\"image/*,application/pdf\" onChange={handleFileChange} style={{ display: \"none\" }} />\r\n          </div>\r\n        )}\r\n\r\n        {imageURL && (\r\n          <div className=\"preview-area\">\r\n            {file.type.startsWith(\"image/\") ? (\r\n              ocrText ? (\r\n                // OCR split view\r\n                <div className=\"ocr-preview-split\">\r\n                  <div className=\"ocr-left\" style={{ position: \"relative\" }}>\r\n                    <img src={processedImage || imageURL} alt=\"Preview\" style={{ maxWidth: \"100%\", ...getFilterStyle() }} />\r\n                    {texts.map(t => (\r\n                      <Rnd\r\n                        key={t.id}\r\n                        size={{ width: t.width, height: t.height }}\r\n                        position={{ x: t.x, y: t.y }}\r\n                        onDragStop={(e, d) => { updateText(t.id, \"x\", d.x); updateText(t.id, \"y\", d.y); }}\r\n                        onResizeStop={(e, dir, ref, delta, pos) => {\r\n                          updateText(t.id, \"width\", parseInt(ref.style.width));\r\n                          updateText(t.id, \"height\", parseInt(ref.style.height));\r\n                          updateText(t.id, \"x\", pos.x);\r\n                          updateText(t.id, \"y\", pos.y);\r\n                        }}\r\n                        onClick={() => { setSelectedTextId(t.id); setShowColorPicker(false); }}\r\n                        style={{ border: selectedTextId === t.id ? \"2px dashed #007bff\" : \"none\", padding: 2, cursor: \"move\", backgroundColor: \"rgba(255,255,255,0.2)\", transform: `rotate(${t.rotation}deg)`, opacity: t.opacity }}\r\n                      >\r\n                        <div\r\n                          contentEditable\r\n                          suppressContentEditableWarning\r\n                          style={{ width: \"100%\", height: \"100%\", textAlign: \"center\", cursor: \"text\", color: t.color, fontSize: t.fontSize }}\r\n                          onInput={e => updateText(t.id, \"text\", e.currentTarget.textContent)}\r\n                        >\r\n                          {t.text}\r\n                        </div>\r\n                        {selectedTextId === t.id && (\r\n                          <div style={{ textAlign: \"center\", marginTop: 5 }}>\r\n                            <label>Font:\r\n                              <input type=\"number\" value={t.fontSize} onChange={e => updateText(t.id, \"fontSize\", parseInt(e.target.value))} style={{ width: 50 }} />\r\n                            </label>\r\n                            <button onClick={() => setShowColorPicker(!showColorPicker)}>Color</button>\r\n                            <button onClick={() => deleteText(t.id)}>Delete</button>\r\n                            {showColorPicker && <HexColorPicker color={t.color} onChange={color => updateText(t.id, \"color\", color)} />}\r\n                          </div>\r\n                        )}\r\n                      </Rnd>\r\n                    ))}\r\n                  </div>\r\n                  <div className=\"ocr-right\">\r\n                    <h4>OCR Output:</h4>\r\n                    <div className=\"ocr-output\">{ocrText}</div>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                // Normal editor without OCR\r\n                <div style={{ position: \"relative\" }}>\r\n                  <img src={processedImage || imageURL} alt=\"Preview\" style={{ maxWidth: \"100%\", ...getFilterStyle() }} />\r\n                 {texts.map(t => (\r\n  <Rnd\r\n    key={t.id}\r\n    size={{ width: t.width, height: t.height }}\r\n    position={{ x: t.x, y: t.y }}\r\n    bounds=\"parent\"\r\n    onDragStop={(e, d) => { updateText(t.id, \"x\", d.x); updateText(t.id, \"y\", d.y); }}\r\n    onResizeStop={(e, dir, ref, delta, pos) => {\r\n      updateText(t.id, \"width\", parseInt(ref.style.width));\r\n      updateText(t.id, \"height\", parseInt(ref.style.height));\r\n      updateText(t.id, \"x\", pos.x);\r\n      updateText(t.id, \"y\", pos.y);\r\n    }}\r\n    onClick={() => { setSelectedTextId(t.id); }}\r\n    style={{\r\n      border: selectedTextId === t.id ? \"2px dashed #007bff\" : \"none\",\r\n      padding: 4,\r\n      cursor: \"move\",\r\n      backgroundColor: \"rgba(255,255,255,0.2)\",\r\n      borderRadius: 8,\r\n      boxShadow: \"0 2px 8px rgba(0,0,0,0.2)\",\r\n      transform: `rotate(${t.rotation}deg)`,\r\n      opacity: t.opacity,\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n    }}\r\n  >\r\n    <div\r\n      contentEditable\r\n      suppressContentEditableWarning\r\n      style={{\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        textAlign: \"center\",\r\n        cursor: \"text\",\r\n        color: t.color,\r\n        fontSize: t.fontSize,\r\n        outline: \"none\",\r\n        wordBreak: \"break-word\",\r\n      }}\r\n      onInput={e => updateText(t.id, \"text\", e.currentTarget.textContent)}\r\n    >\r\n      {t.text}\r\n    </div>\r\n\r\n    {selectedTextId === t.id && (\r\n      <div style={{ textAlign: \"center\", marginTop: 6 }}>\r\n        <label>Font:\r\n          <input\r\n            type=\"number\"\r\n            value={t.fontSize}\r\n            onChange={e => updateText(t.id, \"fontSize\", parseInt(e.target.value))}\r\n            style={{ width: 50 }}\r\n          />\r\n        </label>\r\n        <button onClick={() => updateText(t.id, \"color\", prompt(\"Enter color hex or name:\", t.color))}>\r\n          Color\r\n        </button>\r\n        <button onClick={() => deleteText(t.id)}>Delete</button>\r\n      </div>\r\n    )}\r\n  </Rnd>\r\n))}\r\n\r\n                </div>\r\n              )\r\n            ) : (\r\n              <embed src={imageURL} type=\"application/pdf\" width=\"100%\" height=\"600px\" />\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}