{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sahil\\\\OneDrive\\\\Desktop\\\\docfixer\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsPDF } from \"jspdf\";\nimport { PDFDocument } from \"pdf-lib\";\nimport Tesseract from \"tesseract.js\";\nimport TextEditor from \"./components/TextEditor\";\nimport \"./styles/App.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [imageURL, setImageURL] = useState(null);\n  const [processedImage, setProcessedImage] = useState(null);\n  const [filter, setFilter] = useState(\"none\");\n  const [filterIntensity, setFilterIntensity] = useState(100);\n  const [compression, setCompression] = useState(100);\n  const [ocrText, setOcrText] = useState(\"\");\n  const [textBoxes, setTextBoxes] = useState([]); // store text boxes\n\n  // File upload\n  const handleFileChange = async e => {\n    const uploadedFiles = Array.from(e.target.files);\n    if (!uploadedFiles.length) return;\n    if (uploadedFiles.length > 1) {\n      await handleDocScanner(uploadedFiles);\n      return;\n    }\n    const uploaded = uploadedFiles[0];\n    setFile(uploaded);\n    setImageURL(URL.createObjectURL(uploaded));\n    setProcessedImage(null);\n    setOcrText(\"\");\n  };\n  const handleDrop = async e => {\n    e.preventDefault();\n    const droppedFiles = Array.from(e.dataTransfer.files);\n    if (!droppedFiles.length) return;\n    if (droppedFiles.length > 1) {\n      await handleDocScanner(droppedFiles);\n      return;\n    }\n    const dropped = droppedFiles[0];\n    setFile(dropped);\n    setImageURL(URL.createObjectURL(dropped));\n    setProcessedImage(null);\n    setOcrText(\"\");\n  };\n  const handleDragOver = e => e.preventDefault();\n\n  // Background remover\n  const handleRemoveBG = async () => {\n    if (!file) return alert(\"Upload an image first\");\n    if (file.type.includes(\"pdf\")) return alert(\"Works only with images\");\n    const formData = new FormData();\n    formData.append(\"image_file\", file);\n    try {\n      const res = await axios.post(\"https://api.remove.bg/v1.0/removebg\", formData, {\n        headers: {\n          \"X-Api-Key\": \"VSNXBaMjvgBp6NjjRheLV3cW\"\n        },\n        responseType: \"blob\"\n      });\n      setProcessedImage(URL.createObjectURL(res.data));\n    } catch (err) {\n      alert(\"Remove.bg API error: \" + err.message);\n    }\n  };\n\n  // Filters\n  const getFilterStyle = () => {\n    const i = Number(filterIntensity);\n    switch (filter) {\n      case \"grayscale\":\n        return {\n          filter: `grayscale(${i}%)`\n        };\n      case \"sepia\":\n        return {\n          filter: `sepia(${i}%)`\n        };\n      case \"invert\":\n        return {\n          filter: `invert(${i}%)`\n        };\n      case \"blur\":\n        return {\n          filter: `blur(${i / 20}px)`\n        };\n      case \"brightness\":\n        return {\n          filter: `brightness(${i}%)`\n        };\n      case \"contrast\":\n        return {\n          filter: `contrast(${i}%)`\n        };\n      case \"saturate\":\n        return {\n          filter: `saturate(${i}%)`\n        };\n      case \"hue-rotate\":\n        return {\n          filter: `hue-rotate(${i * 3.6}deg)`\n        };\n      default:\n        return {};\n    }\n  };\n\n  // Generate final image including text boxes\n  const generateFinalImage = () => {\n    return new Promise(resolve => {\n      const source = processedImage || imageURL;\n      if (!source) return resolve(null);\n      const img = new Image();\n      img.crossOrigin = \"anonymous\";\n      img.onload = () => {\n        const canvas = document.createElement(\"canvas\");\n        canvas.width = img.width;\n        canvas.height = img.height;\n        const ctx = canvas.getContext(\"2d\");\n\n        // draw image with filter\n        ctx.filter = getFilterStyle().filter || \"none\";\n        ctx.drawImage(img, 0, 0);\n\n        // draw text boxes\n        textBoxes.forEach(tb => {\n          ctx.font = `${tb.bold ? \"bold \" : \"\"}${tb.italic ? \"italic \" : \"\"}${tb.fontSize}px ${tb.fontFamily}`;\n          ctx.fillStyle = tb.color;\n          let text = tb.upper ? tb.text.toUpperCase() : tb.lower ? tb.text.toLowerCase() : tb.text;\n          if (tb.underline) {\n            const width = ctx.measureText(text).width;\n            ctx.fillText(text, tb.x, tb.y + tb.fontSize);\n            ctx.beginPath();\n            ctx.moveTo(tb.x, tb.y + tb.fontSize + 2);\n            ctx.lineTo(tb.x + width, tb.y + tb.fontSize + 2);\n            ctx.strokeStyle = tb.color;\n            ctx.lineWidth = 1;\n            ctx.stroke();\n          } else {\n            ctx.fillText(text, tb.x, tb.y + tb.fontSize);\n          }\n        });\n        resolve(canvas.toDataURL(\"image/jpeg\", compression / 100));\n      };\n      img.src = source;\n    });\n  };\n\n  // Download image or PDF\n  const handleDownloadImage = async format => {\n    const finalDataURL = await generateFinalImage();\n    if (!finalDataURL) return;\n    if (format === \"pdf\") {\n      const doc = new jsPDF();\n      doc.addImage(finalDataURL, \"JPEG\", 10, 10, 190, 0);\n      doc.save(\"docfixer.pdf\");\n    } else {\n      const link = document.createElement(\"a\");\n      link.href = finalDataURL;\n      link.download = `docfixer.${format}`;\n      link.click();\n    }\n  };\n\n  // OCR\n  const handleOCR = async () => {\n    if (!file || !file.type.startsWith(\"image/\")) return alert(\"Upload an image for OCR\");\n    setOcrText(\"Processing...\");\n    Tesseract.recognize(file, \"eng\").then(({\n      data: {\n        text\n      }\n    }) => setOcrText(text));\n  };\n\n  // Doc scanner â†’ auto PDF\n  const handleDocScanner = async files => {\n    const pdfDoc = await PDFDocument.create();\n    for (let f of files) {\n      const bytes = await f.arrayBuffer();\n      const img = f.type.includes(\"png\") ? await pdfDoc.embedPng(bytes) : await pdfDoc.embedJpg(bytes);\n      const page = pdfDoc.addPage([img.width, img.height]);\n      page.drawImage(img, {\n        x: 0,\n        y: 0,\n        width: img.width,\n        height: img.height\n      });\n    }\n    const pdfBytes = await pdfDoc.save();\n    const blob = new Blob([pdfBytes], {\n      type: \"application/pdf\"\n    });\n    const link = document.createElement(\"a\");\n    link.href = URL.createObjectURL(blob);\n    link.download = \"scanned.pdf\";\n    link.click();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Tools\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tool-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Background Remover\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleRemoveBG,\n          children: \"Remove BG\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tool-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Filters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: filter,\n          onChange: e => setFilter(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"none\",\n            children: \"None\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"grayscale\",\n            children: \"Grayscale\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"sepia\",\n            children: \"Sepia\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"invert\",\n            children: \"Invert\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"blur\",\n            children: \"Blur\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"brightness\",\n            children: \"Brightness\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"contrast\",\n            children: \"Contrast\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"saturate\",\n            children: \"Saturate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"hue-rotate\",\n            children: \"Hue Rotate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Intensity: \", filterIntensity, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"0\",\n          max: \"100\",\n          value: filterIntensity,\n          onChange: e => setFilterIntensity(Number(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tool-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Compression\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"10\",\n          max: \"100\",\n          value: compression,\n          onChange: e => setCompression(Number(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [compression, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tool-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Download\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDownloadImage(\"jpeg\"),\n          children: \"JPEG\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDownloadImage(\"png\"),\n          children: \"PNG\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDownloadImage(\"pdf\"),\n          children: \"PDF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tool-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"OCR Extractor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleOCR,\n          children: \"Run OCR\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editor\",\n      children: [!imageURL ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-zone\",\n        onDrop: handleDrop,\n        onDragOver: handleDragOver,\n        onClick: () => document.getElementById(\"fileInput\").click(),\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Drag & Drop file(s) here or click to upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"fileInput\",\n          type: \"file\",\n          accept: \"image/*\",\n          multiple: true,\n          onChange: handleFileChange,\n          style: {\n            display: \"none\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: processedImage || imageURL,\n          alt: \"Preview\",\n          style: {\n            maxWidth: \"100%\",\n            ...getFilterStyle()\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextEditor, {\n          onUpdate: updatedBoxes => setTextBoxes(updatedBoxes)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), ocrText && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 20\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"OCR Extracted Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"8\",\n          value: ocrText,\n          readOnly: true,\n          style: {\n            width: \"100%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 194,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"UBmrYCNUS4F029dRGurtxknI8Iw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsPDF","PDFDocument","Tesseract","TextEditor","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","file","setFile","imageURL","setImageURL","processedImage","setProcessedImage","filter","setFilter","filterIntensity","setFilterIntensity","compression","setCompression","ocrText","setOcrText","textBoxes","setTextBoxes","handleFileChange","e","uploadedFiles","Array","from","target","files","length","handleDocScanner","uploaded","URL","createObjectURL","handleDrop","preventDefault","droppedFiles","dataTransfer","dropped","handleDragOver","handleRemoveBG","alert","type","includes","formData","FormData","append","res","post","headers","responseType","data","err","message","getFilterStyle","i","Number","generateFinalImage","Promise","resolve","source","img","Image","crossOrigin","onload","canvas","document","createElement","width","height","ctx","getContext","drawImage","forEach","tb","font","bold","italic","fontSize","fontFamily","fillStyle","color","text","upper","toUpperCase","lower","toLowerCase","underline","measureText","fillText","x","y","beginPath","moveTo","lineTo","strokeStyle","lineWidth","stroke","toDataURL","src","handleDownloadImage","format","finalDataURL","doc","addImage","save","link","href","download","click","handleOCR","startsWith","recognize","then","pdfDoc","create","f","bytes","arrayBuffer","embedPng","embedJpg","page","addPage","pdfBytes","blob","Blob","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","value","onChange","min","max","onDrop","onDragOver","getElementById","id","accept","multiple","style","display","alt","maxWidth","onUpdate","updatedBoxes","marginTop","rows","readOnly","_c","$RefreshReg$"],"sources":["C:/Users/sahil/OneDrive/Desktop/docfixer/frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { jsPDF } from \"jspdf\";\r\nimport { PDFDocument } from \"pdf-lib\";\r\nimport Tesseract from \"tesseract.js\";\r\nimport TextEditor from \"./components/TextEditor\";\r\nimport \"./styles/App.css\";\r\n\r\nfunction App() {\r\n  const [file, setFile] = useState(null);\r\n  const [imageURL, setImageURL] = useState(null);\r\n  const [processedImage, setProcessedImage] = useState(null);\r\n  const [filter, setFilter] = useState(\"none\");\r\n  const [filterIntensity, setFilterIntensity] = useState(100);\r\n  const [compression, setCompression] = useState(100);\r\n  const [ocrText, setOcrText] = useState(\"\");\r\n  const [textBoxes, setTextBoxes] = useState([]); // store text boxes\r\n\r\n  // File upload\r\n  const handleFileChange = async (e) => {\r\n    const uploadedFiles = Array.from(e.target.files);\r\n    if (!uploadedFiles.length) return;\r\n\r\n    if (uploadedFiles.length > 1) {\r\n      await handleDocScanner(uploadedFiles);\r\n      return;\r\n    }\r\n\r\n    const uploaded = uploadedFiles[0];\r\n    setFile(uploaded);\r\n    setImageURL(URL.createObjectURL(uploaded));\r\n    setProcessedImage(null);\r\n    setOcrText(\"\");\r\n  };\r\n\r\n  const handleDrop = async (e) => {\r\n    e.preventDefault();\r\n    const droppedFiles = Array.from(e.dataTransfer.files);\r\n    if (!droppedFiles.length) return;\r\n\r\n    if (droppedFiles.length > 1) {\r\n      await handleDocScanner(droppedFiles);\r\n      return;\r\n    }\r\n\r\n    const dropped = droppedFiles[0];\r\n    setFile(dropped);\r\n    setImageURL(URL.createObjectURL(dropped));\r\n    setProcessedImage(null);\r\n    setOcrText(\"\");\r\n  };\r\n  const handleDragOver = (e) => e.preventDefault();\r\n\r\n  // Background remover\r\n  const handleRemoveBG = async () => {\r\n    if (!file) return alert(\"Upload an image first\");\r\n    if (file.type.includes(\"pdf\")) return alert(\"Works only with images\");\r\n    const formData = new FormData();\r\n    formData.append(\"image_file\", file);\r\n    try {\r\n      const res = await axios.post(\r\n        \"https://api.remove.bg/v1.0/removebg\",\r\n        formData,\r\n        {\r\n          headers: { \"X-Api-Key\": \"VSNXBaMjvgBp6NjjRheLV3cW\" },\r\n          responseType: \"blob\",\r\n        }\r\n      );\r\n      setProcessedImage(URL.createObjectURL(res.data));\r\n    } catch (err) {\r\n      alert(\"Remove.bg API error: \" + err.message);\r\n    }\r\n  };\r\n\r\n  // Filters\r\n  const getFilterStyle = () => {\r\n    const i = Number(filterIntensity);\r\n    switch (filter) {\r\n      case \"grayscale\":\r\n        return { filter: `grayscale(${i}%)` };\r\n      case \"sepia\":\r\n        return { filter: `sepia(${i}%)` };\r\n      case \"invert\":\r\n        return { filter: `invert(${i}%)` };\r\n      case \"blur\":\r\n        return { filter: `blur(${i / 20}px)` };\r\n      case \"brightness\":\r\n        return { filter: `brightness(${i}%)` };\r\n      case \"contrast\":\r\n        return { filter: `contrast(${i}%)` };\r\n      case \"saturate\":\r\n        return { filter: `saturate(${i}%)` };\r\n      case \"hue-rotate\":\r\n        return { filter: `hue-rotate(${i * 3.6}deg)` };\r\n      default:\r\n        return {};\r\n    }\r\n  };\r\n\r\n  // Generate final image including text boxes\r\n  const generateFinalImage = () => {\r\n    return new Promise((resolve) => {\r\n      const source = processedImage || imageURL;\r\n      if (!source) return resolve(null);\r\n      const img = new Image();\r\n      img.crossOrigin = \"anonymous\";\r\n      img.onload = () => {\r\n        const canvas = document.createElement(\"canvas\");\r\n        canvas.width = img.width;\r\n        canvas.height = img.height;\r\n        const ctx = canvas.getContext(\"2d\");\r\n\r\n        // draw image with filter\r\n        ctx.filter = getFilterStyle().filter || \"none\";\r\n        ctx.drawImage(img, 0, 0);\r\n\r\n        // draw text boxes\r\n        textBoxes.forEach((tb) => {\r\n          ctx.font = `${tb.bold ? \"bold \" : \"\"}${tb.italic ? \"italic \" : \"\"}${\r\n            tb.fontSize\r\n          }px ${tb.fontFamily}`;\r\n          ctx.fillStyle = tb.color;\r\n          let text = tb.upper\r\n            ? tb.text.toUpperCase()\r\n            : tb.lower\r\n            ? tb.text.toLowerCase()\r\n            : tb.text;\r\n          if (tb.underline) {\r\n            const width = ctx.measureText(text).width;\r\n            ctx.fillText(text, tb.x, tb.y + tb.fontSize);\r\n            ctx.beginPath();\r\n            ctx.moveTo(tb.x, tb.y + tb.fontSize + 2);\r\n            ctx.lineTo(tb.x + width, tb.y + tb.fontSize + 2);\r\n            ctx.strokeStyle = tb.color;\r\n            ctx.lineWidth = 1;\r\n            ctx.stroke();\r\n          } else {\r\n            ctx.fillText(text, tb.x, tb.y + tb.fontSize);\r\n          }\r\n        });\r\n\r\n        resolve(canvas.toDataURL(\"image/jpeg\", compression / 100));\r\n      };\r\n      img.src = source;\r\n    });\r\n  };\r\n\r\n  // Download image or PDF\r\n  const handleDownloadImage = async (format) => {\r\n    const finalDataURL = await generateFinalImage();\r\n    if (!finalDataURL) return;\r\n    if (format === \"pdf\") {\r\n      const doc = new jsPDF();\r\n      doc.addImage(finalDataURL, \"JPEG\", 10, 10, 190, 0);\r\n      doc.save(\"docfixer.pdf\");\r\n    } else {\r\n      const link = document.createElement(\"a\");\r\n      link.href = finalDataURL;\r\n      link.download = `docfixer.${format}`;\r\n      link.click();\r\n    }\r\n  };\r\n\r\n  // OCR\r\n  const handleOCR = async () => {\r\n    if (!file || !file.type.startsWith(\"image/\"))\r\n      return alert(\"Upload an image for OCR\");\r\n    setOcrText(\"Processing...\");\r\n    Tesseract.recognize(file, \"eng\").then(({ data: { text } }) =>\r\n      setOcrText(text)\r\n    );\r\n  };\r\n\r\n  // Doc scanner â†’ auto PDF\r\n  const handleDocScanner = async (files) => {\r\n    const pdfDoc = await PDFDocument.create();\r\n    for (let f of files) {\r\n      const bytes = await f.arrayBuffer();\r\n      const img = f.type.includes(\"png\")\r\n        ? await pdfDoc.embedPng(bytes)\r\n        : await pdfDoc.embedJpg(bytes);\r\n      const page = pdfDoc.addPage([img.width, img.height]);\r\n      page.drawImage(img, { x: 0, y: 0, width: img.width, height: img.height });\r\n    }\r\n    const pdfBytes = await pdfDoc.save();\r\n    const blob = new Blob([pdfBytes], { type: \"application/pdf\" });\r\n    const link = document.createElement(\"a\");\r\n    link.href = URL.createObjectURL(blob);\r\n    link.download = \"scanned.pdf\";\r\n    link.click();\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <div className=\"sidebar\">\r\n        <h2>Tools</h2>\r\n\r\n        <div className=\"tool-section\">\r\n          <h3>Background Remover</h3>\r\n          <button onClick={handleRemoveBG}>Remove BG</button>\r\n        </div>\r\n\r\n        <div className=\"tool-section\">\r\n          <h3>Filters</h3>\r\n          <select value={filter} onChange={(e) => setFilter(e.target.value)}>\r\n            <option value=\"none\">None</option>\r\n            <option value=\"grayscale\">Grayscale</option>\r\n            <option value=\"sepia\">Sepia</option>\r\n            <option value=\"invert\">Invert</option>\r\n            <option value=\"blur\">Blur</option>\r\n            <option value=\"brightness\">Brightness</option>\r\n            <option value=\"contrast\">Contrast</option>\r\n            <option value=\"saturate\">Saturate</option>\r\n            <option value=\"hue-rotate\">Hue Rotate</option>\r\n          </select>\r\n          <label>Intensity: {filterIntensity}%</label>\r\n          <input\r\n            type=\"range\"\r\n            min=\"0\"\r\n            max=\"100\"\r\n            value={filterIntensity}\r\n            onChange={(e) => setFilterIntensity(Number(e.target.value))}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"tool-section\">\r\n          <h3>Compression</h3>\r\n          <input\r\n            type=\"range\"\r\n            min=\"10\"\r\n            max=\"100\"\r\n            value={compression}\r\n            onChange={(e) => setCompression(Number(e.target.value))}\r\n          />\r\n          <span>{compression}%</span>\r\n        </div>\r\n\r\n        <div className=\"tool-section\">\r\n          <h3>Download</h3>\r\n          <button onClick={() => handleDownloadImage(\"jpeg\")}>JPEG</button>\r\n          <button onClick={() => handleDownloadImage(\"png\")}>PNG</button>\r\n          <button onClick={() => handleDownloadImage(\"pdf\")}>PDF</button>\r\n        </div>\r\n\r\n        <div className=\"tool-section\">\r\n          <h3>OCR Extractor</h3>\r\n          <button onClick={handleOCR}>Run OCR</button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"editor\">\r\n        {!imageURL ? (\r\n          <div\r\n            className=\"upload-zone\"\r\n            onDrop={handleDrop}\r\n            onDragOver={handleDragOver}\r\n            onClick={() => document.getElementById(\"fileInput\").click()}\r\n          >\r\n            <p>Drag & Drop file(s) here or click to upload</p>\r\n            <input\r\n              id=\"fileInput\"\r\n              type=\"file\"\r\n              accept=\"image/*\"\r\n              multiple\r\n              onChange={handleFileChange}\r\n              style={{ display: \"none\" }}\r\n            />\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <img\r\n              src={processedImage || imageURL}\r\n              alt=\"Preview\"\r\n              style={{ maxWidth: \"100%\", ...getFilterStyle() }}\r\n            />\r\n            {/* Text Editor overlay */}\r\n            <TextEditor onUpdate={(updatedBoxes) => setTextBoxes(updatedBoxes)} />\r\n          </>\r\n        )}\r\n\r\n        {ocrText && (\r\n          <div style={{ marginTop: 20 }}>\r\n            <h3>OCR Extracted Text</h3>\r\n            <textarea\r\n              rows=\"8\"\r\n              value={ocrText}\r\n              readOnly\r\n              style={{ width: \"100%\" }}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}