{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sahil\\\\OneDrive\\\\Desktop\\\\docfixer\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsPDF } from \"jspdf\";\nimport { PDFDocument } from \"pdf-lib\";\nimport Tesseract from \"tesseract.js\";\nimport { Rnd } from \"react-rnd\";\nimport \"./styles/App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [imageURL, setImageURL] = useState(null);\n  const [processedImage, setProcessedImage] = useState(null);\n  const [filter, setFilter] = useState(\"none\");\n  const [filterIntensity, setFilterIntensity] = useState(100);\n  const [compression, setCompression] = useState(100);\n  const [ocrText, setOcrText] = useState(\"\");\n  const [textBoxes, setTextBoxes] = useState([]);\n  const [placedTexts, setPlacedTexts] = useState([]);\n\n  // ========== File upload handlers ==========\n  const handleFileChange = async e => {\n    const uploadedFiles = Array.from(e.target.files);\n    if (!uploadedFiles.length) return;\n    if (uploadedFiles.length > 1) {\n      await handleDocScanner(uploadedFiles);\n      return;\n    }\n    const uploaded = uploadedFiles[0];\n    setFile(uploaded);\n    setImageURL(URL.createObjectURL(uploaded));\n    setProcessedImage(null);\n    setOcrText(\"\");\n  };\n  const handleDrop = async e => {\n    e.preventDefault();\n    const droppedFiles = Array.from(e.dataTransfer.files);\n    if (!droppedFiles.length) return;\n    if (droppedFiles.length > 1) {\n      await handleDocScanner(droppedFiles);\n      return;\n    }\n    const dropped = droppedFiles[0];\n    setFile(dropped);\n    setImageURL(URL.createObjectURL(dropped));\n    setProcessedImage(null);\n    setOcrText(\"\");\n  };\n  const handleDragOver = e => e.preventDefault();\n\n  // ========== Add Text ==========\n  const addTextBox = () => {\n    const newBox = {\n      id: Date.now(),\n      text: \"\",\n      x: 50,\n      y: 50,\n      bold: false,\n      italic: false,\n      underline: false,\n      uppercase: false,\n      lowercase: false,\n      color: \"#000000\",\n      size: 24,\n      finalized: false,\n      width: 200,\n      height: 50\n    };\n    setTextBoxes([...textBoxes, newBox]);\n  };\n  const updateTextBox = (id, changes) => {\n    setTextBoxes(prev => prev.map(t => t.id === id ? {\n      ...t,\n      ...changes\n    } : t));\n  };\n  const deleteTextBox = id => {\n    setTextBoxes(prev => prev.filter(t => t.id !== id));\n  };\n  const finalizeTextBox = id => {\n    const box = textBoxes.find(t => t.id === id);\n    if (!box) return;\n    setPlacedTexts([...placedTexts, box]); // save finalized text\n    deleteTextBox(id);\n  };\n\n  // Adjust width/height automatically based on text\n  const handleTextInput = (id, text) => {\n    var _textBoxes$find, _textBoxes$find2;\n    updateTextBox(id, {\n      text\n    });\n    const span = document.createElement(\"span\");\n    span.style.visibility = \"hidden\";\n    span.style.fontSize = \"24px\";\n    span.style.fontWeight = (_textBoxes$find = textBoxes.find(t => t.id === id)) !== null && _textBoxes$find !== void 0 && _textBoxes$find.bold ? \"bold\" : \"normal\";\n    span.style.fontStyle = (_textBoxes$find2 = textBoxes.find(t => t.id === id)) !== null && _textBoxes$find2 !== void 0 && _textBoxes$find2.italic ? \"italic\" : \"normal\";\n    span.innerText = text || \"A\";\n    document.body.appendChild(span);\n    const width = span.offsetWidth + 20;\n    const height = span.offsetHeight + 20;\n    document.body.removeChild(span);\n    updateTextBox(id, {\n      width,\n      height\n    });\n  };\n\n  // ========== Filters ==========\n  const getFilterStyle = () => {\n    const i = Number(filterIntensity);\n    switch (filter) {\n      case \"grayscale\":\n        return {\n          filter: `grayscale(${i}%)`\n        };\n      case \"sepia\":\n        return {\n          filter: `sepia(${i}%)`\n        };\n      case \"invert\":\n        return {\n          filter: `invert(${i}%)`\n        };\n      case \"blur\":\n        return {\n          filter: `blur(${i / 20}px)`\n        };\n      case \"brightness\":\n        return {\n          filter: `brightness(${i}%)`\n        };\n      case \"contrast\":\n        return {\n          filter: `contrast(${i}%)`\n        };\n      case \"saturate\":\n        return {\n          filter: `saturate(${i}%)`\n        };\n      case \"hue-rotate\":\n        return {\n          filter: `hue-rotate(${i * 3.6}deg)`\n        };\n      default:\n        return {};\n    }\n  };\n\n  // ========== Generate Final Image ==========\n  const generateFinalImage = () => {\n    return new Promise(resolve => {\n      const source = processedImage || imageURL;\n      if (!source) return resolve(null);\n      const img = new Image();\n      img.crossOrigin = \"anonymous\";\n      img.onload = () => {\n        const canvas = document.createElement(\"canvas\");\n        const ctx = canvas.getContext(\"2d\");\n        canvas.width = img.width;\n        canvas.height = img.height;\n        ctx.filter = getFilterStyle().filter || \"none\";\n        ctx.drawImage(img, 0, 0);\n\n        // Draw placed texts\n        placedTexts.forEach(t => {\n          ctx.font = `${t.bold ? \"bold\" : \"\"} ${t.italic ? \"italic\" : \"\"} ${t.size}px Arial`;\n          ctx.fillStyle = t.color || \"#000\";\n          let text = t.text;\n          if (t.uppercase) text = text.toUpperCase();\n          if (t.lowercase) text = text.toLowerCase();\n          ctx.fillText(text, t.x, t.y + t.size);\n        });\n        resolve(canvas.toDataURL(\"image/jpeg\", Number(compression) / 100));\n      };\n      img.src = source;\n    });\n  };\n  const handleDownloadImage = async format => {\n    const finalDataURL = await generateFinalImage();\n    if (!finalDataURL) return;\n    if (format === \"pdf\") {\n      const doc = new jsPDF();\n      doc.addImage(finalDataURL, \"JPEG\", 10, 10, 190, 0);\n      doc.save(\"docfixer.pdf\");\n    } else {\n      const link = document.createElement(\"a\");\n      link.href = finalDataURL;\n      link.download = `docfixer.${format}`;\n      link.click();\n    }\n  };\n\n  // ========== OCR ==========\n  const handleOCR = async () => {\n    if (!file || !file.type.startsWith(\"image/\")) return alert(\"Upload an image for OCR\");\n    setOcrText(\"Processing...\");\n    Tesseract.recognize(file, \"eng\").then(({\n      data: {\n        text\n      }\n    }) => setOcrText(text));\n  };\n\n  // ========== Doc Scanner ==========\n  const handleDocScanner = async files => {\n    const pdfDoc = await PDFDocument.create();\n    for (let f of files) {\n      const bytes = await f.arrayBuffer();\n      const img = f.type.includes(\"png\") ? await pdfDoc.embedPng(bytes) : await pdfDoc.embedJpg(bytes);\n      const page = pdfDoc.addPage([img.width, img.height]);\n      page.drawImage(img, {\n        x: 0,\n        y: 0,\n        width: img.width,\n        height: img.height\n      });\n    }\n    const pdfBytes = await pdfDoc.save();\n    const blob = new Blob([pdfBytes], {\n      type: \"application/pdf\"\n    });\n    const link = document.createElement(\"a\");\n    link.href = URL.createObjectURL(blob);\n    link.download = \"scanned.pdf\";\n    link.click();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Tools\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tool-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addTextBox,\n          children: \"Add Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tool-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Filters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: filter,\n          onChange: e => setFilter(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"none\",\n            children: \"None\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"grayscale\",\n            children: \"Grayscale\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"sepia\",\n            children: \"Sepia\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"invert\",\n            children: \"Invert\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"blur\",\n            children: \"Blur\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"brightness\",\n            children: \"Brightness\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"contrast\",\n            children: \"Contrast\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"saturate\",\n            children: \"Saturate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"hue-rotate\",\n            children: \"Hue Rotate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Intensity: \", filterIntensity, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"0\",\n          max: \"100\",\n          value: filterIntensity,\n          onChange: e => setFilterIntensity(Number(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tool-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Compression\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"10\",\n          max: \"100\",\n          value: compression,\n          onChange: e => setCompression(Number(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [compression, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tool-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Download\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDownloadImage(\"jpeg\"),\n          children: \"JPEG\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDownloadImage(\"png\"),\n          children: \"PNG\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDownloadImage(\"pdf\"),\n          children: \"PDF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tool-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"OCR Extractor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleOCR,\n          children: \"Run OCR\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editor\",\n      children: [!imageURL ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-zone\",\n        onDrop: handleDrop,\n        onDragOver: handleDragOver,\n        onClick: () => document.getElementById(\"fileInput\").click(),\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Drag & Drop file(s) here or click to upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"fileInput\",\n          type: \"file\",\n          accept: \"image/*\",\n          multiple: true,\n          onChange: handleFileChange,\n          style: {\n            display: \"none\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"relative\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: processedImage || imageURL,\n          alt: \"Preview\",\n          style: {\n            maxWidth: \"100%\",\n            ...getFilterStyle()\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 13\n        }, this), placedTexts.map((t, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: \"absolute\",\n            left: t.x,\n            top: t.y,\n            fontWeight: t.bold ? \"bold\" : \"normal\",\n            fontStyle: t.italic ? \"italic\" : \"normal\",\n            textDecoration: t.underline ? \"underline\" : \"none\",\n            fontSize: t.size,\n            color: t.color\n          },\n          children: t.uppercase ? t.text.toUpperCase() : t.lowercase ? t.text.toLowerCase() : t.text\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 15\n        }, this)), textBoxes.map(t => /*#__PURE__*/_jsxDEV(Rnd, {\n          size: {\n            width: t.width,\n            height: t.height\n          },\n          position: {\n            x: t.x,\n            y: t.y\n          },\n          onDragStop: (e, d) => updateTextBox(t.id, {\n            x: d.x,\n            y: d.y\n          }),\n          enableResizing: false,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              border: \"1px dashed #333\",\n              backgroundColor: \"rgba(255,255,255,0.8)\",\n              padding: \"5px\",\n              position: \"relative\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: t.text,\n              onChange: e => handleTextInput(t.id, e.target.value),\n              style: {\n                width: \"100%\",\n                height: \"100%\",\n                resize: \"none\",\n                fontWeight: t.bold ? \"bold\" : \"normal\",\n                fontStyle: t.italic ? \"italic\" : \"normal\",\n                textDecoration: t.underline ? \"underline\" : \"none\",\n                fontSize: t.size,\n                color: t.color,\n                textTransform: t.uppercase ? \"uppercase\" : t.lowercase ? \"lowercase\" : \"none\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                position: \"absolute\",\n                top: 0,\n                right: 0\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => finalizeTextBox(t.id),\n                children: \"\\u2705\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => deleteTextBox(t.id),\n                children: \"\\u274C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 17\n          }, this)\n        }, t.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 11\n      }, this), ocrText && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 20\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"OCR Extracted Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"8\",\n          value: ocrText,\n          readOnly: true,\n          style: {\n            width: \"100%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 212,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"9QsffGHVXmVhS7Zs2rbbF3FNXtQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsPDF","PDFDocument","Tesseract","Rnd","jsxDEV","_jsxDEV","App","_s","file","setFile","imageURL","setImageURL","processedImage","setProcessedImage","filter","setFilter","filterIntensity","setFilterIntensity","compression","setCompression","ocrText","setOcrText","textBoxes","setTextBoxes","placedTexts","setPlacedTexts","handleFileChange","e","uploadedFiles","Array","from","target","files","length","handleDocScanner","uploaded","URL","createObjectURL","handleDrop","preventDefault","droppedFiles","dataTransfer","dropped","handleDragOver","addTextBox","newBox","id","Date","now","text","x","y","bold","italic","underline","uppercase","lowercase","color","size","finalized","width","height","updateTextBox","changes","prev","map","t","deleteTextBox","finalizeTextBox","box","find","handleTextInput","_textBoxes$find","_textBoxes$find2","span","document","createElement","style","visibility","fontSize","fontWeight","fontStyle","innerText","body","appendChild","offsetWidth","offsetHeight","removeChild","getFilterStyle","i","Number","generateFinalImage","Promise","resolve","source","img","Image","crossOrigin","onload","canvas","ctx","getContext","drawImage","forEach","font","fillStyle","toUpperCase","toLowerCase","fillText","toDataURL","src","handleDownloadImage","format","finalDataURL","doc","addImage","save","link","href","download","click","handleOCR","type","startsWith","alert","recognize","then","data","pdfDoc","create","f","bytes","arrayBuffer","includes","embedPng","embedJpg","page","addPage","pdfBytes","blob","Blob","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","value","onChange","min","max","onDrop","onDragOver","getElementById","accept","multiple","display","position","alt","maxWidth","idx","left","top","textDecoration","onDragStop","d","enableResizing","border","backgroundColor","padding","resize","textTransform","right","marginTop","rows","readOnly","_c","$RefreshReg$"],"sources":["C:/Users/sahil/OneDrive/Desktop/docfixer/frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { jsPDF } from \"jspdf\";\r\nimport { PDFDocument } from \"pdf-lib\";\r\nimport Tesseract from \"tesseract.js\";\r\nimport { Rnd } from \"react-rnd\";\r\nimport \"./styles/App.css\";\r\n\r\nfunction App() {\r\n  const [file, setFile] = useState(null);\r\n  const [imageURL, setImageURL] = useState(null);\r\n  const [processedImage, setProcessedImage] = useState(null);\r\n  const [filter, setFilter] = useState(\"none\");\r\n  const [filterIntensity, setFilterIntensity] = useState(100);\r\n  const [compression, setCompression] = useState(100);\r\n  const [ocrText, setOcrText] = useState(\"\");\r\n\r\n  const [textBoxes, setTextBoxes] = useState([]);\r\n  const [placedTexts, setPlacedTexts] = useState([]);\r\n\r\n  // ========== File upload handlers ==========\r\n  const handleFileChange = async (e) => {\r\n    const uploadedFiles = Array.from(e.target.files);\r\n    if (!uploadedFiles.length) return;\r\n    if (uploadedFiles.length > 1) {\r\n      await handleDocScanner(uploadedFiles);\r\n      return;\r\n    }\r\n    const uploaded = uploadedFiles[0];\r\n    setFile(uploaded);\r\n    setImageURL(URL.createObjectURL(uploaded));\r\n    setProcessedImage(null);\r\n    setOcrText(\"\");\r\n  };\r\n\r\n  const handleDrop = async (e) => {\r\n    e.preventDefault();\r\n    const droppedFiles = Array.from(e.dataTransfer.files);\r\n    if (!droppedFiles.length) return;\r\n    if (droppedFiles.length > 1) {\r\n      await handleDocScanner(droppedFiles);\r\n      return;\r\n    }\r\n    const dropped = droppedFiles[0];\r\n    setFile(dropped);\r\n    setImageURL(URL.createObjectURL(dropped));\r\n    setProcessedImage(null);\r\n    setOcrText(\"\");\r\n  };\r\n\r\n  const handleDragOver = (e) => e.preventDefault();\r\n\r\n  // ========== Add Text ==========\r\n  const addTextBox = () => {\r\n    const newBox = {\r\n      id: Date.now(),\r\n      text: \"\",\r\n      x: 50,\r\n      y: 50,\r\n      bold: false,\r\n      italic: false,\r\n      underline: false,\r\n      uppercase: false,\r\n      lowercase: false,\r\n      color: \"#000000\",\r\n      size: 24,\r\n      finalized: false,\r\n      width: 200,\r\n      height: 50,\r\n    };\r\n    setTextBoxes([...textBoxes, newBox]);\r\n  };\r\n\r\n  const updateTextBox = (id, changes) => {\r\n    setTextBoxes((prev) =>\r\n      prev.map((t) => (t.id === id ? { ...t, ...changes } : t))\r\n    );\r\n  };\r\n\r\n  const deleteTextBox = (id) => {\r\n    setTextBoxes((prev) => prev.filter((t) => t.id !== id));\r\n  };\r\n\r\n  const finalizeTextBox = (id) => {\r\n    const box = textBoxes.find((t) => t.id === id);\r\n    if (!box) return;\r\n    setPlacedTexts([...placedTexts, box]); // save finalized text\r\n    deleteTextBox(id);\r\n  };\r\n\r\n  // Adjust width/height automatically based on text\r\n  const handleTextInput = (id, text) => {\r\n    updateTextBox(id, { text });\r\n    const span = document.createElement(\"span\");\r\n    span.style.visibility = \"hidden\";\r\n    span.style.fontSize = \"24px\";\r\n    span.style.fontWeight = textBoxes.find((t) => t.id === id)?.bold\r\n      ? \"bold\"\r\n      : \"normal\";\r\n    span.style.fontStyle = textBoxes.find((t) => t.id === id)?.italic\r\n      ? \"italic\"\r\n      : \"normal\";\r\n    span.innerText = text || \"A\";\r\n    document.body.appendChild(span);\r\n    const width = span.offsetWidth + 20;\r\n    const height = span.offsetHeight + 20;\r\n    document.body.removeChild(span);\r\n    updateTextBox(id, { width, height });\r\n  };\r\n\r\n  // ========== Filters ==========\r\n  const getFilterStyle = () => {\r\n    const i = Number(filterIntensity);\r\n    switch (filter) {\r\n      case \"grayscale\":\r\n        return { filter: `grayscale(${i}%)` };\r\n      case \"sepia\":\r\n        return { filter: `sepia(${i}%)` };\r\n      case \"invert\":\r\n        return { filter: `invert(${i}%)` };\r\n      case \"blur\":\r\n        return { filter: `blur(${i / 20}px)` };\r\n      case \"brightness\":\r\n        return { filter: `brightness(${i}%)` };\r\n      case \"contrast\":\r\n        return { filter: `contrast(${i}%)` };\r\n      case \"saturate\":\r\n        return { filter: `saturate(${i}%)` };\r\n      case \"hue-rotate\":\r\n        return { filter: `hue-rotate(${i * 3.6}deg)` };\r\n      default:\r\n        return {};\r\n    }\r\n  };\r\n\r\n  // ========== Generate Final Image ==========\r\n  const generateFinalImage = () => {\r\n    return new Promise((resolve) => {\r\n      const source = processedImage || imageURL;\r\n      if (!source) return resolve(null);\r\n      const img = new Image();\r\n      img.crossOrigin = \"anonymous\";\r\n      img.onload = () => {\r\n        const canvas = document.createElement(\"canvas\");\r\n        const ctx = canvas.getContext(\"2d\");\r\n        canvas.width = img.width;\r\n        canvas.height = img.height;\r\n        ctx.filter = getFilterStyle().filter || \"none\";\r\n        ctx.drawImage(img, 0, 0);\r\n\r\n        // Draw placed texts\r\n        placedTexts.forEach((t) => {\r\n          ctx.font = `${t.bold ? \"bold\" : \"\"} ${t.italic ? \"italic\" : \"\"} ${t.size}px Arial`;\r\n          ctx.fillStyle = t.color || \"#000\";\r\n          let text = t.text;\r\n          if (t.uppercase) text = text.toUpperCase();\r\n          if (t.lowercase) text = text.toLowerCase();\r\n          ctx.fillText(text, t.x, t.y + t.size);\r\n        });\r\n\r\n        resolve(canvas.toDataURL(\"image/jpeg\", Number(compression) / 100));\r\n      };\r\n      img.src = source;\r\n    });\r\n  };\r\n\r\n  const handleDownloadImage = async (format) => {\r\n    const finalDataURL = await generateFinalImage();\r\n    if (!finalDataURL) return;\r\n    if (format === \"pdf\") {\r\n      const doc = new jsPDF();\r\n      doc.addImage(finalDataURL, \"JPEG\", 10, 10, 190, 0);\r\n      doc.save(\"docfixer.pdf\");\r\n    } else {\r\n      const link = document.createElement(\"a\");\r\n      link.href = finalDataURL;\r\n      link.download = `docfixer.${format}`;\r\n      link.click();\r\n    }\r\n  };\r\n\r\n  // ========== OCR ==========\r\n  const handleOCR = async () => {\r\n    if (!file || !file.type.startsWith(\"image/\"))\r\n      return alert(\"Upload an image for OCR\");\r\n    setOcrText(\"Processing...\");\r\n    Tesseract.recognize(file, \"eng\").then(({ data: { text } }) =>\r\n      setOcrText(text)\r\n    );\r\n  };\r\n\r\n  // ========== Doc Scanner ==========\r\n  const handleDocScanner = async (files) => {\r\n    const pdfDoc = await PDFDocument.create();\r\n    for (let f of files) {\r\n      const bytes = await f.arrayBuffer();\r\n      const img = f.type.includes(\"png\")\r\n        ? await pdfDoc.embedPng(bytes)\r\n        : await pdfDoc.embedJpg(bytes);\r\n      const page = pdfDoc.addPage([img.width, img.height]);\r\n      page.drawImage(img, { x: 0, y: 0, width: img.width, height: img.height });\r\n    }\r\n    const pdfBytes = await pdfDoc.save();\r\n    const blob = new Blob([pdfBytes], { type: \"application/pdf\" });\r\n    const link = document.createElement(\"a\");\r\n    link.href = URL.createObjectURL(blob);\r\n    link.download = \"scanned.pdf\";\r\n    link.click();\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      {/* ========== Sidebar / Tools ========= */}\r\n      <div className=\"sidebar\">\r\n        <h2>Tools</h2>\r\n        <div className=\"tool-section\">\r\n          <h3>Text</h3>\r\n          <button onClick={addTextBox}>Add Text</button>\r\n        </div>\r\n        <div className=\"tool-section\">\r\n          <h3>Filters</h3>\r\n          <select value={filter} onChange={(e) => setFilter(e.target.value)}>\r\n            <option value=\"none\">None</option>\r\n            <option value=\"grayscale\">Grayscale</option>\r\n            <option value=\"sepia\">Sepia</option>\r\n            <option value=\"invert\">Invert</option>\r\n            <option value=\"blur\">Blur</option>\r\n            <option value=\"brightness\">Brightness</option>\r\n            <option value=\"contrast\">Contrast</option>\r\n            <option value=\"saturate\">Saturate</option>\r\n            <option value=\"hue-rotate\">Hue Rotate</option>\r\n          </select>\r\n          <label>Intensity: {filterIntensity}%</label>\r\n          <input\r\n            type=\"range\"\r\n            min=\"0\"\r\n            max=\"100\"\r\n            value={filterIntensity}\r\n            onChange={(e) => setFilterIntensity(Number(e.target.value))}\r\n          />\r\n        </div>\r\n        <div className=\"tool-section\">\r\n          <h3>Compression</h3>\r\n          <input\r\n            type=\"range\"\r\n            min=\"10\"\r\n            max=\"100\"\r\n            value={compression}\r\n            onChange={(e) => setCompression(Number(e.target.value))}\r\n          />\r\n          <span>{compression}%</span>\r\n        </div>\r\n        <div className=\"tool-section\">\r\n          <h3>Download</h3>\r\n          <button onClick={() => handleDownloadImage(\"jpeg\")}>JPEG</button>\r\n          <button onClick={() => handleDownloadImage(\"png\")}>PNG</button>\r\n          <button onClick={() => handleDownloadImage(\"pdf\")}>PDF</button>\r\n        </div>\r\n        <div className=\"tool-section\">\r\n          <h3>OCR Extractor</h3>\r\n          <button onClick={handleOCR}>Run OCR</button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* ========== Editor / Image ========= */}\r\n      <div className=\"editor\">\r\n        {!imageURL ? (\r\n          <div\r\n            className=\"upload-zone\"\r\n            onDrop={handleDrop}\r\n            onDragOver={handleDragOver}\r\n            onClick={() => document.getElementById(\"fileInput\").click()}\r\n          >\r\n            <p>Drag & Drop file(s) here or click to upload</p>\r\n            <input\r\n              id=\"fileInput\"\r\n              type=\"file\"\r\n              accept=\"image/*\"\r\n              multiple\r\n              onChange={handleFileChange}\r\n              style={{ display: \"none\" }}\r\n            />\r\n          </div>\r\n        ) : (\r\n          <div style={{ position: \"relative\" }}>\r\n            <img\r\n              src={processedImage || imageURL}\r\n              alt=\"Preview\"\r\n              style={{ maxWidth: \"100%\", ...getFilterStyle() }}\r\n            />\r\n\r\n            {/* Placed texts */}\r\n            {placedTexts.map((t, idx) => (\r\n              <div\r\n                key={idx}\r\n                style={{\r\n                  position: \"absolute\",\r\n                  left: t.x,\r\n                  top: t.y,\r\n                  fontWeight: t.bold ? \"bold\" : \"normal\",\r\n                  fontStyle: t.italic ? \"italic\" : \"normal\",\r\n                  textDecoration: t.underline ? \"underline\" : \"none\",\r\n                  fontSize: t.size,\r\n                  color: t.color,\r\n                }}\r\n              >\r\n                {t.uppercase\r\n                  ? t.text.toUpperCase()\r\n                  : t.lowercase\r\n                  ? t.text.toLowerCase()\r\n                  : t.text}\r\n              </div>\r\n            ))}\r\n\r\n            {/* Editable text boxes */}\r\n            {textBoxes.map((t) => (\r\n              <Rnd\r\n                key={t.id}\r\n                size={{ width: t.width, height: t.height }}\r\n                position={{ x: t.x, y: t.y }}\r\n                onDragStop={(e, d) => updateTextBox(t.id, { x: d.x, y: d.y })}\r\n                enableResizing={false}\r\n              >\r\n                <div\r\n                  style={{\r\n                    border: \"1px dashed #333\",\r\n                    backgroundColor: \"rgba(255,255,255,0.8)\",\r\n                    padding: \"5px\",\r\n                    position: \"relative\",\r\n                  }}\r\n                >\r\n                  <textarea\r\n                    value={t.text}\r\n                    onChange={(e) => handleTextInput(t.id, e.target.value)}\r\n                    style={{\r\n                      width: \"100%\",\r\n                      height: \"100%\",\r\n                      resize: \"none\",\r\n                      fontWeight: t.bold ? \"bold\" : \"normal\",\r\n                      fontStyle: t.italic ? \"italic\" : \"normal\",\r\n                      textDecoration: t.underline ? \"underline\" : \"none\",\r\n                      fontSize: t.size,\r\n                      color: t.color,\r\n                      textTransform: t.uppercase\r\n                        ? \"uppercase\"\r\n                        : t.lowercase\r\n                        ? \"lowercase\"\r\n                        : \"none\",\r\n                    }}\r\n                  />\r\n                  <div style={{ position: \"absolute\", top: 0, right: 0 }}>\r\n                    <button onClick={() => finalizeTextBox(t.id)}>✅</button>\r\n                    <button onClick={() => deleteTextBox(t.id)}>❌</button>\r\n                  </div>\r\n                </div>\r\n              </Rnd>\r\n            ))}\r\n          </div>\r\n        )}\r\n\r\n        {ocrText && (\r\n          <div style={{ marginTop: 20 }}>\r\n            <h3>OCR Extracted Text</h3>\r\n            <textarea\r\n              rows=\"8\"\r\n              value={ocrText}\r\n              readOnly\r\n              style={{ width: \"100%\" }}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}