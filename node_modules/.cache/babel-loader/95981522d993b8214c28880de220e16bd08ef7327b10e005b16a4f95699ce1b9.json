{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sahil\\\\OneDrive\\\\Desktop\\\\docfixer\\\\frontend\\\\src\\\\components\\\\Scanner.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Scanner = ({\n  onScan\n}) => {\n  _s();\n  const videoRef = useRef(null); // Reference to video element\n  const canvasRef = useRef(null); // Reference to hidden canvas\n  const [cameraOn, setCameraOn] = useState(false);\n\n  // Start camera\n  const startCamera = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: true\n      });\n      videoRef.current.srcObject = stream;\n      setCameraOn(true);\n    } catch (err) {\n      alert(\"Could not access camera: \" + err.message);\n    }\n  };\n\n  // Capture photo from video\n  const capturePhoto = () => {\n    const ctx = canvasRef.current.getContext(\"2d\");\n    ctx.drawImage(videoRef.current, 0, 0, 400, 300); // Draw video frame to canvas\n    const imageData = canvasRef.current.toDataURL(\"image/png\"); // Convert to data URL\n    onScan(imageData); // Send to parent\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      marginTop: \"20px\"\n    },\n    children: [!cameraOn && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startCamera,\n      children: \"Start Scanner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }, this), cameraOn && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        ref: videoRef,\n        autoPlay: true,\n        width: \"400\",\n        height: \"300\",\n        style: {\n          borderRadius: \"8px\",\n          marginBottom: \"10px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: capturePhoto,\n        children: \"Capture Photo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        width: \"400\",\n        height: \"300\",\n        style: {\n          display: \"none\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(Scanner, \"rcdTSre3V8deUmeAr4pfp+JLsHQ=\");\n_c = Scanner;\nexport default Scanner;\nvar _c;\n$RefreshReg$(_c, \"Scanner\");","map":{"version":3,"names":["React","useRef","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Scanner","onScan","_s","videoRef","canvasRef","cameraOn","setCameraOn","startCamera","stream","navigator","mediaDevices","getUserMedia","video","current","srcObject","err","alert","message","capturePhoto","ctx","getContext","drawImage","imageData","toDataURL","style","textAlign","marginTop","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","autoPlay","width","height","borderRadius","marginBottom","display","_c","$RefreshReg$"],"sources":["C:/Users/sahil/OneDrive/Desktop/docfixer/frontend/src/components/Scanner.js"],"sourcesContent":["import React, { useRef, useState } from \"react\";\r\n\r\nconst Scanner = ({ onScan }) => {\r\n  const videoRef = useRef(null);   // Reference to video element\r\n  const canvasRef = useRef(null);  // Reference to hidden canvas\r\n  const [cameraOn, setCameraOn] = useState(false);\r\n\r\n  // Start camera\r\n  const startCamera = async () => {\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({ video: true });\r\n      videoRef.current.srcObject = stream;\r\n      setCameraOn(true);\r\n    } catch (err) {\r\n      alert(\"Could not access camera: \" + err.message);\r\n    }\r\n  };\r\n\r\n  // Capture photo from video\r\n  const capturePhoto = () => {\r\n    const ctx = canvasRef.current.getContext(\"2d\");\r\n    ctx.drawImage(videoRef.current, 0, 0, 400, 300); // Draw video frame to canvas\r\n    const imageData = canvasRef.current.toDataURL(\"image/png\"); // Convert to data URL\r\n    onScan(imageData); // Send to parent\r\n  };\r\n\r\n  return (\r\n    <div style={{ textAlign: \"center\", marginTop: \"20px\" }}>\r\n      {!cameraOn && <button onClick={startCamera}>Start Scanner</button>}\r\n\r\n      {cameraOn && (\r\n        <>\r\n          <video\r\n            ref={videoRef}\r\n            autoPlay\r\n            width=\"400\"\r\n            height=\"300\"\r\n            style={{ borderRadius: \"8px\", marginBottom: \"10px\" }}\r\n          />\r\n          <br />\r\n          <button onClick={capturePhoto}>Capture Photo</button>\r\n          <canvas ref={canvasRef} width=\"400\" height=\"300\" style={{ display: \"none\" }} />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scanner;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}