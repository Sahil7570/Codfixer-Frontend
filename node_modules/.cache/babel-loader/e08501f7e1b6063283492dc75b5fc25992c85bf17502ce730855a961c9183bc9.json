{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sahil\\\\OneDrive\\\\Desktop\\\\docfixer\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsPDF } from \"jspdf\";\nimport { PDFDocument } from \"pdf-lib\";\nimport Tesseract from \"tesseract.js\";\nimport { HexColorPicker } from \"react-colorful\";\nimport \"./styles/App.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  var _texts$find, _texts$find2, _texts$find3, _texts$find4;\n  const [file, setFile] = useState(null);\n  const [imageURL, setImageURL] = useState(null);\n  const [processedImage, setProcessedImage] = useState(null);\n  const [filter, setFilter] = useState(\"none\");\n  const [filterIntensity, setFilterIntensity] = useState(100);\n  const [compression, setCompression] = useState(100);\n  const [texts, setTexts] = useState([]);\n  const [selectedTextId, setSelectedTextId] = useState(null);\n  const [showTextTools, setShowTextTools] = useState(false);\n  const [ocrText, setOcrText] = useState(\"\");\n  const [scannedFiles, setScannedFiles] = useState([]);\n\n  // New state for inline editing\n  const [editingTextId, setEditingTextId] = useState(null);\n  const [tempText, setTempText] = useState(\"\");\n\n  // ===== File Handling =====\n  const handleFileChange = e => {\n    const uploadedFile = e.target.files[0];\n    if (!uploadedFile) return;\n    setFile(uploadedFile);\n    setImageURL(URL.createObjectURL(uploadedFile));\n    setProcessedImage(null);\n    setTexts([]);\n    setOcrText(\"\");\n  };\n  const handleDrop = e => {\n    e.preventDefault();\n    const droppedFile = e.dataTransfer.files[0];\n    if (!droppedFile) return;\n    setFile(droppedFile);\n    setImageURL(URL.createObjectURL(droppedFile));\n    setProcessedImage(null);\n    setTexts([]);\n    setOcrText(\"\");\n  };\n  const handleDragOver = e => e.preventDefault();\n\n  // ===== Remove Background =====\n  const handleRemoveBG = async () => {\n    if (!file) return alert(\"Upload an image first\");\n    if (file.type.includes(\"pdf\")) return alert(\"Remove.bg works only with images\");\n    const formData = new FormData();\n    formData.append(\"image_file\", file);\n    try {\n      const res = await axios.post(\"https://api.remove.bg/v1.0/removebg\", formData, {\n        headers: {\n          \"X-Api-Key\": \"VSNXBaMjvgBp6NjjRheLV3cW\"\n        },\n        responseType: \"blob\"\n      });\n      setProcessedImage(URL.createObjectURL(res.data));\n    } catch (err) {\n      alert(\"Remove.bg API error: \" + err.message);\n    }\n  };\n\n  // ===== Filters =====\n  const getFilterStyle = () => {\n    const i = filterIntensity;\n    switch (filter) {\n      case \"grayscale\":\n        return {\n          filter: `grayscale(${i}%)`\n        };\n      case \"sepia\":\n        return {\n          filter: `sepia(${i}%)`\n        };\n      case \"invert\":\n        return {\n          filter: `invert(${i}%)`\n        };\n      case \"blur\":\n        return {\n          filter: `blur(${i / 20}px)`\n        };\n      case \"brightness\":\n        return {\n          filter: `brightness(${i}%)`\n        };\n      case \"contrast\":\n        return {\n          filter: `contrast(${i}%)`\n        };\n      case \"saturate\":\n        return {\n          filter: `saturate(${i}%)`\n        };\n      case \"hue-rotate\":\n        return {\n          filter: `hue-rotate(${i * 3.6}deg)`\n        };\n      default:\n        return {};\n    }\n  };\n\n  // ===== Text Overlay =====\n  const addText = () => {\n    const newText = {\n      id: Date.now(),\n      text: \"New Text\",\n      color: \"#ff0000\",\n      fontSize: 24,\n      fontWeight: 400,\n      x: 50,\n      y: 50,\n      width: 200,\n      height: 50,\n      rotation: 0,\n      opacity: 1\n    };\n    setTexts([...texts, newText]);\n    setSelectedTextId(newText.id);\n    setShowTextTools(true);\n  };\n  const updateText = (id, key, value) => {\n    setTexts(texts.map(t => t.id === id ? {\n      ...t,\n      [key]: value\n    } : t));\n  };\n  const deleteText = id => {\n    setTexts(texts.filter(t => t.id !== id));\n    if (selectedTextId === id) setSelectedTextId(null);\n  };\n\n  // ===== Generate Image =====\n  const generateFinalImage = () => {\n    return new Promise(resolve => {\n      const source = processedImage || imageURL;\n      if (!source) return resolve(null);\n      const img = new Image();\n      img.crossOrigin = \"anonymous\";\n      img.onload = () => {\n        const canvas = document.createElement(\"canvas\");\n        const ctx = canvas.getContext(\"2d\");\n        canvas.width = img.width;\n        canvas.height = img.height;\n        ctx.filter = getFilterStyle().filter || \"none\";\n        ctx.drawImage(img, 0, 0);\n        texts.forEach(t => {\n          ctx.save();\n          ctx.translate(t.x + t.width / 2, t.y + t.height / 2);\n          ctx.rotate(t.rotation * Math.PI / 180);\n          ctx.globalAlpha = t.opacity;\n          ctx.font = `${t.fontWeight || 400} ${t.fontSize}px Arial`;\n          ctx.fillStyle = t.color;\n          ctx.textAlign = \"center\";\n          ctx.textBaseline = \"middle\";\n          ctx.fillText(t.text, 0, 0);\n          ctx.restore();\n        });\n        resolve(canvas.toDataURL(\"image/jpeg\", compression / 100));\n      };\n      img.src = source;\n    });\n  };\n\n  // ===== Download =====\n  const handleDownloadImage = async format => {\n    const finalDataURL = await generateFinalImage();\n    if (!finalDataURL) return;\n    if (format === \"pdf\") {\n      const doc = new jsPDF();\n      doc.addImage(finalDataURL, \"JPEG\", 10, 10, 190, 0);\n      doc.save(\"docfixer.pdf\");\n    } else {\n      const link = document.createElement(\"a\");\n      link.href = finalDataURL;\n      link.download = `docfixer.${format}`;\n      link.click();\n    }\n  };\n\n  // ===== OCR =====\n  const handleOCR = async () => {\n    if (!file || !file.type.startsWith(\"image/\")) return alert(\"Upload an image for OCR\");\n    setOcrText(\"Processing...\");\n    Tesseract.recognize(file, \"eng\").then(({\n      data: {\n        text\n      }\n    }) => setOcrText(text));\n  };\n\n  // ===== Doc Scanner =====\n  const handleDocScanner = async () => {\n    if (!scannedFiles.length) return alert(\"No images scanned yet\");\n    const pdfDoc = await PDFDocument.create();\n    for (let imgFile of scannedFiles) {\n      const bytes = await imgFile.arrayBuffer();\n      const img = imgFile.type.includes(\"png\") ? await pdfDoc.embedPng(bytes) : await pdfDoc.embedJpg(bytes);\n      const page = pdfDoc.addPage([img.width, img.height]);\n      page.drawImage(img, {\n        x: 0,\n        y: 0,\n        width: img.width,\n        height: img.height\n      });\n    }\n    const pdfBytes = await pdfDoc.save();\n    const blob = new Blob([pdfBytes], {\n      type: \"application/pdf\"\n    });\n    const link = document.createElement(\"a\");\n    link.href = URL.createObjectURL(blob);\n    link.download = \"scanned.pdf\";\n    link.click();\n  };\n  const addScannedFile = e => setScannedFiles([...scannedFiles, ...Array.from(e.target.files)]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Tools\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tool-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Background Remover\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleRemoveBG,\n          children: \"Remove BG\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tool-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Text Overlay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addText,\n          children: \"+ Add Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tool-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Filters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: filter,\n          onChange: e => setFilter(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"none\",\n            children: \"None\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"grayscale\",\n            children: \"Grayscale\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"sepia\",\n            children: \"Sepia\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"invert\",\n            children: \"Invert\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"blur\",\n            children: \"Blur\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"brightness\",\n            children: \"Brightness\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"contrast\",\n            children: \"Contrast\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"saturate\",\n            children: \"Saturate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"hue-rotate\",\n            children: \"Hue Rotate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Intensity: \", filterIntensity, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"0\",\n          max: \"100\",\n          value: filterIntensity,\n          onChange: e => setFilterIntensity(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tool-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Compression\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"10\",\n          max: \"100\",\n          value: compression,\n          onChange: e => setCompression(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [compression, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tool-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Download\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDownloadImage(\"jpeg\"),\n          children: \"JPEG\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDownloadImage(\"png\"),\n          children: \"PNG\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDownloadImage(\"pdf\"),\n          children: \"PDF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tool-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"OCR Extractor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleOCR,\n          children: \"Run OCR\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tool-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Doc Scanner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          multiple: true,\n          onChange: addScannedFile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDocScanner,\n          children: \"Create PDF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editor\",\n      children: !imageURL ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-zone\",\n        onDrop: handleDrop,\n        onDragOver: handleDragOver,\n        onClick: () => document.getElementById(\"fileInput\").click(),\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Drag & Drop file here or click to upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"fileInput\",\n          type: \"file\",\n          accept: \"image/*,application/pdf\",\n          onChange: handleFileChange,\n          style: {\n            display: \"none\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: ocrText ?\n        /*#__PURE__*/\n        // OCR split\n        _jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            gap: \"10px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              flex: 3,\n              position: \"relative\",\n              minHeight: \"500px\",\n              border: \"1px solid #ccc\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: processedImage || imageURL,\n              alt: \"Preview\",\n              style: {\n                maxWidth: \"100%\",\n                display: \"block\",\n                ...getFilterStyle()\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 19\n            }, this), texts.map(t => /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                position: \"absolute\",\n                left: t.x,\n                top: t.y,\n                color: t.color,\n                fontSize: t.fontSize,\n                fontWeight: t.fontWeight || 400,\n                transform: `rotate(${t.rotation}deg)`,\n                opacity: t.opacity,\n                cursor: \"move\",\n                userSelect: \"none\",\n                pointerEvents: \"auto\"\n              },\n              children: t.text\n            }, t.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 21\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              flex: 1,\n              border: \"1px solid #ccc\",\n              padding: 10\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"OCR Output\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                whiteSpace: \"pre-wrap\"\n              },\n              children: ocrText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 15\n        }, this) :\n        /*#__PURE__*/\n        // Text Editing split\n        _jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            gap: \"10px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              flex: 3,\n              position: \"relative\",\n              minHeight: \"500px\",\n              border: \"1px solid #ccc\",\n              overflow: \"hidden\"\n            },\n            children: file.type.startsWith(\"image/\") ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: processedImage || imageURL,\n                alt: \"Preview\",\n                style: {\n                  maxWidth: \"100%\",\n                  display: \"block\",\n                  ...getFilterStyle()\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 23\n              }, this), texts.map(t => /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  position: \"absolute\",\n                  left: t.x,\n                  top: t.y,\n                  color: t.color,\n                  fontSize: t.fontSize,\n                  fontWeight: t.fontWeight || 400,\n                  transform: `rotate(${t.rotation}deg)`,\n                  opacity: t.opacity,\n                  cursor: \"move\",\n                  userSelect: \"none\",\n                  pointerEvents: \"auto\",\n                  border: selectedTextId === t.id ? \"2px dashed #007bff\" : \"none\",\n                  padding: \"2px 4px\",\n                  borderRadius: \"4px\",\n                  backgroundColor: selectedTextId === t.id ? \"rgba(0, 123, 255, 0.1)\" : \"transparent\"\n                },\n                onClick: () => setSelectedTextId(t.id),\n                draggable: true,\n                onDragStart: e => {\n                  e.dataTransfer.setData(\"text/plain\", t.id);\n                  setSelectedTextId(t.id);\n                },\n                onDragEnd: e => {\n                  const rect = e.currentTarget.parentElement.getBoundingClientRect();\n                  const x = Math.max(0, e.clientX - rect.left - 50);\n                  const y = Math.max(0, e.clientY - rect.top - 20);\n                  updateText(t.id, \"x\", x);\n                  updateText(t.id, \"y\", y);\n                },\n                onDoubleClick: () => {\n                  setTempText(t.text);\n                  setEditingTextId(t.id);\n                },\n                children: [selectedTextId === t.id && /*#__PURE__*/_jsxDEV(\"span\", {\n                  onClick: e => {\n                    e.stopPropagation();\n                    deleteText(t.id);\n                  },\n                  style: {\n                    position: \"absolute\",\n                    top: -10,\n                    right: -10,\n                    backgroundColor: \"#ff4d4f\",\n                    color: \"#fff\",\n                    borderRadius: \"50%\",\n                    width: 20,\n                    height: 20,\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    cursor: \"pointer\",\n                    fontSize: 12,\n                    fontWeight: \"bold\",\n                    zIndex: 10\n                  },\n                  children: \"\\xD7\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 404,\n                  columnNumber: 29\n                }, this), editingTextId === t.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    gap: \"5px\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: tempText,\n                    onChange: e => setTempText(e.target.value),\n                    style: {\n                      padding: \"2px 4px\",\n                      border: \"1px solid #ccc\",\n                      borderRadius: \"4px\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 439,\n                    columnNumber: 31\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => {\n                      updateText(t.id, \"text\", tempText);\n                      setEditingTextId(null);\n                    },\n                    style: {\n                      cursor: \"pointer\",\n                      background: \"green\",\n                      color: \"#fff\"\n                    },\n                    children: \"\\u2714\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 449,\n                    columnNumber: 31\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => setEditingTextId(null),\n                    style: {\n                      cursor: \"pointer\",\n                      background: \"red\",\n                      color: \"#fff\"\n                    },\n                    children: \"\\u2716\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 462,\n                    columnNumber: 31\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 432,\n                  columnNumber: 29\n                }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: t.text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 474,\n                  columnNumber: 29\n                }, this)]\n              }, t.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 25\n              }, this))]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(\"embed\", {\n              src: imageURL,\n              type: \"application/pdf\",\n              width: \"100%\",\n              height: \"500px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 480,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 17\n          }, this), showTextTools && selectedTextId && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              flex: 1,\n              border: \"1px solid #ccc\",\n              padding: 10\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Text Options\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 490,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Font Size:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: ((_texts$find = texts.find(t => t.id === selectedTextId)) === null || _texts$find === void 0 ? void 0 : _texts$find.fontSize) || 24,\n                onChange: e => updateText(selectedTextId, \"fontSize\", parseInt(e.target.value)),\n                style: {\n                  width: 50,\n                  marginLeft: 5\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 493,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 491,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginTop: 10\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\"Text Thickness:\", \" \", ((_texts$find2 = texts.find(t => t.id === selectedTextId)) === null || _texts$find2 === void 0 ? void 0 : _texts$find2.fontWeight) || 400]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 511,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"range\",\n                min: \"100\",\n                max: \"900\",\n                step: \"100\",\n                value: ((_texts$find3 = texts.find(t => t.id === selectedTextId)) === null || _texts$find3 === void 0 ? void 0 : _texts$find3.fontWeight) || 400,\n                onChange: e => updateText(selectedTextId, \"fontWeight\", parseInt(e.target.value)),\n                style: {\n                  width: \"100%\",\n                  marginTop: 5\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 516,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 510,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginTop: 10\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Color:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 537,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(HexColorPicker, {\n                color: ((_texts$find4 = texts.find(t => t.id === selectedTextId)) === null || _texts$find4 === void 0 ? void 0 : _texts$find4.color) || \"#ff0000\",\n                onChange: color => updateText(selectedTextId, \"color\", color)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 538,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 536,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 15\n        }, this)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Bl7LwLe8bim7/MixICe3EVhH4Io=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsPDF","PDFDocument","Tesseract","HexColorPicker","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","_texts$find","_texts$find2","_texts$find3","_texts$find4","file","setFile","imageURL","setImageURL","processedImage","setProcessedImage","filter","setFilter","filterIntensity","setFilterIntensity","compression","setCompression","texts","setTexts","selectedTextId","setSelectedTextId","showTextTools","setShowTextTools","ocrText","setOcrText","scannedFiles","setScannedFiles","editingTextId","setEditingTextId","tempText","setTempText","handleFileChange","e","uploadedFile","target","files","URL","createObjectURL","handleDrop","preventDefault","droppedFile","dataTransfer","handleDragOver","handleRemoveBG","alert","type","includes","formData","FormData","append","res","post","headers","responseType","data","err","message","getFilterStyle","i","addText","newText","id","Date","now","text","color","fontSize","fontWeight","x","y","width","height","rotation","opacity","updateText","key","value","map","t","deleteText","generateFinalImage","Promise","resolve","source","img","Image","crossOrigin","onload","canvas","document","createElement","ctx","getContext","drawImage","forEach","save","translate","rotate","Math","PI","globalAlpha","font","fillStyle","textAlign","textBaseline","fillText","restore","toDataURL","src","handleDownloadImage","format","finalDataURL","doc","addImage","link","href","download","click","handleOCR","startsWith","recognize","then","handleDocScanner","length","pdfDoc","create","imgFile","bytes","arrayBuffer","embedPng","embedJpg","page","addPage","pdfBytes","blob","Blob","addScannedFile","Array","from","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onChange","min","max","multiple","onDrop","onDragOver","getElementById","accept","style","display","gap","flex","position","minHeight","border","alt","maxWidth","left","top","transform","cursor","userSelect","pointerEvents","padding","whiteSpace","overflow","borderRadius","backgroundColor","draggable","onDragStart","setData","onDragEnd","rect","currentTarget","parentElement","getBoundingClientRect","clientX","clientY","onDoubleClick","stopPropagation","right","alignItems","justifyContent","zIndex","background","find","parseInt","marginLeft","marginTop","step","_c","$RefreshReg$"],"sources":["C:/Users/sahil/OneDrive/Desktop/docfixer/frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { jsPDF } from \"jspdf\";\r\nimport { PDFDocument } from \"pdf-lib\";\r\nimport Tesseract from \"tesseract.js\";\r\nimport { HexColorPicker } from \"react-colorful\";\r\nimport \"./styles/App.css\";\r\n\r\nfunction App() {\r\n  const [file, setFile] = useState(null);\r\n  const [imageURL, setImageURL] = useState(null);\r\n  const [processedImage, setProcessedImage] = useState(null);\r\n  const [filter, setFilter] = useState(\"none\");\r\n  const [filterIntensity, setFilterIntensity] = useState(100);\r\n  const [compression, setCompression] = useState(100);\r\n  const [texts, setTexts] = useState([]);\r\n  const [selectedTextId, setSelectedTextId] = useState(null);\r\n  const [showTextTools, setShowTextTools] = useState(false);\r\n  const [ocrText, setOcrText] = useState(\"\");\r\n  const [scannedFiles, setScannedFiles] = useState([]);\r\n\r\n  // New state for inline editing\r\n  const [editingTextId, setEditingTextId] = useState(null);\r\n  const [tempText, setTempText] = useState(\"\");\r\n\r\n  // ===== File Handling =====\r\n  const handleFileChange = (e) => {\r\n    const uploadedFile = e.target.files[0];\r\n    if (!uploadedFile) return;\r\n    setFile(uploadedFile);\r\n    setImageURL(URL.createObjectURL(uploadedFile));\r\n    setProcessedImage(null);\r\n    setTexts([]);\r\n    setOcrText(\"\");\r\n  };\r\n\r\n  const handleDrop = (e) => {\r\n    e.preventDefault();\r\n    const droppedFile = e.dataTransfer.files[0];\r\n    if (!droppedFile) return;\r\n    setFile(droppedFile);\r\n    setImageURL(URL.createObjectURL(droppedFile));\r\n    setProcessedImage(null);\r\n    setTexts([]);\r\n    setOcrText(\"\");\r\n  };\r\n\r\n  const handleDragOver = (e) => e.preventDefault();\r\n\r\n  // ===== Remove Background =====\r\n  const handleRemoveBG = async () => {\r\n    if (!file) return alert(\"Upload an image first\");\r\n    if (file.type.includes(\"pdf\"))\r\n      return alert(\"Remove.bg works only with images\");\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"image_file\", file);\r\n    try {\r\n      const res = await axios.post(\r\n        \"https://api.remove.bg/v1.0/removebg\",\r\n        formData,\r\n        {\r\n          headers: { \"X-Api-Key\": \"VSNXBaMjvgBp6NjjRheLV3cW\" },\r\n          responseType: \"blob\",\r\n        }\r\n      );\r\n      setProcessedImage(URL.createObjectURL(res.data));\r\n    } catch (err) {\r\n      alert(\"Remove.bg API error: \" + err.message);\r\n    }\r\n  };\r\n\r\n  // ===== Filters =====\r\n  const getFilterStyle = () => {\r\n    const i = filterIntensity;\r\n    switch (filter) {\r\n      case \"grayscale\":\r\n        return { filter: `grayscale(${i}%)` };\r\n      case \"sepia\":\r\n        return { filter: `sepia(${i}%)` };\r\n      case \"invert\":\r\n        return { filter: `invert(${i}%)` };\r\n      case \"blur\":\r\n        return { filter: `blur(${i / 20}px)` };\r\n      case \"brightness\":\r\n        return { filter: `brightness(${i}%)` };\r\n      case \"contrast\":\r\n        return { filter: `contrast(${i}%)` };\r\n      case \"saturate\":\r\n        return { filter: `saturate(${i}%)` };\r\n      case \"hue-rotate\":\r\n        return { filter: `hue-rotate(${i * 3.6}deg)` };\r\n      default:\r\n        return {};\r\n    }\r\n  };\r\n\r\n  // ===== Text Overlay =====\r\n  const addText = () => {\r\n    const newText = {\r\n      id: Date.now(),\r\n      text: \"New Text\",\r\n      color: \"#ff0000\",\r\n      fontSize: 24,\r\n      fontWeight: 400,\r\n      x: 50,\r\n      y: 50,\r\n      width: 200,\r\n      height: 50,\r\n      rotation: 0,\r\n      opacity: 1,\r\n    };\r\n    setTexts([...texts, newText]);\r\n    setSelectedTextId(newText.id);\r\n    setShowTextTools(true);\r\n  };\r\n\r\n  const updateText = (id, key, value) => {\r\n    setTexts(texts.map((t) => (t.id === id ? { ...t, [key]: value } : t)));\r\n  };\r\n\r\n  const deleteText = (id) => {\r\n    setTexts(texts.filter((t) => t.id !== id));\r\n    if (selectedTextId === id) setSelectedTextId(null);\r\n  };\r\n\r\n  // ===== Generate Image =====\r\n  const generateFinalImage = () => {\r\n    return new Promise((resolve) => {\r\n      const source = processedImage || imageURL;\r\n      if (!source) return resolve(null);\r\n      const img = new Image();\r\n      img.crossOrigin = \"anonymous\";\r\n      img.onload = () => {\r\n        const canvas = document.createElement(\"canvas\");\r\n        const ctx = canvas.getContext(\"2d\");\r\n        canvas.width = img.width;\r\n        canvas.height = img.height;\r\n        ctx.filter = getFilterStyle().filter || \"none\";\r\n        ctx.drawImage(img, 0, 0);\r\n        texts.forEach((t) => {\r\n          ctx.save();\r\n          ctx.translate(t.x + t.width / 2, t.y + t.height / 2);\r\n          ctx.rotate((t.rotation * Math.PI) / 180);\r\n          ctx.globalAlpha = t.opacity;\r\n          ctx.font = `${t.fontWeight || 400} ${t.fontSize}px Arial`;\r\n          ctx.fillStyle = t.color;\r\n          ctx.textAlign = \"center\";\r\n          ctx.textBaseline = \"middle\";\r\n          ctx.fillText(t.text, 0, 0);\r\n          ctx.restore();\r\n        });\r\n        resolve(canvas.toDataURL(\"image/jpeg\", compression / 100));\r\n      };\r\n      img.src = source;\r\n    });\r\n  };\r\n\r\n  // ===== Download =====\r\n  const handleDownloadImage = async (format) => {\r\n    const finalDataURL = await generateFinalImage();\r\n    if (!finalDataURL) return;\r\n    if (format === \"pdf\") {\r\n      const doc = new jsPDF();\r\n      doc.addImage(finalDataURL, \"JPEG\", 10, 10, 190, 0);\r\n      doc.save(\"docfixer.pdf\");\r\n    } else {\r\n      const link = document.createElement(\"a\");\r\n      link.href = finalDataURL;\r\n      link.download = `docfixer.${format}`;\r\n      link.click();\r\n    }\r\n  };\r\n\r\n  // ===== OCR =====\r\n  const handleOCR = async () => {\r\n    if (!file || !file.type.startsWith(\"image/\"))\r\n      return alert(\"Upload an image for OCR\");\r\n    setOcrText(\"Processing...\");\r\n    Tesseract.recognize(file, \"eng\").then(({ data: { text } }) =>\r\n      setOcrText(text)\r\n    );\r\n  };\r\n\r\n  // ===== Doc Scanner =====\r\n  const handleDocScanner = async () => {\r\n    if (!scannedFiles.length) return alert(\"No images scanned yet\");\r\n    const pdfDoc = await PDFDocument.create();\r\n    for (let imgFile of scannedFiles) {\r\n      const bytes = await imgFile.arrayBuffer();\r\n      const img = imgFile.type.includes(\"png\")\r\n        ? await pdfDoc.embedPng(bytes)\r\n        : await pdfDoc.embedJpg(bytes);\r\n      const page = pdfDoc.addPage([img.width, img.height]);\r\n      page.drawImage(img, { x: 0, y: 0, width: img.width, height: img.height });\r\n    }\r\n    const pdfBytes = await pdfDoc.save();\r\n    const blob = new Blob([pdfBytes], { type: \"application/pdf\" });\r\n    const link = document.createElement(\"a\");\r\n    link.href = URL.createObjectURL(blob);\r\n    link.download = \"scanned.pdf\";\r\n    link.click();\r\n  };\r\n\r\n  const addScannedFile = (e) =>\r\n    setScannedFiles([...scannedFiles, ...Array.from(e.target.files)]);\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <div className=\"sidebar\">\r\n        <h2>Tools</h2>\r\n        <div className=\"tool-section\">\r\n          <h3>Background Remover</h3>\r\n          <button onClick={handleRemoveBG}>Remove BG</button>\r\n        </div>\r\n        <div className=\"tool-section\">\r\n          <h3>Text Overlay</h3>\r\n          <button onClick={addText}>+ Add Text</button>\r\n        </div>\r\n        <div className=\"tool-section\">\r\n          <h3>Filters</h3>\r\n          <select value={filter} onChange={(e) => setFilter(e.target.value)}>\r\n            <option value=\"none\">None</option>\r\n            <option value=\"grayscale\">Grayscale</option>\r\n            <option value=\"sepia\">Sepia</option>\r\n            <option value=\"invert\">Invert</option>\r\n            <option value=\"blur\">Blur</option>\r\n            <option value=\"brightness\">Brightness</option>\r\n            <option value=\"contrast\">Contrast</option>\r\n            <option value=\"saturate\">Saturate</option>\r\n            <option value=\"hue-rotate\">Hue Rotate</option>\r\n          </select>\r\n          <label>Intensity: {filterIntensity}%</label>\r\n          <input\r\n            type=\"range\"\r\n            min=\"0\"\r\n            max=\"100\"\r\n            value={filterIntensity}\r\n            onChange={(e) => setFilterIntensity(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"tool-section\">\r\n          <h3>Compression</h3>\r\n          <input\r\n            type=\"range\"\r\n            min=\"10\"\r\n            max=\"100\"\r\n            value={compression}\r\n            onChange={(e) => setCompression(e.target.value)}\r\n          />\r\n          <span>{compression}%</span>\r\n        </div>\r\n        <div className=\"tool-section\">\r\n          <h3>Download</h3>\r\n          <button onClick={() => handleDownloadImage(\"jpeg\")}>JPEG</button>\r\n          <button onClick={() => handleDownloadImage(\"png\")}>PNG</button>\r\n          <button onClick={() => handleDownloadImage(\"pdf\")}>PDF</button>\r\n        </div>\r\n        <div className=\"tool-section\">\r\n          <h3>OCR Extractor</h3>\r\n          <button onClick={handleOCR}>Run OCR</button>\r\n        </div>\r\n        <div className=\"tool-section\">\r\n          <h3>Doc Scanner</h3>\r\n          <input type=\"file\" multiple onChange={addScannedFile} />\r\n          <button onClick={handleDocScanner}>Create PDF</button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"editor\">\r\n        {!imageURL ? (\r\n          <div\r\n            className=\"upload-zone\"\r\n            onDrop={handleDrop}\r\n            onDragOver={handleDragOver}\r\n            onClick={() => document.getElementById(\"fileInput\").click()}\r\n          >\r\n            <p>Drag & Drop file here or click to upload</p>\r\n            <input\r\n              id=\"fileInput\"\r\n              type=\"file\"\r\n              accept=\"image/*,application/pdf\"\r\n              onChange={handleFileChange}\r\n              style={{ display: \"none\" }}\r\n            />\r\n          </div>\r\n        ) : (\r\n          <>\r\n            {ocrText ? (\r\n              // OCR split\r\n              <div style={{ display: \"flex\", gap: \"10px\" }}>\r\n                <div\r\n                  style={{\r\n                    flex: 3,\r\n                    position: \"relative\",\r\n                    minHeight: \"500px\",\r\n                    border: \"1px solid #ccc\",\r\n                  }}\r\n                >\r\n                  <img\r\n                    src={processedImage || imageURL}\r\n                    alt=\"Preview\"\r\n                    style={{\r\n                      maxWidth: \"100%\",\r\n                      display: \"block\",\r\n                      ...getFilterStyle(),\r\n                    }}\r\n                  />\r\n                  {texts.map((t) => (\r\n                    <div\r\n                      key={t.id}\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        left: t.x,\r\n                        top: t.y,\r\n                        color: t.color,\r\n                        fontSize: t.fontSize,\r\n                        fontWeight: t.fontWeight || 400,\r\n                        transform: `rotate(${t.rotation}deg)`,\r\n                        opacity: t.opacity,\r\n                        cursor: \"move\",\r\n                        userSelect: \"none\",\r\n                        pointerEvents: \"auto\",\r\n                      }}\r\n                    >\r\n                      {t.text}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n                <div style={{ flex: 1, border: \"1px solid #ccc\", padding: 10 }}>\r\n                  <h3>OCR Output</h3>\r\n                  <div style={{ whiteSpace: \"pre-wrap\" }}>{ocrText}</div>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              // Text Editing split\r\n              <div style={{ display: \"flex\", gap: \"10px\" }}>\r\n                <div\r\n                  style={{\r\n                    flex: 3,\r\n                    position: \"relative\",\r\n                    minHeight: \"500px\",\r\n                    border: \"1px solid #ccc\",\r\n                    overflow: \"hidden\",\r\n                  }}\r\n                >\r\n                  {file.type.startsWith(\"image/\") ? (\r\n                    <>\r\n                      <img\r\n                        src={processedImage || imageURL}\r\n                        alt=\"Preview\"\r\n                        style={{\r\n                          maxWidth: \"100%\",\r\n                          display: \"block\",\r\n                          ...getFilterStyle(),\r\n                        }}\r\n                      />\r\n                      {texts.map((t) => (\r\n                        <div\r\n                          key={t.id}\r\n                          style={{\r\n                            position: \"absolute\",\r\n                            left: t.x,\r\n                            top: t.y,\r\n                            color: t.color,\r\n                            fontSize: t.fontSize,\r\n                            fontWeight: t.fontWeight || 400,\r\n                            transform: `rotate(${t.rotation}deg)`,\r\n                            opacity: t.opacity,\r\n                            cursor: \"move\",\r\n                            userSelect: \"none\",\r\n                            pointerEvents: \"auto\",\r\n                            border:\r\n                              selectedTextId === t.id\r\n                                ? \"2px dashed #007bff\"\r\n                                : \"none\",\r\n                            padding: \"2px 4px\",\r\n                            borderRadius: \"4px\",\r\n                            backgroundColor:\r\n                              selectedTextId === t.id\r\n                                ? \"rgba(0, 123, 255, 0.1)\"\r\n                                : \"transparent\",\r\n                          }}\r\n                          onClick={() => setSelectedTextId(t.id)}\r\n                          draggable\r\n                          onDragStart={(e) => {\r\n                            e.dataTransfer.setData(\"text/plain\", t.id);\r\n                            setSelectedTextId(t.id);\r\n                          }}\r\n                          onDragEnd={(e) => {\r\n                            const rect =\r\n                              e.currentTarget.parentElement.getBoundingClientRect();\r\n                            const x = Math.max(0, e.clientX - rect.left - 50);\r\n                            const y = Math.max(0, e.clientY - rect.top - 20);\r\n                            updateText(t.id, \"x\", x);\r\n                            updateText(t.id, \"y\", y);\r\n                          }}\r\n                          onDoubleClick={() => {\r\n                            setTempText(t.text);\r\n                            setEditingTextId(t.id);\r\n                          }}\r\n                        >\r\n                          {selectedTextId === t.id && (\r\n                            <span\r\n                              onClick={(e) => {\r\n                                e.stopPropagation();\r\n                                deleteText(t.id);\r\n                              }}\r\n                              style={{\r\n                                position: \"absolute\",\r\n                                top: -10,\r\n                                right: -10,\r\n                                backgroundColor: \"#ff4d4f\",\r\n                                color: \"#fff\",\r\n                                borderRadius: \"50%\",\r\n                                width: 20,\r\n                                height: 20,\r\n                                display: \"flex\",\r\n                                alignItems: \"center\",\r\n                                justifyContent: \"center\",\r\n                                cursor: \"pointer\",\r\n                                fontSize: 12,\r\n                                fontWeight: \"bold\",\r\n                                zIndex: 10,\r\n                              }}\r\n                            >\r\n                              ×\r\n                            </span>\r\n                          )}\r\n\r\n                          {editingTextId === t.id ? (\r\n                            <div\r\n                              style={{\r\n                                display: \"flex\",\r\n                                alignItems: \"center\",\r\n                                gap: \"5px\",\r\n                              }}\r\n                            >\r\n                              <input\r\n                                type=\"text\"\r\n                                value={tempText}\r\n                                onChange={(e) => setTempText(e.target.value)}\r\n                                style={{\r\n                                  padding: \"2px 4px\",\r\n                                  border: \"1px solid #ccc\",\r\n                                  borderRadius: \"4px\",\r\n                                }}\r\n                              />\r\n                              <button\r\n                                onClick={() => {\r\n                                  updateText(t.id, \"text\", tempText);\r\n                                  setEditingTextId(null);\r\n                                }}\r\n                                style={{\r\n                                  cursor: \"pointer\",\r\n                                  background: \"green\",\r\n                                  color: \"#fff\",\r\n                                }}\r\n                              >\r\n                                ✔\r\n                              </button>\r\n                              <button\r\n                                onClick={() => setEditingTextId(null)}\r\n                                style={{\r\n                                  cursor: \"pointer\",\r\n                                  background: \"red\",\r\n                                  color: \"#fff\",\r\n                                }}\r\n                              >\r\n                                ✖\r\n                              </button>\r\n                            </div>\r\n                          ) : (\r\n                            <span>{t.text}</span>\r\n                          )}\r\n                        </div>\r\n                      ))}\r\n                    </>\r\n                  ) : (\r\n                    <embed\r\n                      src={imageURL}\r\n                      type=\"application/pdf\"\r\n                      width=\"100%\"\r\n                      height=\"500px\"\r\n                    />\r\n                  )}\r\n                </div>\r\n                {showTextTools && selectedTextId && (\r\n                  <div style={{ flex: 1, border: \"1px solid #ccc\", padding: 10 }}>\r\n                    <h3>Text Options</h3>\r\n                    <label>\r\n                      Font Size:\r\n                      <input\r\n                        type=\"number\"\r\n                        value={\r\n                          texts.find((t) => t.id === selectedTextId)?.fontSize ||\r\n                          24\r\n                        }\r\n                        onChange={(e) =>\r\n                          updateText(\r\n                            selectedTextId,\r\n                            \"fontSize\",\r\n                            parseInt(e.target.value)\r\n                          )\r\n                        }\r\n                        style={{ width: 50, marginLeft: 5 }}\r\n                      />\r\n                    </label>\r\n\r\n                    <div style={{ marginTop: 10 }}>\r\n                      <label>\r\n                        Text Thickness:{\" \"}\r\n                        {texts.find((t) => t.id === selectedTextId)\r\n                          ?.fontWeight || 400}\r\n                      </label>\r\n                      <input\r\n                        type=\"range\"\r\n                        min=\"100\"\r\n                        max=\"900\"\r\n                        step=\"100\"\r\n                        value={\r\n                          texts.find((t) => t.id === selectedTextId)\r\n                            ?.fontWeight || 400\r\n                        }\r\n                        onChange={(e) =>\r\n                          updateText(\r\n                            selectedTextId,\r\n                            \"fontWeight\",\r\n                            parseInt(e.target.value)\r\n                          )\r\n                        }\r\n                        style={{ width: \"100%\", marginTop: 5 }}\r\n                      />\r\n                    </div>\r\n\r\n                    <div style={{ marginTop: 10 }}>\r\n                      <h4>Color:</h4>\r\n                      <HexColorPicker\r\n                        color={\r\n                          texts.find((t) => t.id === selectedTextId)?.color ||\r\n                          \"#ff0000\"\r\n                        }\r\n                        onChange={(color) =>\r\n                          updateText(selectedTextId, \"color\", color)\r\n                        }\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}