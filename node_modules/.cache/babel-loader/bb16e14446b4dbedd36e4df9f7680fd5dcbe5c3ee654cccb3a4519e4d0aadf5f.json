{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sahil\\\\OneDrive\\\\Desktop\\\\docfixer\\\\frontend\\\\src\\\\components\\\\CropTool.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from \"react\";\nimport Cropper from \"react-cropper\";\nimport \"cropperjs/dist/cropper.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CropTool = ({\n  image,\n  onCropDone\n}) => {\n  _s();\n  const cropperRef = useRef(null);\n  const [manualCrop, setManualCrop] = useState(false);\n  const handleCrop = () => {\n    if (cropperRef.current && cropperRef.current.cropper) {\n      const cropped = cropperRef.current.cropper.getCroppedCanvas().toDataURL();\n      onCropDone(cropped);\n    }\n  };\n  const handleClear = () => {\n    var _cropperRef$current;\n    if ((_cropperRef$current = cropperRef.current) !== null && _cropperRef$current !== void 0 && _cropperRef$current.cropper) {\n      cropperRef.current.cropper.clear(); // removes selected crop area\n    }\n  };\n  if (!image) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setManualCrop(!manualCrop),\n      children: manualCrop ? \"Cancel Manual Crop\" : \"Manual Crop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), manualCrop && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Manual crop mode enabled. Drag the crop box.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(Cropper, {\n      src: image,\n      style: {\n        height: 400,\n        width: \"100%\"\n      },\n      aspectRatio: 1,\n      guides: true,\n      ref: cropperRef,\n      dragMode: manualCrop ? \"crop\" : \"none\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCrop,\n      children: \"Crop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClear,\n      children: \"Remove unnecessary part\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(CropTool, \"W5S3KF26YVt5AXkSIvKDpIrLd8A=\");\n_c = CropTool;\nexport default CropTool;\nvar _c;\n$RefreshReg$(_c, \"CropTool\");","map":{"version":3,"names":["React","useRef","useState","Cropper","jsxDEV","_jsxDEV","CropTool","image","onCropDone","_s","cropperRef","manualCrop","setManualCrop","handleCrop","current","cropper","cropped","getCroppedCanvas","toDataURL","handleClear","_cropperRef$current","clear","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","src","style","height","width","aspectRatio","guides","ref","dragMode","_c","$RefreshReg$"],"sources":["C:/Users/sahil/OneDrive/Desktop/docfixer/frontend/src/components/CropTool.js"],"sourcesContent":["import React, { useRef, useState } from \"react\";\r\nimport Cropper from \"react-cropper\";\r\nimport \"cropperjs/dist/cropper.css\";\r\n\r\nconst CropTool = ({ image, onCropDone }) => {\r\n  const cropperRef = useRef(null);\r\n  const [manualCrop, setManualCrop] = useState(false);\r\n\r\n  const handleCrop = () => {\r\n    if (cropperRef.current && cropperRef.current.cropper) {\r\n      const cropped = cropperRef.current.cropper.getCroppedCanvas().toDataURL();\r\n      onCropDone(cropped);\r\n    }\r\n  };\r\n\r\n  const handleClear = () => {\r\n    if (cropperRef.current?.cropper) {\r\n      cropperRef.current.cropper.clear(); // removes selected crop area\r\n    }\r\n  };\r\n\r\n  if (!image) return null;\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={() => setManualCrop(!manualCrop)}>\r\n        {manualCrop ? \"Cancel Manual Crop\" : \"Manual Crop\"}\r\n      </button>\r\n\r\n      {manualCrop && <p>Manual crop mode enabled. Drag the crop box.</p>}\r\n\r\n      <Cropper\r\n        src={image}\r\n        style={{ height: 400, width: \"100%\" }}\r\n        aspectRatio={1}\r\n        guides={true}\r\n        ref={cropperRef}\r\n        dragMode={manualCrop ? \"crop\" : \"none\"}\r\n      />\r\n\r\n      <button onClick={handleCrop}>Crop</button>\r\n      <button onClick={handleClear}>Remove unnecessary part</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CropTool;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC/C,OAAOC,OAAO,MAAM,eAAe;AACnC,OAAO,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAMC,UAAU,GAAGT,MAAM,CAAC,IAAI,CAAC;EAC/B,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMW,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAIH,UAAU,CAACI,OAAO,IAAIJ,UAAU,CAACI,OAAO,CAACC,OAAO,EAAE;MACpD,MAAMC,OAAO,GAAGN,UAAU,CAACI,OAAO,CAACC,OAAO,CAACE,gBAAgB,CAAC,CAAC,CAACC,SAAS,CAAC,CAAC;MACzEV,UAAU,CAACQ,OAAO,CAAC;IACrB;EACF,CAAC;EAED,MAAMG,WAAW,GAAGA,CAAA,KAAM;IAAA,IAAAC,mBAAA;IACxB,KAAAA,mBAAA,GAAIV,UAAU,CAACI,OAAO,cAAAM,mBAAA,eAAlBA,mBAAA,CAAoBL,OAAO,EAAE;MAC/BL,UAAU,CAACI,OAAO,CAACC,OAAO,CAACM,KAAK,CAAC,CAAC,CAAC,CAAC;IACtC;EACF,CAAC;EAED,IAAI,CAACd,KAAK,EAAE,OAAO,IAAI;EAEvB,oBACEF,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MAAQkB,OAAO,EAAEA,CAAA,KAAMX,aAAa,CAAC,CAACD,UAAU,CAAE;MAAAW,QAAA,EAC/CX,UAAU,GAAG,oBAAoB,GAAG;IAAa;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,EAERhB,UAAU,iBAAIN,OAAA;MAAAiB,QAAA,EAAG;IAA4C;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAElEtB,OAAA,CAACF,OAAO;MACNyB,GAAG,EAAErB,KAAM;MACXsB,KAAK,EAAE;QAAEC,MAAM,EAAE,GAAG;QAAEC,KAAK,EAAE;MAAO,CAAE;MACtCC,WAAW,EAAE,CAAE;MACfC,MAAM,EAAE,IAAK;MACbC,GAAG,EAAExB,UAAW;MAChByB,QAAQ,EAAExB,UAAU,GAAG,MAAM,GAAG;IAAO;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC,eAEFtB,OAAA;MAAQkB,OAAO,EAAEV,UAAW;MAAAS,QAAA,EAAC;IAAI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC1CtB,OAAA;MAAQkB,OAAO,EAAEJ,WAAY;MAAAG,QAAA,EAAC;IAAuB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3D,CAAC;AAEV,CAAC;AAAClB,EAAA,CAxCIH,QAAQ;AAAA8B,EAAA,GAAR9B,QAAQ;AA0Cd,eAAeA,QAAQ;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}