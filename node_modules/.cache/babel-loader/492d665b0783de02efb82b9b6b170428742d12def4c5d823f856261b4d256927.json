{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sahil\\\\OneDrive\\\\Desktop\\\\docfixer\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Rnd } from \"react-rnd\";\nimport { HexColorPicker } from \"react-colorful\"; // install via npm i react-colorful\nimport \"./styles/App.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  var _texts$find, _texts$find2, _texts$find3;\n  const [file, setFile] = useState(null);\n  const [imageURL, setImageURL] = useState(null);\n  const [processedImage, setProcessedImage] = useState(null);\n  const [filter, setFilter] = useState(\"none\");\n  const [compression, setCompression] = useState(100);\n\n  // Text overlay state\n  const [texts, setTexts] = useState([]);\n  const [selectedTextId, setSelectedTextId] = useState(null);\n  const [showColorPicker, setShowColorPicker] = useState(false);\n  const handleFileChange = e => {\n    const uploadedFile = e.target.files[0];\n    if (!uploadedFile) return;\n    setFile(uploadedFile);\n    setImageURL(URL.createObjectURL(uploadedFile));\n    setProcessedImage(null);\n    setTexts([]);\n  };\n  const handleDrop = e => {\n    e.preventDefault();\n    const droppedFile = e.dataTransfer.files[0];\n    if (droppedFile) {\n      setFile(droppedFile);\n      setImageURL(URL.createObjectURL(droppedFile));\n      setProcessedImage(null);\n      setTexts([]);\n    }\n  };\n  const handleDragOver = e => e.preventDefault();\n\n  // Remove.bg\n  const handleRemoveBG = async () => {\n    if (!file) return alert(\"Upload an image first\");\n    if (file.type.includes(\"pdf\")) return alert(\"Remove.bg works only with images\");\n    const formData = new FormData();\n    formData.append(\"image_file\", file);\n    try {\n      const res = await axios.post(\"https://api.remove.bg/v1.0/removebg\", formData, {\n        headers: {\n          \"X-Api-Key\": \"VSNXBaMjvgBp6NjjRheLV3cW\",\n          \"Content-Type\": \"multipart/form-data\"\n        },\n        responseType: \"blob\"\n      });\n      const url = URL.createObjectURL(res.data);\n      setProcessedImage(url);\n    } catch (err) {\n      alert(\"Remove.bg API error: \" + err.message);\n    }\n  };\n  const getFilterStyle = () => {\n    switch (filter) {\n      case \"grayscale\":\n        return {\n          filter: \"grayscale(100%)\"\n        };\n      case \"sepia\":\n        return {\n          filter: \"sepia(100%)\"\n        };\n      case \"invert\":\n        return {\n          filter: \"invert(100%)\"\n        };\n      default:\n        return {};\n    }\n  };\n\n  // Add new text box\n  const addText = () => {\n    const newText = {\n      id: Date.now(),\n      text: \"New Text\",\n      color: \"#ff0000\",\n      fontSize: 24,\n      x: 50,\n      y: 50,\n      width: 200,\n      height: 50\n    };\n    setTexts([...texts, newText]);\n    setSelectedTextId(newText.id);\n  };\n  const updateText = (id, key, value) => {\n    setTexts(texts.map(t => t.id === id ? {\n      ...t,\n      [key]: value\n    } : t));\n  };\n  const deleteText = id => {\n    setTexts(texts.filter(t => t.id !== id));\n    if (selectedTextId === id) setSelectedTextId(null);\n  };\n  const generateFinalImage = () => {\n    return new Promise(resolve => {\n      const source = processedImage || imageURL;\n      if (!source) return resolve(null);\n      const img = new Image();\n      img.crossOrigin = \"anonymous\";\n      img.onload = () => {\n        const canvas = document.createElement(\"canvas\");\n        const ctx = canvas.getContext(\"2d\");\n        canvas.width = img.width;\n        canvas.height = img.height;\n        ctx.filter = filter === \"grayscale\" ? \"grayscale(100%)\" : filter === \"sepia\" ? \"sepia(100%)\" : filter === \"invert\" ? \"invert(100%)\" : \"none\";\n        ctx.drawImage(img, 0, 0);\n\n        // Draw all text boxes\n        texts.forEach(t => {\n          ctx.filter = \"none\";\n          ctx.font = `${t.fontSize}px Arial`;\n          ctx.fillStyle = t.color;\n          ctx.textAlign = \"left\";\n          ctx.fillText(t.text, t.x, t.y + t.fontSize);\n        });\n        resolve(canvas.toDataURL(\"image/jpeg\", compression / 100));\n      };\n      img.src = source;\n    });\n  };\n  const handleDownload = async format => {\n    if (file !== null && file !== void 0 && file.type.includes(\"pdf\")) {\n      const link = document.createElement(\"a\");\n      link.href = imageURL;\n      link.download = \"docfixer.pdf\";\n      link.click();\n      return;\n    }\n    const finalDataURL = await generateFinalImage();\n    if (!finalDataURL) return;\n    const link = document.createElement(\"a\");\n    link.href = finalDataURL;\n    link.download = `docfixer.${format}`;\n    link.click();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Tools\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tool-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Background Remover\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleRemoveBG,\n          children: \"Remove BG\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tool-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Text Overlay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addText,\n          children: \"+ Add Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), selectedTextId && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: ((_texts$find = texts.find(t => t.id === selectedTextId)) === null || _texts$find === void 0 ? void 0 : _texts$find.text) || \"\",\n            onChange: e => updateText(selectedTextId, \"text\", e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: \"10\",\n            max: \"100\",\n            value: ((_texts$find2 = texts.find(t => t.id === selectedTextId)) === null || _texts$find2 === void 0 ? void 0 : _texts$find2.fontSize) || 24,\n            onChange: e => updateText(selectedTextId, \"fontSize\", parseInt(e.target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowColorPicker(!showColorPicker),\n            children: \"Color\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this), showColorPicker && /*#__PURE__*/_jsxDEV(HexColorPicker, {\n            color: ((_texts$find3 = texts.find(t => t.id === selectedTextId)) === null || _texts$find3 === void 0 ? void 0 : _texts$find3.color) || \"#ff0000\",\n            onChange: color => updateText(selectedTextId, \"color\", color)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteText(selectedTextId),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tool-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Filters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: filter,\n          onChange: e => setFilter(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"none\",\n            children: \"None\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"grayscale\",\n            children: \"Grayscale\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"sepia\",\n            children: \"Sepia\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"invert\",\n            children: \"Invert\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tool-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Compression\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"10\",\n          max: \"100\",\n          value: compression,\n          onChange: e => setCompression(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [compression, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tool-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Download\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDownload(\"jpeg\"),\n          children: \"JPEG\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDownload(\"png\"),\n          children: \"PNG\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDownload(\"pdf\"),\n          children: \"PDF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editor\",\n      onDrop: handleDrop,\n      onDragOver: handleDragOver,\n      children: [!imageURL && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-zone\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Drag & Drop file here or click to upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"image/*,application/pdf\",\n          onChange: handleFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }, this), imageURL && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"preview-area\",\n        style: {\n          position: \"relative\"\n        },\n        children: [(file === null || file === void 0 ? void 0 : file.type.startsWith(\"image/\")) && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: \"relative\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: processedImage || imageURL,\n            alt: \"Preview\",\n            style: {\n              maxWidth: \"100%\",\n              ...getFilterStyle()\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 17\n          }, this), texts.map(t => /*#__PURE__*/_jsxDEV(Rnd, {\n            size: {\n              width: t.width,\n              height: t.height\n            },\n            position: {\n              x: t.x,\n              y: t.y\n            },\n            onDragStop: (e, d) => {\n              updateText(t.id, \"x\", d.x);\n              updateText(t.id, \"y\", d.y);\n            },\n            onResizeStop: (e, direction, ref, delta, position) => {\n              updateText(t.id, \"width\", parseInt(ref.style.width));\n              updateText(t.id, \"height\", parseInt(ref.style.height));\n              updateText(t.id, \"x\", position.x);\n              updateText(t.id, \"y\", position.y);\n            },\n            onClick: () => setSelectedTextId(t.id),\n            style: {\n              border: selectedTextId === t.id ? \"2px dashed #007bff\" : \"none\",\n              padding: \"2px\",\n              cursor: \"move\",\n              backgroundColor: \"rgba(255,255,255,0.2)\",\n              color: t.color,\n              fontSize: t.fontSize,\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              overflow: \"hidden\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              contentEditable: true,\n              suppressContentEditableWarning: true,\n              style: {\n                width: \"100%\",\n                height: \"100%\",\n                textAlign: \"center\",\n                cursor: \"text\"\n              },\n              onInput: e => updateText(t.id, \"text\", e.currentTarget.textContent),\n              children: t.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 21\n            }, this)\n          }, t.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 15\n        }, this), (file === null || file === void 0 ? void 0 : file.type.includes(\"pdf\")) && /*#__PURE__*/_jsxDEV(\"embed\", {\n          src: imageURL,\n          type: \"application/pdf\",\n          width: \"100%\",\n          height: \"600px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"oFX94CpeTQg87WwrHGkn/JOnc3Q=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","Rnd","HexColorPicker","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","_texts$find","_texts$find2","_texts$find3","file","setFile","imageURL","setImageURL","processedImage","setProcessedImage","filter","setFilter","compression","setCompression","texts","setTexts","selectedTextId","setSelectedTextId","showColorPicker","setShowColorPicker","handleFileChange","e","uploadedFile","target","files","URL","createObjectURL","handleDrop","preventDefault","droppedFile","dataTransfer","handleDragOver","handleRemoveBG","alert","type","includes","formData","FormData","append","res","post","headers","responseType","url","data","err","message","getFilterStyle","addText","newText","id","Date","now","text","color","fontSize","x","y","width","height","updateText","key","value","map","t","deleteText","generateFinalImage","Promise","resolve","source","img","Image","crossOrigin","onload","canvas","document","createElement","ctx","getContext","drawImage","forEach","font","fillStyle","textAlign","fillText","toDataURL","src","handleDownload","format","link","href","download","click","finalDataURL","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","find","onChange","min","max","parseInt","onDrop","onDragOver","accept","style","position","startsWith","alt","maxWidth","size","onDragStop","d","onResizeStop","direction","ref","delta","border","padding","cursor","backgroundColor","display","alignItems","justifyContent","overflow","contentEditable","suppressContentEditableWarning","onInput","currentTarget","textContent","_c","$RefreshReg$"],"sources":["C:/Users/sahil/OneDrive/Desktop/docfixer/frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Rnd } from \"react-rnd\";\r\nimport { HexColorPicker } from \"react-colorful\"; // install via npm i react-colorful\r\nimport \"./styles/App.css\";\r\n\r\nfunction App() {\r\n  const [file, setFile] = useState(null);\r\n  const [imageURL, setImageURL] = useState(null);\r\n  const [processedImage, setProcessedImage] = useState(null);\r\n  const [filter, setFilter] = useState(\"none\");\r\n  const [compression, setCompression] = useState(100);\r\n\r\n  // Text overlay state\r\n  const [texts, setTexts] = useState([]);\r\n  const [selectedTextId, setSelectedTextId] = useState(null);\r\n  const [showColorPicker, setShowColorPicker] = useState(false);\r\n\r\n  const handleFileChange = (e) => {\r\n    const uploadedFile = e.target.files[0];\r\n    if (!uploadedFile) return;\r\n    setFile(uploadedFile);\r\n    setImageURL(URL.createObjectURL(uploadedFile));\r\n    setProcessedImage(null);\r\n    setTexts([]);\r\n  };\r\n\r\n  const handleDrop = (e) => {\r\n    e.preventDefault();\r\n    const droppedFile = e.dataTransfer.files[0];\r\n    if (droppedFile) {\r\n      setFile(droppedFile);\r\n      setImageURL(URL.createObjectURL(droppedFile));\r\n      setProcessedImage(null);\r\n      setTexts([]);\r\n    }\r\n  };\r\n\r\n  const handleDragOver = (e) => e.preventDefault();\r\n\r\n  // Remove.bg\r\n  const handleRemoveBG = async () => {\r\n    if (!file) return alert(\"Upload an image first\");\r\n    if (file.type.includes(\"pdf\")) return alert(\"Remove.bg works only with images\");\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"image_file\", file);\r\n    try {\r\n      const res = await axios.post(\"https://api.remove.bg/v1.0/removebg\", formData, {\r\n        headers: {\r\n          \"X-Api-Key\": \"VSNXBaMjvgBp6NjjRheLV3cW\",\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n        responseType: \"blob\",\r\n      });\r\n      const url = URL.createObjectURL(res.data);\r\n      setProcessedImage(url);\r\n    } catch (err) {\r\n      alert(\"Remove.bg API error: \" + err.message);\r\n    }\r\n  };\r\n\r\n  const getFilterStyle = () => {\r\n    switch (filter) {\r\n      case \"grayscale\":\r\n        return { filter: \"grayscale(100%)\" };\r\n      case \"sepia\":\r\n        return { filter: \"sepia(100%)\" };\r\n      case \"invert\":\r\n        return { filter: \"invert(100%)\" };\r\n      default:\r\n        return {};\r\n    }\r\n  };\r\n\r\n  // Add new text box\r\n  const addText = () => {\r\n    const newText = {\r\n      id: Date.now(),\r\n      text: \"New Text\",\r\n      color: \"#ff0000\",\r\n      fontSize: 24,\r\n      x: 50,\r\n      y: 50,\r\n      width: 200,\r\n      height: 50,\r\n    };\r\n    setTexts([...texts, newText]);\r\n    setSelectedTextId(newText.id);\r\n  };\r\n\r\n  const updateText = (id, key, value) => {\r\n    setTexts(texts.map((t) => (t.id === id ? { ...t, [key]: value } : t)));\r\n  };\r\n\r\n  const deleteText = (id) => {\r\n    setTexts(texts.filter((t) => t.id !== id));\r\n    if (selectedTextId === id) setSelectedTextId(null);\r\n  };\r\n\r\n  const generateFinalImage = () => {\r\n    return new Promise((resolve) => {\r\n      const source = processedImage || imageURL;\r\n      if (!source) return resolve(null);\r\n\r\n      const img = new Image();\r\n      img.crossOrigin = \"anonymous\";\r\n      img.onload = () => {\r\n        const canvas = document.createElement(\"canvas\");\r\n        const ctx = canvas.getContext(\"2d\");\r\n        canvas.width = img.width;\r\n        canvas.height = img.height;\r\n\r\n        ctx.filter =\r\n          filter === \"grayscale\"\r\n            ? \"grayscale(100%)\"\r\n            : filter === \"sepia\"\r\n            ? \"sepia(100%)\"\r\n            : filter === \"invert\"\r\n            ? \"invert(100%)\"\r\n            : \"none\";\r\n\r\n        ctx.drawImage(img, 0, 0);\r\n\r\n        // Draw all text boxes\r\n        texts.forEach((t) => {\r\n          ctx.filter = \"none\";\r\n          ctx.font = `${t.fontSize}px Arial`;\r\n          ctx.fillStyle = t.color;\r\n          ctx.textAlign = \"left\";\r\n          ctx.fillText(t.text, t.x, t.y + t.fontSize);\r\n        });\r\n\r\n        resolve(canvas.toDataURL(\"image/jpeg\", compression / 100));\r\n      };\r\n      img.src = source;\r\n    });\r\n  };\r\n\r\n  const handleDownload = async (format) => {\r\n    if (file?.type.includes(\"pdf\")) {\r\n      const link = document.createElement(\"a\");\r\n      link.href = imageURL;\r\n      link.download = \"docfixer.pdf\";\r\n      link.click();\r\n      return;\r\n    }\r\n\r\n    const finalDataURL = await generateFinalImage();\r\n    if (!finalDataURL) return;\r\n    const link = document.createElement(\"a\");\r\n    link.href = finalDataURL;\r\n    link.download = `docfixer.${format}`;\r\n    link.click();\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <div className=\"sidebar\">\r\n        <h2>Tools</h2>\r\n        <div className=\"tool-section\">\r\n          <h3>Background Remover</h3>\r\n          <button onClick={handleRemoveBG}>Remove BG</button>\r\n        </div>\r\n\r\n        <div className=\"tool-section\">\r\n          <h3>Text Overlay</h3>\r\n          <button onClick={addText}>+ Add Text</button>\r\n          {selectedTextId && (\r\n            <>\r\n              <input\r\n                type=\"text\"\r\n                value={texts.find((t) => t.id === selectedTextId)?.text || \"\"}\r\n                onChange={(e) =>\r\n                  updateText(selectedTextId, \"text\", e.target.value)\r\n                }\r\n              />\r\n              <input\r\n                type=\"number\"\r\n                min=\"10\"\r\n                max=\"100\"\r\n                value={texts.find((t) => t.id === selectedTextId)?.fontSize || 24}\r\n                onChange={(e) =>\r\n                  updateText(selectedTextId, \"fontSize\", parseInt(e.target.value))\r\n                }\r\n              />\r\n              <button onClick={() => setShowColorPicker(!showColorPicker)}>\r\n                Color\r\n              </button>\r\n              {showColorPicker && (\r\n                <HexColorPicker\r\n                  color={texts.find((t) => t.id === selectedTextId)?.color || \"#ff0000\"}\r\n                  onChange={(color) => updateText(selectedTextId, \"color\", color)}\r\n                />\r\n              )}\r\n              <button onClick={() => deleteText(selectedTextId)}>Delete</button>\r\n            </>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"tool-section\">\r\n          <h3>Filters</h3>\r\n          <select value={filter} onChange={(e) => setFilter(e.target.value)}>\r\n            <option value=\"none\">None</option>\r\n            <option value=\"grayscale\">Grayscale</option>\r\n            <option value=\"sepia\">Sepia</option>\r\n            <option value=\"invert\">Invert</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div className=\"tool-section\">\r\n          <h3>Compression</h3>\r\n          <input\r\n            type=\"range\"\r\n            min=\"10\"\r\n            max=\"100\"\r\n            value={compression}\r\n            onChange={(e) => setCompression(e.target.value)}\r\n          />\r\n          <span>{compression}%</span>\r\n        </div>\r\n\r\n        <div className=\"tool-section\">\r\n          <h3>Download</h3>\r\n          <button onClick={() => handleDownload(\"jpeg\")}>JPEG</button>\r\n          <button onClick={() => handleDownload(\"png\")}>PNG</button>\r\n          <button onClick={() => handleDownload(\"pdf\")}>PDF</button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"editor\" onDrop={handleDrop} onDragOver={handleDragOver}>\r\n        {!imageURL && (\r\n          <div className=\"upload-zone\">\r\n            <p>Drag & Drop file here or click to upload</p>\r\n            <input\r\n              type=\"file\"\r\n              accept=\"image/*,application/pdf\"\r\n              onChange={handleFileChange}\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        {imageURL && (\r\n          <div className=\"preview-area\" style={{ position: \"relative\" }}>\r\n            {file?.type.startsWith(\"image/\") && (\r\n              <div style={{ position: \"relative\" }}>\r\n                <img\r\n                  src={processedImage || imageURL}\r\n                  alt=\"Preview\"\r\n                  style={{ maxWidth: \"100%\", ...getFilterStyle() }}\r\n                />\r\n                {texts.map((t) => (\r\n                  <Rnd\r\n                    key={t.id}\r\n                    size={{ width: t.width, height: t.height }}\r\n                    position={{ x: t.x, y: t.y }}\r\n                    onDragStop={(e, d) => {\r\n                      updateText(t.id, \"x\", d.x);\r\n                      updateText(t.id, \"y\", d.y);\r\n                    }}\r\n                    onResizeStop={(e, direction, ref, delta, position) => {\r\n                      updateText(t.id, \"width\", parseInt(ref.style.width));\r\n                      updateText(t.id, \"height\", parseInt(ref.style.height));\r\n                      updateText(t.id, \"x\", position.x);\r\n                      updateText(t.id, \"y\", position.y);\r\n                    }}\r\n                    onClick={() => setSelectedTextId(t.id)}\r\n                    style={{\r\n                      border: selectedTextId === t.id ? \"2px dashed #007bff\" : \"none\",\r\n                      padding: \"2px\",\r\n                      cursor: \"move\",\r\n                      backgroundColor: \"rgba(255,255,255,0.2)\",\r\n                      color: t.color,\r\n                      fontSize: t.fontSize,\r\n                      display: \"flex\",\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      overflow: \"hidden\",\r\n                    }}\r\n                  >\r\n                    <div\r\n                      contentEditable\r\n                      suppressContentEditableWarning\r\n                      style={{\r\n                        width: \"100%\",\r\n                        height: \"100%\",\r\n                        textAlign: \"center\",\r\n                        cursor: \"text\",\r\n                      }}\r\n                      onInput={(e) =>\r\n                        updateText(t.id, \"text\", e.currentTarget.textContent)\r\n                      }\r\n                    >\r\n                      {t.text}\r\n                    </div>\r\n                  </Rnd>\r\n                ))}\r\n              </div>\r\n            )}\r\n\r\n            {file?.type.includes(\"pdf\") && (\r\n              <embed src={imageURL} type=\"application/pdf\" width=\"100%\" height=\"600px\" />\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}