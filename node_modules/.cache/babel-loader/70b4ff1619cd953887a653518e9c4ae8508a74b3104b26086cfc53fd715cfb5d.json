{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sahil\\\\OneDrive\\\\Desktop\\\\docfixer\\\\frontend\\\\src\\\\components\\\\ScannerConverter.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ScannerConverter({\n  file,\n  onUpdate\n}) {\n  const applyScanner = () => {\n    const canvas = document.createElement(\"canvas\");\n    const img = document.createElement(\"img\");\n    img.src = file;\n    img.onload = () => {\n      canvas.width = img.width;\n      canvas.height = img.height;\n      const ctx = canvas.getContext(\"2d\");\n      ctx.drawImage(img, 0, 0);\n      const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n      for (let i = 0; i < imageData.data.length; i += 4) {\n        const avg = (imageData.data[i] + imageData.data[i + 1] + imageData.data[i + 2]) / 3;\n        imageData.data[i] = avg + 40;\n        imageData.data[i + 1] = avg + 40;\n        imageData.data[i + 2] = avg + 40;\n      }\n      ctx.putImageData(imageData, 0, 0);\n      onUpdate(canvas.toDataURL(\"image/png\"));\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: \"20px 0\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Scanner Converter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: applyScanner,\n      children: \"Apply Scanner Effect\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), file && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: file,\n      style: {\n        maxWidth: \"300px\",\n        marginTop: \"10px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_c = ScannerConverter;\nexport default ScannerConverter;\nvar _c;\n$RefreshReg$(_c, \"ScannerConverter\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ScannerConverter","file","onUpdate","applyScanner","canvas","document","createElement","img","src","onload","width","height","ctx","getContext","drawImage","imageData","getImageData","i","data","length","avg","putImageData","toDataURL","style","margin","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","maxWidth","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/sahil/OneDrive/Desktop/docfixer/frontend/src/components/ScannerConverter.js"],"sourcesContent":["import React from \"react\";\r\n\r\nfunction ScannerConverter({ file, onUpdate }) {\r\n  const applyScanner = () => {\r\n    const canvas = document.createElement(\"canvas\");\r\n    const img = document.createElement(\"img\");\r\n    img.src = file;\r\n    img.onload = () => {\r\n      canvas.width = img.width;\r\n      canvas.height = img.height;\r\n      const ctx = canvas.getContext(\"2d\");\r\n      ctx.drawImage(img, 0, 0);\r\n      const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\r\n      for (let i = 0; i < imageData.data.length; i += 4) {\r\n        const avg = (imageData.data[i] + imageData.data[i + 1] + imageData.data[i + 2]) / 3;\r\n        imageData.data[i] = avg + 40;\r\n        imageData.data[i + 1] = avg + 40;\r\n        imageData.data[i + 2] = avg + 40;\r\n      }\r\n      ctx.putImageData(imageData, 0, 0);\r\n      onUpdate(canvas.toDataURL(\"image/png\"));\r\n    };\r\n  };\r\n\r\n  return (\r\n    <div style={{ margin: \"20px 0\" }}>\r\n      <h3>Scanner Converter</h3>\r\n      <button onClick={applyScanner}>Apply Scanner Effect</button>\r\n      {file && <img src={file} style={{ maxWidth: \"300px\", marginTop: \"10px\" }} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ScannerConverter;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,gBAAgBA,CAAC;EAAEC,IAAI;EAAEC;AAAS,CAAC,EAAE;EAC5C,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;IAC/C,MAAMC,GAAG,GAAGF,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;IACzCC,GAAG,CAACC,GAAG,GAAGP,IAAI;IACdM,GAAG,CAACE,MAAM,GAAG,MAAM;MACjBL,MAAM,CAACM,KAAK,GAAGH,GAAG,CAACG,KAAK;MACxBN,MAAM,CAACO,MAAM,GAAGJ,GAAG,CAACI,MAAM;MAC1B,MAAMC,GAAG,GAAGR,MAAM,CAACS,UAAU,CAAC,IAAI,CAAC;MACnCD,GAAG,CAACE,SAAS,CAACP,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;MACxB,MAAMQ,SAAS,GAAGH,GAAG,CAACI,YAAY,CAAC,CAAC,EAAE,CAAC,EAAEZ,MAAM,CAACM,KAAK,EAAEN,MAAM,CAACO,MAAM,CAAC;MACrE,KAAK,IAAIM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,SAAS,CAACG,IAAI,CAACC,MAAM,EAAEF,CAAC,IAAI,CAAC,EAAE;QACjD,MAAMG,GAAG,GAAG,CAACL,SAAS,CAACG,IAAI,CAACD,CAAC,CAAC,GAAGF,SAAS,CAACG,IAAI,CAACD,CAAC,GAAG,CAAC,CAAC,GAAGF,SAAS,CAACG,IAAI,CAACD,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;QACnFF,SAAS,CAACG,IAAI,CAACD,CAAC,CAAC,GAAGG,GAAG,GAAG,EAAE;QAC5BL,SAAS,CAACG,IAAI,CAACD,CAAC,GAAG,CAAC,CAAC,GAAGG,GAAG,GAAG,EAAE;QAChCL,SAAS,CAACG,IAAI,CAACD,CAAC,GAAG,CAAC,CAAC,GAAGG,GAAG,GAAG,EAAE;MAClC;MACAR,GAAG,CAACS,YAAY,CAACN,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC;MACjCb,QAAQ,CAACE,MAAM,CAACkB,SAAS,CAAC,WAAW,CAAC,CAAC;IACzC,CAAC;EACH,CAAC;EAED,oBACEvB,OAAA;IAAKwB,KAAK,EAAE;MAAEC,MAAM,EAAE;IAAS,CAAE;IAAAC,QAAA,gBAC/B1B,OAAA;MAAA0B,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1B9B,OAAA;MAAQ+B,OAAO,EAAE3B,YAAa;MAAAsB,QAAA,EAAC;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC3D5B,IAAI,iBAAIF,OAAA;MAAKS,GAAG,EAAEP,IAAK;MAACsB,KAAK,EAAE;QAAEQ,QAAQ,EAAE,OAAO;QAAEC,SAAS,EAAE;MAAO;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzE,CAAC;AAEV;AAACI,EAAA,GA7BQjC,gBAAgB;AA+BzB,eAAeA,gBAAgB;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}